// niosII_system.v

// Generated using ACDS version 12.1sp1 243 at 2015.03.01.15:58:49

`timescale 1 ps / 1 ps
module niosII_system (
		input  wire        reset_0_reset_n,                                  //                                     reset_0.reset_n
		input  wire        audio_0_external_interface_ADCDAT,                //                  audio_0_external_interface.ADCDAT
		input  wire        audio_0_external_interface_ADCLRCK,               //                                            .ADCLRCK
		input  wire        audio_0_external_interface_BCLK,                  //                                            .BCLK
		output wire        audio_0_external_interface_DACDAT,                //                                            .DACDAT
		input  wire        audio_0_external_interface_DACLRCK,               //                                            .DACLRCK
		inout  wire        audio_and_video_config_0_external_interface_SDAT, // audio_and_video_config_0_external_interface.SDAT
		output wire        audio_and_video_config_0_external_interface_SCLK, //                                            .SCLK
		input  wire        reset_reset_n,                                    //                                       reset.reset_n
		input  wire        clk_clk,                                          //                                         clk.clk
		input  wire        clk_0_clk,                                        //                                       clk_0.clk
		inout  wire [15:0] sram_0_external_interface_DQ,                     //                   sram_0_external_interface.DQ
		output wire [17:0] sram_0_external_interface_ADDR,                   //                                            .ADDR
		output wire        sram_0_external_interface_LB_N,                   //                                            .LB_N
		output wire        sram_0_external_interface_UB_N,                   //                                            .UB_N
		output wire        sram_0_external_interface_CE_N,                   //                                            .CE_N
		output wire        sram_0_external_interface_OE_N,                   //                                            .OE_N
		output wire        sram_0_external_interface_WE_N                    //                                            .WE_N
	);

	wire          up_clocks_0_audio_clk_clk;                                                                                            // up_clocks_0:AUD_CLK -> [WaveformGenerator_0:csi_clk12, audio_0:clk, rst_controller_001:clk]
	wire          waveformgenerator_0_waveform_right_valid;                                                                             // WaveformGenerator_0:aso_valid_waveform_right -> audio_0:to_dac_right_channel_valid
	wire   [15:0] waveformgenerator_0_waveform_right_data;                                                                              // WaveformGenerator_0:aso_data_waveform_right -> audio_0:to_dac_right_channel_data
	wire          waveformgenerator_0_waveform_right_ready;                                                                             // audio_0:to_dac_right_channel_ready -> WaveformGenerator_0:aso_ready_waveform_right
	wire          waveformgenerator_0_waveform_left_valid;                                                                              // WaveformGenerator_0:aso_valid_waveform_left -> audio_0:to_dac_left_channel_valid
	wire   [15:0] waveformgenerator_0_waveform_left_data;                                                                               // WaveformGenerator_0:aso_data_waveform_left -> audio_0:to_dac_left_channel_data
	wire          waveformgenerator_0_waveform_left_ready;                                                                              // audio_0:to_dac_left_channel_ready -> WaveformGenerator_0:aso_ready_waveform_left
	wire          nios2_qsys_0_instruction_master_waitrequest;                                                                          // nios2_qsys_0_instruction_master_translator:av_waitrequest -> nios2_qsys_0:i_waitrequest
	wire   [20:0] nios2_qsys_0_instruction_master_address;                                                                              // nios2_qsys_0:i_address -> nios2_qsys_0_instruction_master_translator:av_address
	wire          nios2_qsys_0_instruction_master_read;                                                                                 // nios2_qsys_0:i_read -> nios2_qsys_0_instruction_master_translator:av_read
	wire   [31:0] nios2_qsys_0_instruction_master_readdata;                                                                             // nios2_qsys_0_instruction_master_translator:av_readdata -> nios2_qsys_0:i_readdata
	wire          nios2_qsys_0_data_master_waitrequest;                                                                                 // nios2_qsys_0_data_master_translator:av_waitrequest -> nios2_qsys_0:d_waitrequest
	wire   [31:0] nios2_qsys_0_data_master_writedata;                                                                                   // nios2_qsys_0:d_writedata -> nios2_qsys_0_data_master_translator:av_writedata
	wire   [20:0] nios2_qsys_0_data_master_address;                                                                                     // nios2_qsys_0:d_address -> nios2_qsys_0_data_master_translator:av_address
	wire          nios2_qsys_0_data_master_write;                                                                                       // nios2_qsys_0:d_write -> nios2_qsys_0_data_master_translator:av_write
	wire          nios2_qsys_0_data_master_read;                                                                                        // nios2_qsys_0:d_read -> nios2_qsys_0_data_master_translator:av_read
	wire   [31:0] nios2_qsys_0_data_master_readdata;                                                                                    // nios2_qsys_0_data_master_translator:av_readdata -> nios2_qsys_0:d_readdata
	wire          nios2_qsys_0_data_master_debugaccess;                                                                                 // nios2_qsys_0:jtag_debug_module_debugaccess_to_roms -> nios2_qsys_0_data_master_translator:av_debugaccess
	wire    [3:0] nios2_qsys_0_data_master_byteenable;                                                                                  // nios2_qsys_0:d_byteenable -> nios2_qsys_0_data_master_translator:av_byteenable
	wire   [31:0] nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_writedata;                                              // nios2_qsys_0_jtag_debug_module_translator:av_writedata -> nios2_qsys_0:jtag_debug_module_writedata
	wire    [8:0] nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_address;                                                // nios2_qsys_0_jtag_debug_module_translator:av_address -> nios2_qsys_0:jtag_debug_module_address
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_chipselect;                                             // nios2_qsys_0_jtag_debug_module_translator:av_chipselect -> nios2_qsys_0:jtag_debug_module_select
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_write;                                                  // nios2_qsys_0_jtag_debug_module_translator:av_write -> nios2_qsys_0:jtag_debug_module_write
	wire   [31:0] nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_readdata;                                               // nios2_qsys_0:jtag_debug_module_readdata -> nios2_qsys_0_jtag_debug_module_translator:av_readdata
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_begintransfer;                                          // nios2_qsys_0_jtag_debug_module_translator:av_begintransfer -> nios2_qsys_0:jtag_debug_module_begintransfer
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_debugaccess;                                            // nios2_qsys_0_jtag_debug_module_translator:av_debugaccess -> nios2_qsys_0:jtag_debug_module_debugaccess
	wire    [3:0] nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_byteenable;                                             // nios2_qsys_0_jtag_debug_module_translator:av_byteenable -> nios2_qsys_0:jtag_debug_module_byteenable
	wire   [15:0] sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_writedata;                                                    // sram_0_avalon_sram_slave_translator:av_writedata -> sram_0:writedata
	wire   [17:0] sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_address;                                                      // sram_0_avalon_sram_slave_translator:av_address -> sram_0:address
	wire          sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_write;                                                        // sram_0_avalon_sram_slave_translator:av_write -> sram_0:write
	wire          sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_read;                                                         // sram_0_avalon_sram_slave_translator:av_read -> sram_0:read
	wire   [15:0] sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdata;                                                     // sram_0:readdata -> sram_0_avalon_sram_slave_translator:av_readdata
	wire          sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdatavalid;                                                // sram_0:readdatavalid -> sram_0_avalon_sram_slave_translator:av_readdatavalid
	wire    [1:0] sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_byteenable;                                                   // sram_0_avalon_sram_slave_translator:av_byteenable -> sram_0:byteenable
	wire   [31:0] onchip_memory2_0_s1_translator_avalon_anti_slave_0_writedata;                                                         // onchip_memory2_0_s1_translator:av_writedata -> onchip_memory2_0:writedata
	wire   [11:0] onchip_memory2_0_s1_translator_avalon_anti_slave_0_address;                                                           // onchip_memory2_0_s1_translator:av_address -> onchip_memory2_0:address
	wire          onchip_memory2_0_s1_translator_avalon_anti_slave_0_chipselect;                                                        // onchip_memory2_0_s1_translator:av_chipselect -> onchip_memory2_0:chipselect
	wire          onchip_memory2_0_s1_translator_avalon_anti_slave_0_clken;                                                             // onchip_memory2_0_s1_translator:av_clken -> onchip_memory2_0:clken
	wire          onchip_memory2_0_s1_translator_avalon_anti_slave_0_write;                                                             // onchip_memory2_0_s1_translator:av_write -> onchip_memory2_0:write
	wire   [31:0] onchip_memory2_0_s1_translator_avalon_anti_slave_0_readdata;                                                          // onchip_memory2_0:readdata -> onchip_memory2_0_s1_translator:av_readdata
	wire    [3:0] onchip_memory2_0_s1_translator_avalon_anti_slave_0_byteenable;                                                        // onchip_memory2_0_s1_translator:av_byteenable -> onchip_memory2_0:byteenable
	wire   [15:0] timer_0_s1_translator_avalon_anti_slave_0_writedata;                                                                  // timer_0_s1_translator:av_writedata -> timer_0:writedata
	wire    [2:0] timer_0_s1_translator_avalon_anti_slave_0_address;                                                                    // timer_0_s1_translator:av_address -> timer_0:address
	wire          timer_0_s1_translator_avalon_anti_slave_0_chipselect;                                                                 // timer_0_s1_translator:av_chipselect -> timer_0:chipselect
	wire          timer_0_s1_translator_avalon_anti_slave_0_write;                                                                      // timer_0_s1_translator:av_write -> timer_0:write_n
	wire   [15:0] timer_0_s1_translator_avalon_anti_slave_0_readdata;                                                                   // timer_0:readdata -> timer_0_s1_translator:av_readdata
	wire    [0:0] sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_address;                                                    // sysid_qsys_0_control_slave_translator:av_address -> sysid_qsys_0:address
	wire   [31:0] sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_readdata;                                                   // sysid_qsys_0:readdata -> sysid_qsys_0_control_slave_translator:av_readdata
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_waitrequest;                                             // jtag_uart_0:av_waitrequest -> jtag_uart_0_avalon_jtag_slave_translator:av_waitrequest
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_writedata;                                               // jtag_uart_0_avalon_jtag_slave_translator:av_writedata -> jtag_uart_0:av_writedata
	wire    [0:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_address;                                                 // jtag_uart_0_avalon_jtag_slave_translator:av_address -> jtag_uart_0:av_address
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_chipselect;                                              // jtag_uart_0_avalon_jtag_slave_translator:av_chipselect -> jtag_uart_0:av_chipselect
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_write;                                                   // jtag_uart_0_avalon_jtag_slave_translator:av_write -> jtag_uart_0:av_write_n
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_read;                                                    // jtag_uart_0_avalon_jtag_slave_translator:av_read -> jtag_uart_0:av_read_n
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_readdata;                                                // jtag_uart_0:av_readdata -> jtag_uart_0_avalon_jtag_slave_translator:av_readdata
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_waitrequest;                           // audio_and_video_config_0:waitrequest -> audio_and_video_config_0_avalon_av_config_slave_translator:av_waitrequest
	wire   [31:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_writedata;                             // audio_and_video_config_0_avalon_av_config_slave_translator:av_writedata -> audio_and_video_config_0:writedata
	wire    [1:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_address;                               // audio_and_video_config_0_avalon_av_config_slave_translator:av_address -> audio_and_video_config_0:address
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_write;                                 // audio_and_video_config_0_avalon_av_config_slave_translator:av_write -> audio_and_video_config_0:write
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_read;                                  // audio_and_video_config_0_avalon_av_config_slave_translator:av_read -> audio_and_video_config_0:read
	wire   [31:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_readdata;                              // audio_and_video_config_0:readdata -> audio_and_video_config_0_avalon_av_config_slave_translator:av_readdata
	wire    [3:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_byteenable;                            // audio_and_video_config_0_avalon_av_config_slave_translator:av_byteenable -> audio_and_video_config_0:byteenable
	wire   [63:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice0_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice0
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice0_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice0
	wire   [63:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice2_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice2
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice2_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice2
	wire   [63:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice1_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice1
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice1_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice1
	wire    [7:0] waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice0_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice0
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice0_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice0
	wire    [7:0] waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice1_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice1
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice1_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice1
	wire    [7:0] waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_writedata;                                             // WaveformGenerator_0_wave_shapes_translator:av_writedata -> WaveformGenerator_0:avs_writedata_wave_shapes
	wire          waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_write;                                                 // WaveformGenerator_0_wave_shapes_translator:av_write -> WaveformGenerator_0:avs_write_n_wave_shapes
	wire    [7:0] waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice2_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice2
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice2_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice2
	wire    [7:0] waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice7_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice7
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice7_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice7
	wire   [63:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice4_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice4
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice4_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice4
	wire   [63:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice3_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice3
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice3_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice3
	wire   [63:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice5_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice5
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice5_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice5
	wire   [63:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice6_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice6
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice6_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice6
	wire   [63:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_writedata;                                 // WaveformGenerator_0_phase_increments_voice7_translator:av_writedata -> WaveformGenerator_0:avs_writedata_phase_increments_voice7
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_write;                                     // WaveformGenerator_0_phase_increments_voice7_translator:av_write -> WaveformGenerator_0:avs_write_n_phase_increments_voice7
	wire    [7:0] waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice3_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice3
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice3_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice3
	wire    [7:0] waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice4_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice4
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice4_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice4
	wire    [7:0] waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice5_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice5
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice5_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice5
	wire    [7:0] waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_writedata;                                         // WaveformGenerator_0_note_end_voice6_translator:av_writedata -> WaveformGenerator_0:avs_writedata_note_end_voice6
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_write;                                             // WaveformGenerator_0_note_end_voice6_translator:av_write -> WaveformGenerator_0:avs_write_n_note_end_voice6
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_waitrequest;                                     // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> nios2_qsys_0_instruction_master_translator:uav_waitrequest
	wire    [2:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_burstcount;                                      // nios2_qsys_0_instruction_master_translator:uav_burstcount -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_writedata;                                       // nios2_qsys_0_instruction_master_translator:uav_writedata -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [20:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_address;                                         // nios2_qsys_0_instruction_master_translator:uav_address -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_lock;                                            // nios2_qsys_0_instruction_master_translator:uav_lock -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_write;                                           // nios2_qsys_0_instruction_master_translator:uav_write -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_read;                                            // nios2_qsys_0_instruction_master_translator:uav_read -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdata;                                        // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> nios2_qsys_0_instruction_master_translator:uav_readdata
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_debugaccess;                                     // nios2_qsys_0_instruction_master_translator:uav_debugaccess -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_byteenable;                                      // nios2_qsys_0_instruction_master_translator:uav_byteenable -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdatavalid;                                   // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> nios2_qsys_0_instruction_master_translator:uav_readdatavalid
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_waitrequest;                                            // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> nios2_qsys_0_data_master_translator:uav_waitrequest
	wire    [2:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_burstcount;                                             // nios2_qsys_0_data_master_translator:uav_burstcount -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_writedata;                                              // nios2_qsys_0_data_master_translator:uav_writedata -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [20:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_address;                                                // nios2_qsys_0_data_master_translator:uav_address -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_address
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_lock;                                                   // nios2_qsys_0_data_master_translator:uav_lock -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_write;                                                  // nios2_qsys_0_data_master_translator:uav_write -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_write
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_read;                                                   // nios2_qsys_0_data_master_translator:uav_read -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdata;                                               // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_readdata -> nios2_qsys_0_data_master_translator:uav_readdata
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_debugaccess;                                            // nios2_qsys_0_data_master_translator:uav_debugaccess -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_byteenable;                                             // nios2_qsys_0_data_master_translator:uav_byteenable -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdatavalid;                                          // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> nios2_qsys_0_data_master_translator:uav_readdatavalid
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // nios2_qsys_0_jtag_debug_module_translator:uav_waitrequest -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> nios2_qsys_0_jtag_debug_module_translator:uav_burstcount
	wire   [31:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                                // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> nios2_qsys_0_jtag_debug_module_translator:uav_writedata
	wire   [20:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                                  // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> nios2_qsys_0_jtag_debug_module_translator:uav_address
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                                    // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> nios2_qsys_0_jtag_debug_module_translator:uav_write
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                                     // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> nios2_qsys_0_jtag_debug_module_translator:uav_lock
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                                     // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> nios2_qsys_0_jtag_debug_module_translator:uav_read
	wire   [31:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // nios2_qsys_0_jtag_debug_module_translator:uav_readdata -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // nios2_qsys_0_jtag_debug_module_translator:uav_readdatavalid -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> nios2_qsys_0_jtag_debug_module_translator:uav_debugaccess
	wire    [3:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> nios2_qsys_0_jtag_debug_module_translator:uav_byteenable
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                              // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                    // sram_0_avalon_sram_slave_translator:uav_waitrequest -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [1:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                     // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sram_0_avalon_sram_slave_translator:uav_burstcount
	wire   [15:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                      // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sram_0_avalon_sram_slave_translator:uav_writedata
	wire   [20:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_address;                                        // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_address -> sram_0_avalon_sram_slave_translator:uav_address
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_write;                                          // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_write -> sram_0_avalon_sram_slave_translator:uav_write
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                           // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sram_0_avalon_sram_slave_translator:uav_lock
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_read;                                           // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_read -> sram_0_avalon_sram_slave_translator:uav_read
	wire   [15:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                       // sram_0_avalon_sram_slave_translator:uav_readdata -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                  // sram_0_avalon_sram_slave_translator:uav_readdatavalid -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                    // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sram_0_avalon_sram_slave_translator:uav_debugaccess
	wire    [1:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                     // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sram_0_avalon_sram_slave_translator:uav_byteenable
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                             // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                   // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                           // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [82:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                    // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                   // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                          // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                        // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [82:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                 // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                              // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [15:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                               // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                              // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                         // onchip_memory2_0_s1_translator:uav_waitrequest -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                          // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> onchip_memory2_0_s1_translator:uav_burstcount
	wire   [31:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                           // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> onchip_memory2_0_s1_translator:uav_writedata
	wire   [20:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_address;                                             // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_address -> onchip_memory2_0_s1_translator:uav_address
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_write;                                               // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_write -> onchip_memory2_0_s1_translator:uav_write
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> onchip_memory2_0_s1_translator:uav_lock
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_read -> onchip_memory2_0_s1_translator:uav_read
	wire   [31:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                            // onchip_memory2_0_s1_translator:uav_readdata -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                       // onchip_memory2_0_s1_translator:uav_readdatavalid -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                         // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> onchip_memory2_0_s1_translator:uav_debugaccess
	wire    [3:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                          // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> onchip_memory2_0_s1_translator:uav_byteenable
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                  // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                        // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                         // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                        // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                               // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                     // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                             // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                      // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                     // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                   // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                    // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                   // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                  // timer_0_s1_translator:uav_waitrequest -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                   // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_0_s1_translator:uav_burstcount
	wire   [31:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                    // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_0_s1_translator:uav_writedata
	wire   [20:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                      // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_0_s1_translator:uav_address
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                        // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_0_s1_translator:uav_write
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                         // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_0_s1_translator:uav_lock
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                         // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_0_s1_translator:uav_read
	wire   [31:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                     // timer_0_s1_translator:uav_readdata -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                // timer_0_s1_translator:uav_readdatavalid -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                  // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_0_s1_translator:uav_debugaccess
	wire    [3:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                   // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_0_s1_translator:uav_byteenable
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                           // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                 // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                         // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                  // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                 // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                        // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                              // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                      // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                               // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                              // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                            // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                             // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                            // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // sysid_qsys_0_control_slave_translator:uav_waitrequest -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sysid_qsys_0_control_slave_translator:uav_burstcount
	wire   [31:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sysid_qsys_0_control_slave_translator:uav_writedata
	wire   [20:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                                      // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> sysid_qsys_0_control_slave_translator:uav_address
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                                        // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> sysid_qsys_0_control_slave_translator:uav_write
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                         // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sysid_qsys_0_control_slave_translator:uav_lock
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                                         // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> sysid_qsys_0_control_slave_translator:uav_read
	wire   [31:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // sysid_qsys_0_control_slave_translator:uav_readdata -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // sysid_qsys_0_control_slave_translator:uav_readdatavalid -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sysid_qsys_0_control_slave_translator:uav_debugaccess
	wire    [3:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sysid_qsys_0_control_slave_translator:uav_byteenable
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	wire   [20:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                                     // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                                      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	wire    [3:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                               // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // audio_and_video_config_0_avalon_av_config_slave_translator:uav_waitrequest -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_burstcount
	wire   [31:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_writedata
	wire   [20:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_address -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_address
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_write -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_write
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_lock -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_lock
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_read -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_read
	wire   [31:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // audio_and_video_config_0_avalon_av_config_slave_translator:uav_readdata -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // audio_and_video_config_0_avalon_av_config_slave_translator:uav_readdatavalid -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_debugaccess
	wire    [3:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> audio_and_video_config_0_avalon_av_config_slave_translator:uav_byteenable
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [100:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [100:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [31:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice0_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice0_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice0_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice0_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice0_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice0_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice0_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice0_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice0_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice0_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice0_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice2_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice2_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice2_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice2_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice2_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice2_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice2_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice2_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice2_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice2_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice2_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice1_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice1_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice1_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice1_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice1_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice1_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice1_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice1_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice1_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice1_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice1_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice0_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice0_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice0_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice0_translator:uav_address
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice0_translator:uav_write
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice0_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice0_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice0_translator:uav_readdata -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice0_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice0_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice0_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice1_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice1_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice1_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice1_translator:uav_address
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice1_translator:uav_write
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice1_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice1_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice1_translator:uav_readdata -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice1_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice1_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice1_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // WaveformGenerator_0_wave_shapes_translator:uav_waitrequest -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_wave_shapes_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_writedata;                               // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_wave_shapes_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_address;                                 // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_wave_shapes_translator:uav_address
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_write;                                   // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_wave_shapes_translator:uav_write
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_lock;                                    // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_wave_shapes_translator:uav_lock
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_read;                                    // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_wave_shapes_translator:uav_read
	wire    [7:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdata;                                // WaveformGenerator_0_wave_shapes_translator:uav_readdata -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // WaveformGenerator_0_wave_shapes_translator:uav_readdatavalid -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_wave_shapes_translator:uav_debugaccess
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_wave_shapes_translator:uav_byteenable
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_data;                             // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice2_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice2_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice2_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice2_translator:uav_address
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice2_translator:uav_write
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice2_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice2_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice2_translator:uav_readdata -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice2_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice2_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice2_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice7_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice7_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice7_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice7_translator:uav_address
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice7_translator:uav_write
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice7_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice7_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice7_translator:uav_readdata -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice7_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice7_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice7_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice4_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice4_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice4_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice4_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice4_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice4_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice4_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice4_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice4_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice4_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice4_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice3_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice3_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice3_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice3_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice3_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice3_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice3_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice3_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice3_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice3_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice3_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice5_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice5_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice5_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice5_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice5_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice5_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice5_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice5_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice5_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice5_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice5_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice6_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice6_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice6_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice6_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice6_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice6_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice6_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice6_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice6_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice6_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice6_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // WaveformGenerator_0_phase_increments_voice7_translator:uav_waitrequest -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [3:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_phase_increments_voice7_translator:uav_burstcount
	wire   [63:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_writedata;                   // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_phase_increments_voice7_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_address;                     // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_phase_increments_voice7_translator:uav_address
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_write;                       // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_phase_increments_voice7_translator:uav_write
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_lock;                        // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_phase_increments_voice7_translator:uav_lock
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_read;                        // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_phase_increments_voice7_translator:uav_read
	wire   [63:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdata;                    // WaveformGenerator_0_phase_increments_voice7_translator:uav_readdata -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // WaveformGenerator_0_phase_increments_voice7_translator:uav_readdatavalid -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_phase_increments_voice7_translator:uav_debugaccess
	wire    [7:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_phase_increments_voice7_translator:uav_byteenable
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid;                // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_data;                 // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready;                // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [136:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [63:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice3_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice3_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice3_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice3_translator:uav_address
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice3_translator:uav_write
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice3_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice3_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice3_translator:uav_readdata -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice3_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice3_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice3_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice4_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice4_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice4_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice4_translator:uav_address
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice4_translator:uav_write
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice4_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice4_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice4_translator:uav_readdata -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice4_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice4_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice4_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice5_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice5_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice5_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice5_translator:uav_address
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice5_translator:uav_write
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice5_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice5_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice5_translator:uav_readdata -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice5_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice5_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice5_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // WaveformGenerator_0_note_end_voice6_translator:uav_waitrequest -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_burstcount -> WaveformGenerator_0_note_end_voice6_translator:uav_burstcount
	wire    [7:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_writedata;                           // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_writedata -> WaveformGenerator_0_note_end_voice6_translator:uav_writedata
	wire   [20:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_address;                             // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_address -> WaveformGenerator_0_note_end_voice6_translator:uav_address
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_write;                               // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_write -> WaveformGenerator_0_note_end_voice6_translator:uav_write
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_lock;                                // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_lock -> WaveformGenerator_0_note_end_voice6_translator:uav_lock
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_read;                                // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_read -> WaveformGenerator_0_note_end_voice6_translator:uav_read
	wire    [7:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdata;                            // WaveformGenerator_0_note_end_voice6_translator:uav_readdata -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // WaveformGenerator_0_note_end_voice6_translator:uav_readdatavalid -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_debugaccess -> WaveformGenerator_0_note_end_voice6_translator:uav_debugaccess
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:m0_byteenable -> WaveformGenerator_0_note_end_voice6_translator:uav_byteenable
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_source_valid -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_data;                         // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_source_data -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [73:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rf_sink_ready -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [7:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                            // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                                  // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                          // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire   [99:0] nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                                   // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire          nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                                  // addr_router:sink_ready -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                                   // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_valid;                                         // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                                 // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire   [99:0] nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_data;                                          // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire          nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_ready;                                         // addr_router_001:sink_ready -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                                    // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire   [99:0] nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                                     // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire          nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router:sink_ready -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                    // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                          // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                  // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire   [81:0] sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_data;                                           // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire          sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                          // id_router_001:sink_ready -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                         // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                               // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                       // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire   [99:0] onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire          onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                               // id_router_002:sink_ready -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                  // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                        // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire   [99:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                         // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire          timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                        // id_router_003:sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                        // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire   [99:0] sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                                         // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire          sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_004:sink_ready -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                     // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire   [99:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                                      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire          jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_005:sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire   [99:0] audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire          audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_006:sink_ready -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire          waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_007:sink_ready -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire          waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_008:sink_ready -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire          waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_009:sink_ready -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire          waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_010:sink_ready -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire          waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_011:sink_ready -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_012:sink_endofpacket
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_valid;                                   // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_012:sink_valid
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_012:sink_startofpacket
	wire   [72:0] waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_data;                                    // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rp_data -> id_router_012:sink_data
	wire          waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_012:sink_ready -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_013:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_013:sink_valid
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_013:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rp_data -> id_router_013:sink_data
	wire          waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_013:sink_ready -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_014:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_014:sink_valid
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_014:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rp_data -> id_router_014:sink_data
	wire          waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_014:sink_ready -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_015:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_015:sink_valid
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_015:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rp_data -> id_router_015:sink_data
	wire          waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_015:sink_ready -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_016:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_016:sink_valid
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_016:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rp_data -> id_router_016:sink_data
	wire          waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_016:sink_ready -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_017:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_017:sink_valid
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_017:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rp_data -> id_router_017:sink_data
	wire          waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_017:sink_ready -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_018:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_018:sink_valid
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_018:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rp_data -> id_router_018:sink_data
	wire          waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_018:sink_ready -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_019:sink_endofpacket
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_valid;                       // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_019:sink_valid
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_019:sink_startofpacket
	wire  [135:0] waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_data;                        // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rp_data -> id_router_019:sink_data
	wire          waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_019:sink_ready -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_020:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_020:sink_valid
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_020:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rp_data -> id_router_020:sink_data
	wire          waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_020:sink_ready -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_021:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_021:sink_valid
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_021:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rp_data -> id_router_021:sink_data
	wire          waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_021:sink_ready -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_022:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_022:sink_valid
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_022:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rp_data -> id_router_022:sink_data
	wire          waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_022:sink_ready -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:rp_ready
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_023:sink_endofpacket
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_valid;                               // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_023:sink_valid
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_023:sink_startofpacket
	wire   [72:0] waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_data;                                // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rp_data -> id_router_023:sink_data
	wire          waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_023:sink_ready -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:rp_ready
	wire          burst_adapter_source0_endofpacket;                                                                                    // burst_adapter:source0_endofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_source0_valid;                                                                                          // burst_adapter:source0_valid -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_source0_startofpacket;                                                                                  // burst_adapter:source0_startofpacket -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [81:0] burst_adapter_source0_data;                                                                                           // burst_adapter:source0_data -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_source0_ready;                                                                                          // sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter:source0_ready
	wire   [23:0] burst_adapter_source0_channel;                                                                                        // burst_adapter:source0_channel -> sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_001_source0_endofpacket;                                                                                // burst_adapter_001:source0_endofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_001_source0_valid;                                                                                      // burst_adapter_001:source0_valid -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_001_source0_startofpacket;                                                                              // burst_adapter_001:source0_startofpacket -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_001_source0_data;                                                                                       // burst_adapter_001:source0_data -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_001_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_001:source0_ready
	wire   [23:0] burst_adapter_001_source0_channel;                                                                                    // burst_adapter_001:source0_channel -> WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_002_source0_endofpacket;                                                                                // burst_adapter_002:source0_endofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_002_source0_valid;                                                                                      // burst_adapter_002:source0_valid -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_002_source0_startofpacket;                                                                              // burst_adapter_002:source0_startofpacket -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_002_source0_data;                                                                                       // burst_adapter_002:source0_data -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_002_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_002:source0_ready
	wire   [23:0] burst_adapter_002_source0_channel;                                                                                    // burst_adapter_002:source0_channel -> WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_003_source0_endofpacket;                                                                                // burst_adapter_003:source0_endofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_003_source0_valid;                                                                                      // burst_adapter_003:source0_valid -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_003_source0_startofpacket;                                                                              // burst_adapter_003:source0_startofpacket -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_003_source0_data;                                                                                       // burst_adapter_003:source0_data -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_003_source0_ready;                                                                                      // WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_003:source0_ready
	wire   [23:0] burst_adapter_003_source0_channel;                                                                                    // burst_adapter_003:source0_channel -> WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_004_source0_endofpacket;                                                                                // burst_adapter_004:source0_endofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_004_source0_valid;                                                                                      // burst_adapter_004:source0_valid -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_004_source0_startofpacket;                                                                              // burst_adapter_004:source0_startofpacket -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_004_source0_data;                                                                                       // burst_adapter_004:source0_data -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_004_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_004:source0_ready
	wire   [23:0] burst_adapter_004_source0_channel;                                                                                    // burst_adapter_004:source0_channel -> WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_005_source0_endofpacket;                                                                                // burst_adapter_005:source0_endofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_005_source0_valid;                                                                                      // burst_adapter_005:source0_valid -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_005_source0_startofpacket;                                                                              // burst_adapter_005:source0_startofpacket -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_005_source0_data;                                                                                       // burst_adapter_005:source0_data -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_005_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_005:source0_ready
	wire   [23:0] burst_adapter_005_source0_channel;                                                                                    // burst_adapter_005:source0_channel -> WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_006_source0_endofpacket;                                                                                // burst_adapter_006:source0_endofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_006_source0_valid;                                                                                      // burst_adapter_006:source0_valid -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_006_source0_startofpacket;                                                                              // burst_adapter_006:source0_startofpacket -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_006_source0_data;                                                                                       // burst_adapter_006:source0_data -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_006_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_006:source0_ready
	wire   [23:0] burst_adapter_006_source0_channel;                                                                                    // burst_adapter_006:source0_channel -> WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_007_source0_endofpacket;                                                                                // burst_adapter_007:source0_endofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_007_source0_valid;                                                                                      // burst_adapter_007:source0_valid -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_007_source0_startofpacket;                                                                              // burst_adapter_007:source0_startofpacket -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_007_source0_data;                                                                                       // burst_adapter_007:source0_data -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_007_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_007:source0_ready
	wire   [23:0] burst_adapter_007_source0_channel;                                                                                    // burst_adapter_007:source0_channel -> WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_008_source0_endofpacket;                                                                                // burst_adapter_008:source0_endofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_008_source0_valid;                                                                                      // burst_adapter_008:source0_valid -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_008_source0_startofpacket;                                                                              // burst_adapter_008:source0_startofpacket -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_008_source0_data;                                                                                       // burst_adapter_008:source0_data -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_008_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_008:source0_ready
	wire   [23:0] burst_adapter_008_source0_channel;                                                                                    // burst_adapter_008:source0_channel -> WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_009_source0_endofpacket;                                                                                // burst_adapter_009:source0_endofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_009_source0_valid;                                                                                      // burst_adapter_009:source0_valid -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_009_source0_startofpacket;                                                                              // burst_adapter_009:source0_startofpacket -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [72:0] burst_adapter_009_source0_data;                                                                                       // burst_adapter_009:source0_data -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_009_source0_ready;                                                                                      // WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_009:source0_ready
	wire   [23:0] burst_adapter_009_source0_channel;                                                                                    // burst_adapter_009:source0_channel -> WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:cp_channel
	wire          rst_controller_reset_out_reset;                                                                                       // rst_controller:reset_out -> [WaveformGenerator_0:reset_n, WaveformGenerator_0_note_end_voice0_translator:reset, WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice1_translator:reset, WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice2_translator:reset, WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice3_translator:reset, WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice4_translator:reset, WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice5_translator:reset, WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice6_translator:reset, WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_note_end_voice7_translator:reset, WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice0_translator:reset, WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice1_translator:reset, WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice2_translator:reset, WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice3_translator:reset, WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice4_translator:reset, WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice5_translator:reset, WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice6_translator:reset, WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_phase_increments_voice7_translator:reset, WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, WaveformGenerator_0_wave_shapes_translator:reset, WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent:reset, WaveformGenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, addr_router:reset, addr_router_001:reset, audio_and_video_config_0:reset, audio_and_video_config_0_avalon_av_config_slave_translator:reset, audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:reset, audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, burst_adapter:reset, burst_adapter_001:reset, burst_adapter_002:reset, burst_adapter_003:reset, burst_adapter_004:reset, burst_adapter_005:reset, burst_adapter_006:reset, burst_adapter_007:reset, burst_adapter_008:reset, burst_adapter_009:reset, cmd_xbar_demux:reset, cmd_xbar_demux_001:reset, cmd_xbar_mux:reset, cmd_xbar_mux_001:reset, cmd_xbar_mux_002:reset, id_router:reset, id_router_001:reset, id_router_002:reset, id_router_003:reset, id_router_004:reset, id_router_005:reset, id_router_006:reset, id_router_007:reset, id_router_008:reset, id_router_009:reset, id_router_010:reset, id_router_011:reset, id_router_012:reset, id_router_013:reset, id_router_014:reset, id_router_015:reset, id_router_016:reset, id_router_017:reset, id_router_018:reset, id_router_019:reset, id_router_020:reset, id_router_021:reset, id_router_022:reset, id_router_023:reset, irq_mapper:reset, jtag_uart_0:rst_n, jtag_uart_0_avalon_jtag_slave_translator:reset, jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:reset, jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, nios2_qsys_0:reset_n, nios2_qsys_0_data_master_translator:reset, nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:reset, nios2_qsys_0_instruction_master_translator:reset, nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:reset, nios2_qsys_0_jtag_debug_module_translator:reset, nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:reset, nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, onchip_memory2_0:reset, onchip_memory2_0_s1_translator:reset, onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:reset, onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, rsp_xbar_demux:reset, rsp_xbar_demux_001:reset, rsp_xbar_demux_002:reset, rsp_xbar_demux_003:reset, rsp_xbar_demux_004:reset, rsp_xbar_demux_005:reset, rsp_xbar_demux_006:reset, rsp_xbar_demux_007:reset, rsp_xbar_demux_008:reset, rsp_xbar_demux_009:reset, rsp_xbar_demux_010:reset, rsp_xbar_demux_011:reset, rsp_xbar_demux_012:reset, rsp_xbar_demux_013:reset, rsp_xbar_demux_014:reset, rsp_xbar_demux_015:reset, rsp_xbar_demux_016:reset, rsp_xbar_demux_017:reset, rsp_xbar_demux_018:reset, rsp_xbar_demux_019:reset, rsp_xbar_demux_020:reset, rsp_xbar_demux_021:reset, rsp_xbar_demux_022:reset, rsp_xbar_demux_023:reset, rsp_xbar_mux:reset, rsp_xbar_mux_001:reset, sram_0:reset, sram_0_avalon_sram_slave_translator:reset, sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent:reset, sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, sysid_qsys_0:reset_n, sysid_qsys_0_control_slave_translator:reset, sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:reset, sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, timer_0:reset_n, timer_0_s1_translator:reset, timer_0_s1_translator_avalon_universal_slave_0_agent:reset, timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:reset, up_clocks_0:reset, width_adapter:reset, width_adapter_001:reset, width_adapter_002:reset, width_adapter_003:reset, width_adapter_004:reset, width_adapter_005:reset, width_adapter_006:reset, width_adapter_007:reset, width_adapter_008:reset, width_adapter_009:reset, width_adapter_010:reset, width_adapter_011:reset, width_adapter_012:reset, width_adapter_013:reset, width_adapter_014:reset, width_adapter_015:reset, width_adapter_016:reset, width_adapter_017:reset, width_adapter_018:reset, width_adapter_019:reset, width_adapter_020:reset, width_adapter_021:reset, width_adapter_022:reset, width_adapter_023:reset, width_adapter_024:reset, width_adapter_025:reset, width_adapter_026:reset, width_adapter_027:reset, width_adapter_028:reset, width_adapter_029:reset, width_adapter_030:reset, width_adapter_031:reset, width_adapter_032:reset, width_adapter_033:reset, width_adapter_034:reset, width_adapter_035:reset]
	wire          nios2_qsys_0_jtag_debug_module_reset_reset;                                                                           // nios2_qsys_0:jtag_debug_module_resetrequest -> rst_controller:reset_in1
	wire          rst_controller_001_reset_out_reset;                                                                                   // rst_controller_001:reset_out -> audio_0:reset
	wire          up_clocks_0_sys_clk_reset_reset;                                                                                      // up_clocks_0:sys_reset_n -> rst_controller_001:reset_in0
	wire          cmd_xbar_demux_src0_endofpacket;                                                                                      // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire          cmd_xbar_demux_src0_valid;                                                                                            // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire          cmd_xbar_demux_src0_startofpacket;                                                                                    // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src0_data;                                                                                             // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [23:0] cmd_xbar_demux_src0_channel;                                                                                          // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire          cmd_xbar_demux_src0_ready;                                                                                            // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire          cmd_xbar_demux_src1_endofpacket;                                                                                      // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire          cmd_xbar_demux_src1_valid;                                                                                            // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire          cmd_xbar_demux_src1_startofpacket;                                                                                    // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src1_data;                                                                                             // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [23:0] cmd_xbar_demux_src1_channel;                                                                                          // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire          cmd_xbar_demux_src1_ready;                                                                                            // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire          cmd_xbar_demux_src2_endofpacket;                                                                                      // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire          cmd_xbar_demux_src2_valid;                                                                                            // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire          cmd_xbar_demux_src2_startofpacket;                                                                                    // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire   [99:0] cmd_xbar_demux_src2_data;                                                                                             // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire   [23:0] cmd_xbar_demux_src2_channel;                                                                                          // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire          cmd_xbar_demux_src2_ready;                                                                                            // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire          cmd_xbar_demux_001_src0_endofpacket;                                                                                  // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire          cmd_xbar_demux_001_src0_valid;                                                                                        // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire          cmd_xbar_demux_001_src0_startofpacket;                                                                                // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src0_data;                                                                                         // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire   [23:0] cmd_xbar_demux_001_src0_channel;                                                                                      // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire          cmd_xbar_demux_001_src0_ready;                                                                                        // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire          cmd_xbar_demux_001_src1_endofpacket;                                                                                  // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire          cmd_xbar_demux_001_src1_valid;                                                                                        // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire          cmd_xbar_demux_001_src1_startofpacket;                                                                                // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src1_data;                                                                                         // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire   [23:0] cmd_xbar_demux_001_src1_channel;                                                                                      // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire          cmd_xbar_demux_001_src1_ready;                                                                                        // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire          cmd_xbar_demux_001_src2_endofpacket;                                                                                  // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink1_endofpacket
	wire          cmd_xbar_demux_001_src2_valid;                                                                                        // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink1_valid
	wire          cmd_xbar_demux_001_src2_startofpacket;                                                                                // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink1_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src2_data;                                                                                         // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink1_data
	wire   [23:0] cmd_xbar_demux_001_src2_channel;                                                                                      // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink1_channel
	wire          cmd_xbar_demux_001_src2_ready;                                                                                        // cmd_xbar_mux_002:sink1_ready -> cmd_xbar_demux_001:src2_ready
	wire          cmd_xbar_demux_001_src3_endofpacket;                                                                                  // cmd_xbar_demux_001:src3_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_demux_001_src3_valid;                                                                                        // cmd_xbar_demux_001:src3_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_demux_001_src3_startofpacket;                                                                                // cmd_xbar_demux_001:src3_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src3_data;                                                                                         // cmd_xbar_demux_001:src3_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_demux_001_src3_channel;                                                                                      // cmd_xbar_demux_001:src3_channel -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_demux_001_src4_endofpacket;                                                                                  // cmd_xbar_demux_001:src4_endofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_demux_001_src4_valid;                                                                                        // cmd_xbar_demux_001:src4_valid -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_demux_001_src4_startofpacket;                                                                                // cmd_xbar_demux_001:src4_startofpacket -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src4_data;                                                                                         // cmd_xbar_demux_001:src4_data -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_demux_001_src4_channel;                                                                                      // cmd_xbar_demux_001:src4_channel -> sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_demux_001_src5_endofpacket;                                                                                  // cmd_xbar_demux_001:src5_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_demux_001_src5_valid;                                                                                        // cmd_xbar_demux_001:src5_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_demux_001_src5_startofpacket;                                                                                // cmd_xbar_demux_001:src5_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src5_data;                                                                                         // cmd_xbar_demux_001:src5_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_demux_001_src5_channel;                                                                                      // cmd_xbar_demux_001:src5_channel -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_demux_001_src6_endofpacket;                                                                                  // cmd_xbar_demux_001:src6_endofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_demux_001_src6_valid;                                                                                        // cmd_xbar_demux_001:src6_valid -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_demux_001_src6_startofpacket;                                                                                // cmd_xbar_demux_001:src6_startofpacket -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src6_data;                                                                                         // cmd_xbar_demux_001:src6_data -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_demux_001_src6_channel;                                                                                      // cmd_xbar_demux_001:src6_channel -> audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_demux_001_src7_endofpacket;                                                                                  // cmd_xbar_demux_001:src7_endofpacket -> width_adapter_002:in_endofpacket
	wire          cmd_xbar_demux_001_src7_valid;                                                                                        // cmd_xbar_demux_001:src7_valid -> width_adapter_002:in_valid
	wire          cmd_xbar_demux_001_src7_startofpacket;                                                                                // cmd_xbar_demux_001:src7_startofpacket -> width_adapter_002:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src7_data;                                                                                         // cmd_xbar_demux_001:src7_data -> width_adapter_002:in_data
	wire   [23:0] cmd_xbar_demux_001_src7_channel;                                                                                      // cmd_xbar_demux_001:src7_channel -> width_adapter_002:in_channel
	wire          cmd_xbar_demux_001_src8_endofpacket;                                                                                  // cmd_xbar_demux_001:src8_endofpacket -> width_adapter_004:in_endofpacket
	wire          cmd_xbar_demux_001_src8_valid;                                                                                        // cmd_xbar_demux_001:src8_valid -> width_adapter_004:in_valid
	wire          cmd_xbar_demux_001_src8_startofpacket;                                                                                // cmd_xbar_demux_001:src8_startofpacket -> width_adapter_004:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src8_data;                                                                                         // cmd_xbar_demux_001:src8_data -> width_adapter_004:in_data
	wire   [23:0] cmd_xbar_demux_001_src8_channel;                                                                                      // cmd_xbar_demux_001:src8_channel -> width_adapter_004:in_channel
	wire          cmd_xbar_demux_001_src9_endofpacket;                                                                                  // cmd_xbar_demux_001:src9_endofpacket -> width_adapter_006:in_endofpacket
	wire          cmd_xbar_demux_001_src9_valid;                                                                                        // cmd_xbar_demux_001:src9_valid -> width_adapter_006:in_valid
	wire          cmd_xbar_demux_001_src9_startofpacket;                                                                                // cmd_xbar_demux_001:src9_startofpacket -> width_adapter_006:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src9_data;                                                                                         // cmd_xbar_demux_001:src9_data -> width_adapter_006:in_data
	wire   [23:0] cmd_xbar_demux_001_src9_channel;                                                                                      // cmd_xbar_demux_001:src9_channel -> width_adapter_006:in_channel
	wire          cmd_xbar_demux_001_src10_endofpacket;                                                                                 // cmd_xbar_demux_001:src10_endofpacket -> width_adapter_008:in_endofpacket
	wire          cmd_xbar_demux_001_src10_valid;                                                                                       // cmd_xbar_demux_001:src10_valid -> width_adapter_008:in_valid
	wire          cmd_xbar_demux_001_src10_startofpacket;                                                                               // cmd_xbar_demux_001:src10_startofpacket -> width_adapter_008:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src10_data;                                                                                        // cmd_xbar_demux_001:src10_data -> width_adapter_008:in_data
	wire   [23:0] cmd_xbar_demux_001_src10_channel;                                                                                     // cmd_xbar_demux_001:src10_channel -> width_adapter_008:in_channel
	wire          cmd_xbar_demux_001_src11_endofpacket;                                                                                 // cmd_xbar_demux_001:src11_endofpacket -> width_adapter_010:in_endofpacket
	wire          cmd_xbar_demux_001_src11_valid;                                                                                       // cmd_xbar_demux_001:src11_valid -> width_adapter_010:in_valid
	wire          cmd_xbar_demux_001_src11_startofpacket;                                                                               // cmd_xbar_demux_001:src11_startofpacket -> width_adapter_010:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src11_data;                                                                                        // cmd_xbar_demux_001:src11_data -> width_adapter_010:in_data
	wire   [23:0] cmd_xbar_demux_001_src11_channel;                                                                                     // cmd_xbar_demux_001:src11_channel -> width_adapter_010:in_channel
	wire          cmd_xbar_demux_001_src12_endofpacket;                                                                                 // cmd_xbar_demux_001:src12_endofpacket -> width_adapter_012:in_endofpacket
	wire          cmd_xbar_demux_001_src12_valid;                                                                                       // cmd_xbar_demux_001:src12_valid -> width_adapter_012:in_valid
	wire          cmd_xbar_demux_001_src12_startofpacket;                                                                               // cmd_xbar_demux_001:src12_startofpacket -> width_adapter_012:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src12_data;                                                                                        // cmd_xbar_demux_001:src12_data -> width_adapter_012:in_data
	wire   [23:0] cmd_xbar_demux_001_src12_channel;                                                                                     // cmd_xbar_demux_001:src12_channel -> width_adapter_012:in_channel
	wire          cmd_xbar_demux_001_src13_endofpacket;                                                                                 // cmd_xbar_demux_001:src13_endofpacket -> width_adapter_014:in_endofpacket
	wire          cmd_xbar_demux_001_src13_valid;                                                                                       // cmd_xbar_demux_001:src13_valid -> width_adapter_014:in_valid
	wire          cmd_xbar_demux_001_src13_startofpacket;                                                                               // cmd_xbar_demux_001:src13_startofpacket -> width_adapter_014:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src13_data;                                                                                        // cmd_xbar_demux_001:src13_data -> width_adapter_014:in_data
	wire   [23:0] cmd_xbar_demux_001_src13_channel;                                                                                     // cmd_xbar_demux_001:src13_channel -> width_adapter_014:in_channel
	wire          cmd_xbar_demux_001_src14_endofpacket;                                                                                 // cmd_xbar_demux_001:src14_endofpacket -> width_adapter_016:in_endofpacket
	wire          cmd_xbar_demux_001_src14_valid;                                                                                       // cmd_xbar_demux_001:src14_valid -> width_adapter_016:in_valid
	wire          cmd_xbar_demux_001_src14_startofpacket;                                                                               // cmd_xbar_demux_001:src14_startofpacket -> width_adapter_016:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src14_data;                                                                                        // cmd_xbar_demux_001:src14_data -> width_adapter_016:in_data
	wire   [23:0] cmd_xbar_demux_001_src14_channel;                                                                                     // cmd_xbar_demux_001:src14_channel -> width_adapter_016:in_channel
	wire          cmd_xbar_demux_001_src15_endofpacket;                                                                                 // cmd_xbar_demux_001:src15_endofpacket -> width_adapter_018:in_endofpacket
	wire          cmd_xbar_demux_001_src15_valid;                                                                                       // cmd_xbar_demux_001:src15_valid -> width_adapter_018:in_valid
	wire          cmd_xbar_demux_001_src15_startofpacket;                                                                               // cmd_xbar_demux_001:src15_startofpacket -> width_adapter_018:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src15_data;                                                                                        // cmd_xbar_demux_001:src15_data -> width_adapter_018:in_data
	wire   [23:0] cmd_xbar_demux_001_src15_channel;                                                                                     // cmd_xbar_demux_001:src15_channel -> width_adapter_018:in_channel
	wire          cmd_xbar_demux_001_src16_endofpacket;                                                                                 // cmd_xbar_demux_001:src16_endofpacket -> width_adapter_020:in_endofpacket
	wire          cmd_xbar_demux_001_src16_valid;                                                                                       // cmd_xbar_demux_001:src16_valid -> width_adapter_020:in_valid
	wire          cmd_xbar_demux_001_src16_startofpacket;                                                                               // cmd_xbar_demux_001:src16_startofpacket -> width_adapter_020:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src16_data;                                                                                        // cmd_xbar_demux_001:src16_data -> width_adapter_020:in_data
	wire   [23:0] cmd_xbar_demux_001_src16_channel;                                                                                     // cmd_xbar_demux_001:src16_channel -> width_adapter_020:in_channel
	wire          cmd_xbar_demux_001_src17_endofpacket;                                                                                 // cmd_xbar_demux_001:src17_endofpacket -> width_adapter_022:in_endofpacket
	wire          cmd_xbar_demux_001_src17_valid;                                                                                       // cmd_xbar_demux_001:src17_valid -> width_adapter_022:in_valid
	wire          cmd_xbar_demux_001_src17_startofpacket;                                                                               // cmd_xbar_demux_001:src17_startofpacket -> width_adapter_022:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src17_data;                                                                                        // cmd_xbar_demux_001:src17_data -> width_adapter_022:in_data
	wire   [23:0] cmd_xbar_demux_001_src17_channel;                                                                                     // cmd_xbar_demux_001:src17_channel -> width_adapter_022:in_channel
	wire          cmd_xbar_demux_001_src18_endofpacket;                                                                                 // cmd_xbar_demux_001:src18_endofpacket -> width_adapter_024:in_endofpacket
	wire          cmd_xbar_demux_001_src18_valid;                                                                                       // cmd_xbar_demux_001:src18_valid -> width_adapter_024:in_valid
	wire          cmd_xbar_demux_001_src18_startofpacket;                                                                               // cmd_xbar_demux_001:src18_startofpacket -> width_adapter_024:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src18_data;                                                                                        // cmd_xbar_demux_001:src18_data -> width_adapter_024:in_data
	wire   [23:0] cmd_xbar_demux_001_src18_channel;                                                                                     // cmd_xbar_demux_001:src18_channel -> width_adapter_024:in_channel
	wire          cmd_xbar_demux_001_src19_endofpacket;                                                                                 // cmd_xbar_demux_001:src19_endofpacket -> width_adapter_026:in_endofpacket
	wire          cmd_xbar_demux_001_src19_valid;                                                                                       // cmd_xbar_demux_001:src19_valid -> width_adapter_026:in_valid
	wire          cmd_xbar_demux_001_src19_startofpacket;                                                                               // cmd_xbar_demux_001:src19_startofpacket -> width_adapter_026:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src19_data;                                                                                        // cmd_xbar_demux_001:src19_data -> width_adapter_026:in_data
	wire   [23:0] cmd_xbar_demux_001_src19_channel;                                                                                     // cmd_xbar_demux_001:src19_channel -> width_adapter_026:in_channel
	wire          cmd_xbar_demux_001_src20_endofpacket;                                                                                 // cmd_xbar_demux_001:src20_endofpacket -> width_adapter_028:in_endofpacket
	wire          cmd_xbar_demux_001_src20_valid;                                                                                       // cmd_xbar_demux_001:src20_valid -> width_adapter_028:in_valid
	wire          cmd_xbar_demux_001_src20_startofpacket;                                                                               // cmd_xbar_demux_001:src20_startofpacket -> width_adapter_028:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src20_data;                                                                                        // cmd_xbar_demux_001:src20_data -> width_adapter_028:in_data
	wire   [23:0] cmd_xbar_demux_001_src20_channel;                                                                                     // cmd_xbar_demux_001:src20_channel -> width_adapter_028:in_channel
	wire          cmd_xbar_demux_001_src21_endofpacket;                                                                                 // cmd_xbar_demux_001:src21_endofpacket -> width_adapter_030:in_endofpacket
	wire          cmd_xbar_demux_001_src21_valid;                                                                                       // cmd_xbar_demux_001:src21_valid -> width_adapter_030:in_valid
	wire          cmd_xbar_demux_001_src21_startofpacket;                                                                               // cmd_xbar_demux_001:src21_startofpacket -> width_adapter_030:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src21_data;                                                                                        // cmd_xbar_demux_001:src21_data -> width_adapter_030:in_data
	wire   [23:0] cmd_xbar_demux_001_src21_channel;                                                                                     // cmd_xbar_demux_001:src21_channel -> width_adapter_030:in_channel
	wire          cmd_xbar_demux_001_src22_endofpacket;                                                                                 // cmd_xbar_demux_001:src22_endofpacket -> width_adapter_032:in_endofpacket
	wire          cmd_xbar_demux_001_src22_valid;                                                                                       // cmd_xbar_demux_001:src22_valid -> width_adapter_032:in_valid
	wire          cmd_xbar_demux_001_src22_startofpacket;                                                                               // cmd_xbar_demux_001:src22_startofpacket -> width_adapter_032:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src22_data;                                                                                        // cmd_xbar_demux_001:src22_data -> width_adapter_032:in_data
	wire   [23:0] cmd_xbar_demux_001_src22_channel;                                                                                     // cmd_xbar_demux_001:src22_channel -> width_adapter_032:in_channel
	wire          cmd_xbar_demux_001_src23_endofpacket;                                                                                 // cmd_xbar_demux_001:src23_endofpacket -> width_adapter_034:in_endofpacket
	wire          cmd_xbar_demux_001_src23_valid;                                                                                       // cmd_xbar_demux_001:src23_valid -> width_adapter_034:in_valid
	wire          cmd_xbar_demux_001_src23_startofpacket;                                                                               // cmd_xbar_demux_001:src23_startofpacket -> width_adapter_034:in_startofpacket
	wire   [99:0] cmd_xbar_demux_001_src23_data;                                                                                        // cmd_xbar_demux_001:src23_data -> width_adapter_034:in_data
	wire   [23:0] cmd_xbar_demux_001_src23_channel;                                                                                     // cmd_xbar_demux_001:src23_channel -> width_adapter_034:in_channel
	wire          rsp_xbar_demux_src0_endofpacket;                                                                                      // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire          rsp_xbar_demux_src0_valid;                                                                                            // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire          rsp_xbar_demux_src0_startofpacket;                                                                                    // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire   [99:0] rsp_xbar_demux_src0_data;                                                                                             // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [23:0] rsp_xbar_demux_src0_channel;                                                                                          // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire          rsp_xbar_demux_src0_ready;                                                                                            // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire          rsp_xbar_demux_src1_endofpacket;                                                                                      // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire          rsp_xbar_demux_src1_valid;                                                                                            // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire          rsp_xbar_demux_src1_startofpacket;                                                                                    // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire   [99:0] rsp_xbar_demux_src1_data;                                                                                             // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire   [23:0] rsp_xbar_demux_src1_channel;                                                                                          // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire          rsp_xbar_demux_src1_ready;                                                                                            // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire          rsp_xbar_demux_001_src0_endofpacket;                                                                                  // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire          rsp_xbar_demux_001_src0_valid;                                                                                        // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire          rsp_xbar_demux_001_src0_startofpacket;                                                                                // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire   [99:0] rsp_xbar_demux_001_src0_data;                                                                                         // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [23:0] rsp_xbar_demux_001_src0_channel;                                                                                      // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire          rsp_xbar_demux_001_src0_ready;                                                                                        // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire          rsp_xbar_demux_001_src1_endofpacket;                                                                                  // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire          rsp_xbar_demux_001_src1_valid;                                                                                        // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire          rsp_xbar_demux_001_src1_startofpacket;                                                                                // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire   [99:0] rsp_xbar_demux_001_src1_data;                                                                                         // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire   [23:0] rsp_xbar_demux_001_src1_channel;                                                                                      // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire          rsp_xbar_demux_001_src1_ready;                                                                                        // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire          rsp_xbar_demux_002_src0_endofpacket;                                                                                  // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire          rsp_xbar_demux_002_src0_valid;                                                                                        // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire          rsp_xbar_demux_002_src0_startofpacket;                                                                                // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire   [99:0] rsp_xbar_demux_002_src0_data;                                                                                         // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire   [23:0] rsp_xbar_demux_002_src0_channel;                                                                                      // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire          rsp_xbar_demux_002_src0_ready;                                                                                        // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire          rsp_xbar_demux_002_src1_endofpacket;                                                                                  // rsp_xbar_demux_002:src1_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire          rsp_xbar_demux_002_src1_valid;                                                                                        // rsp_xbar_demux_002:src1_valid -> rsp_xbar_mux_001:sink2_valid
	wire          rsp_xbar_demux_002_src1_startofpacket;                                                                                // rsp_xbar_demux_002:src1_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire   [99:0] rsp_xbar_demux_002_src1_data;                                                                                         // rsp_xbar_demux_002:src1_data -> rsp_xbar_mux_001:sink2_data
	wire   [23:0] rsp_xbar_demux_002_src1_channel;                                                                                      // rsp_xbar_demux_002:src1_channel -> rsp_xbar_mux_001:sink2_channel
	wire          rsp_xbar_demux_002_src1_ready;                                                                                        // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src1_ready
	wire          rsp_xbar_demux_003_src0_endofpacket;                                                                                  // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire          rsp_xbar_demux_003_src0_valid;                                                                                        // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire          rsp_xbar_demux_003_src0_startofpacket;                                                                                // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire   [99:0] rsp_xbar_demux_003_src0_data;                                                                                         // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire   [23:0] rsp_xbar_demux_003_src0_channel;                                                                                      // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire          rsp_xbar_demux_003_src0_ready;                                                                                        // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire          rsp_xbar_demux_004_src0_endofpacket;                                                                                  // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire          rsp_xbar_demux_004_src0_valid;                                                                                        // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire          rsp_xbar_demux_004_src0_startofpacket;                                                                                // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire   [99:0] rsp_xbar_demux_004_src0_data;                                                                                         // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire   [23:0] rsp_xbar_demux_004_src0_channel;                                                                                      // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire          rsp_xbar_demux_004_src0_ready;                                                                                        // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire          rsp_xbar_demux_005_src0_endofpacket;                                                                                  // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire          rsp_xbar_demux_005_src0_valid;                                                                                        // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire          rsp_xbar_demux_005_src0_startofpacket;                                                                                // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire   [99:0] rsp_xbar_demux_005_src0_data;                                                                                         // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire   [23:0] rsp_xbar_demux_005_src0_channel;                                                                                      // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire          rsp_xbar_demux_005_src0_ready;                                                                                        // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire          rsp_xbar_demux_006_src0_endofpacket;                                                                                  // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire          rsp_xbar_demux_006_src0_valid;                                                                                        // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire          rsp_xbar_demux_006_src0_startofpacket;                                                                                // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire   [99:0] rsp_xbar_demux_006_src0_data;                                                                                         // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire   [23:0] rsp_xbar_demux_006_src0_channel;                                                                                      // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire          rsp_xbar_demux_006_src0_ready;                                                                                        // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire          rsp_xbar_demux_007_src0_endofpacket;                                                                                  // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux_001:sink7_endofpacket
	wire          rsp_xbar_demux_007_src0_valid;                                                                                        // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux_001:sink7_valid
	wire          rsp_xbar_demux_007_src0_startofpacket;                                                                                // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux_001:sink7_startofpacket
	wire   [99:0] rsp_xbar_demux_007_src0_data;                                                                                         // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux_001:sink7_data
	wire   [23:0] rsp_xbar_demux_007_src0_channel;                                                                                      // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux_001:sink7_channel
	wire          rsp_xbar_demux_007_src0_ready;                                                                                        // rsp_xbar_mux_001:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire          rsp_xbar_demux_008_src0_endofpacket;                                                                                  // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux_001:sink8_endofpacket
	wire          rsp_xbar_demux_008_src0_valid;                                                                                        // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux_001:sink8_valid
	wire          rsp_xbar_demux_008_src0_startofpacket;                                                                                // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux_001:sink8_startofpacket
	wire   [99:0] rsp_xbar_demux_008_src0_data;                                                                                         // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux_001:sink8_data
	wire   [23:0] rsp_xbar_demux_008_src0_channel;                                                                                      // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux_001:sink8_channel
	wire          rsp_xbar_demux_008_src0_ready;                                                                                        // rsp_xbar_mux_001:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire          rsp_xbar_demux_009_src0_endofpacket;                                                                                  // rsp_xbar_demux_009:src0_endofpacket -> rsp_xbar_mux_001:sink9_endofpacket
	wire          rsp_xbar_demux_009_src0_valid;                                                                                        // rsp_xbar_demux_009:src0_valid -> rsp_xbar_mux_001:sink9_valid
	wire          rsp_xbar_demux_009_src0_startofpacket;                                                                                // rsp_xbar_demux_009:src0_startofpacket -> rsp_xbar_mux_001:sink9_startofpacket
	wire   [99:0] rsp_xbar_demux_009_src0_data;                                                                                         // rsp_xbar_demux_009:src0_data -> rsp_xbar_mux_001:sink9_data
	wire   [23:0] rsp_xbar_demux_009_src0_channel;                                                                                      // rsp_xbar_demux_009:src0_channel -> rsp_xbar_mux_001:sink9_channel
	wire          rsp_xbar_demux_009_src0_ready;                                                                                        // rsp_xbar_mux_001:sink9_ready -> rsp_xbar_demux_009:src0_ready
	wire          rsp_xbar_demux_010_src0_endofpacket;                                                                                  // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux_001:sink10_endofpacket
	wire          rsp_xbar_demux_010_src0_valid;                                                                                        // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux_001:sink10_valid
	wire          rsp_xbar_demux_010_src0_startofpacket;                                                                                // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux_001:sink10_startofpacket
	wire   [99:0] rsp_xbar_demux_010_src0_data;                                                                                         // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux_001:sink10_data
	wire   [23:0] rsp_xbar_demux_010_src0_channel;                                                                                      // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux_001:sink10_channel
	wire          rsp_xbar_demux_010_src0_ready;                                                                                        // rsp_xbar_mux_001:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire          rsp_xbar_demux_011_src0_endofpacket;                                                                                  // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux_001:sink11_endofpacket
	wire          rsp_xbar_demux_011_src0_valid;                                                                                        // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux_001:sink11_valid
	wire          rsp_xbar_demux_011_src0_startofpacket;                                                                                // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux_001:sink11_startofpacket
	wire   [99:0] rsp_xbar_demux_011_src0_data;                                                                                         // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux_001:sink11_data
	wire   [23:0] rsp_xbar_demux_011_src0_channel;                                                                                      // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux_001:sink11_channel
	wire          rsp_xbar_demux_011_src0_ready;                                                                                        // rsp_xbar_mux_001:sink11_ready -> rsp_xbar_demux_011:src0_ready
	wire          rsp_xbar_demux_012_src0_endofpacket;                                                                                  // rsp_xbar_demux_012:src0_endofpacket -> rsp_xbar_mux_001:sink12_endofpacket
	wire          rsp_xbar_demux_012_src0_valid;                                                                                        // rsp_xbar_demux_012:src0_valid -> rsp_xbar_mux_001:sink12_valid
	wire          rsp_xbar_demux_012_src0_startofpacket;                                                                                // rsp_xbar_demux_012:src0_startofpacket -> rsp_xbar_mux_001:sink12_startofpacket
	wire   [99:0] rsp_xbar_demux_012_src0_data;                                                                                         // rsp_xbar_demux_012:src0_data -> rsp_xbar_mux_001:sink12_data
	wire   [23:0] rsp_xbar_demux_012_src0_channel;                                                                                      // rsp_xbar_demux_012:src0_channel -> rsp_xbar_mux_001:sink12_channel
	wire          rsp_xbar_demux_012_src0_ready;                                                                                        // rsp_xbar_mux_001:sink12_ready -> rsp_xbar_demux_012:src0_ready
	wire          rsp_xbar_demux_013_src0_endofpacket;                                                                                  // rsp_xbar_demux_013:src0_endofpacket -> rsp_xbar_mux_001:sink13_endofpacket
	wire          rsp_xbar_demux_013_src0_valid;                                                                                        // rsp_xbar_demux_013:src0_valid -> rsp_xbar_mux_001:sink13_valid
	wire          rsp_xbar_demux_013_src0_startofpacket;                                                                                // rsp_xbar_demux_013:src0_startofpacket -> rsp_xbar_mux_001:sink13_startofpacket
	wire   [99:0] rsp_xbar_demux_013_src0_data;                                                                                         // rsp_xbar_demux_013:src0_data -> rsp_xbar_mux_001:sink13_data
	wire   [23:0] rsp_xbar_demux_013_src0_channel;                                                                                      // rsp_xbar_demux_013:src0_channel -> rsp_xbar_mux_001:sink13_channel
	wire          rsp_xbar_demux_013_src0_ready;                                                                                        // rsp_xbar_mux_001:sink13_ready -> rsp_xbar_demux_013:src0_ready
	wire          rsp_xbar_demux_014_src0_endofpacket;                                                                                  // rsp_xbar_demux_014:src0_endofpacket -> rsp_xbar_mux_001:sink14_endofpacket
	wire          rsp_xbar_demux_014_src0_valid;                                                                                        // rsp_xbar_demux_014:src0_valid -> rsp_xbar_mux_001:sink14_valid
	wire          rsp_xbar_demux_014_src0_startofpacket;                                                                                // rsp_xbar_demux_014:src0_startofpacket -> rsp_xbar_mux_001:sink14_startofpacket
	wire   [99:0] rsp_xbar_demux_014_src0_data;                                                                                         // rsp_xbar_demux_014:src0_data -> rsp_xbar_mux_001:sink14_data
	wire   [23:0] rsp_xbar_demux_014_src0_channel;                                                                                      // rsp_xbar_demux_014:src0_channel -> rsp_xbar_mux_001:sink14_channel
	wire          rsp_xbar_demux_014_src0_ready;                                                                                        // rsp_xbar_mux_001:sink14_ready -> rsp_xbar_demux_014:src0_ready
	wire          rsp_xbar_demux_015_src0_endofpacket;                                                                                  // rsp_xbar_demux_015:src0_endofpacket -> rsp_xbar_mux_001:sink15_endofpacket
	wire          rsp_xbar_demux_015_src0_valid;                                                                                        // rsp_xbar_demux_015:src0_valid -> rsp_xbar_mux_001:sink15_valid
	wire          rsp_xbar_demux_015_src0_startofpacket;                                                                                // rsp_xbar_demux_015:src0_startofpacket -> rsp_xbar_mux_001:sink15_startofpacket
	wire   [99:0] rsp_xbar_demux_015_src0_data;                                                                                         // rsp_xbar_demux_015:src0_data -> rsp_xbar_mux_001:sink15_data
	wire   [23:0] rsp_xbar_demux_015_src0_channel;                                                                                      // rsp_xbar_demux_015:src0_channel -> rsp_xbar_mux_001:sink15_channel
	wire          rsp_xbar_demux_015_src0_ready;                                                                                        // rsp_xbar_mux_001:sink15_ready -> rsp_xbar_demux_015:src0_ready
	wire          rsp_xbar_demux_016_src0_endofpacket;                                                                                  // rsp_xbar_demux_016:src0_endofpacket -> rsp_xbar_mux_001:sink16_endofpacket
	wire          rsp_xbar_demux_016_src0_valid;                                                                                        // rsp_xbar_demux_016:src0_valid -> rsp_xbar_mux_001:sink16_valid
	wire          rsp_xbar_demux_016_src0_startofpacket;                                                                                // rsp_xbar_demux_016:src0_startofpacket -> rsp_xbar_mux_001:sink16_startofpacket
	wire   [99:0] rsp_xbar_demux_016_src0_data;                                                                                         // rsp_xbar_demux_016:src0_data -> rsp_xbar_mux_001:sink16_data
	wire   [23:0] rsp_xbar_demux_016_src0_channel;                                                                                      // rsp_xbar_demux_016:src0_channel -> rsp_xbar_mux_001:sink16_channel
	wire          rsp_xbar_demux_016_src0_ready;                                                                                        // rsp_xbar_mux_001:sink16_ready -> rsp_xbar_demux_016:src0_ready
	wire          rsp_xbar_demux_017_src0_endofpacket;                                                                                  // rsp_xbar_demux_017:src0_endofpacket -> rsp_xbar_mux_001:sink17_endofpacket
	wire          rsp_xbar_demux_017_src0_valid;                                                                                        // rsp_xbar_demux_017:src0_valid -> rsp_xbar_mux_001:sink17_valid
	wire          rsp_xbar_demux_017_src0_startofpacket;                                                                                // rsp_xbar_demux_017:src0_startofpacket -> rsp_xbar_mux_001:sink17_startofpacket
	wire   [99:0] rsp_xbar_demux_017_src0_data;                                                                                         // rsp_xbar_demux_017:src0_data -> rsp_xbar_mux_001:sink17_data
	wire   [23:0] rsp_xbar_demux_017_src0_channel;                                                                                      // rsp_xbar_demux_017:src0_channel -> rsp_xbar_mux_001:sink17_channel
	wire          rsp_xbar_demux_017_src0_ready;                                                                                        // rsp_xbar_mux_001:sink17_ready -> rsp_xbar_demux_017:src0_ready
	wire          rsp_xbar_demux_018_src0_endofpacket;                                                                                  // rsp_xbar_demux_018:src0_endofpacket -> rsp_xbar_mux_001:sink18_endofpacket
	wire          rsp_xbar_demux_018_src0_valid;                                                                                        // rsp_xbar_demux_018:src0_valid -> rsp_xbar_mux_001:sink18_valid
	wire          rsp_xbar_demux_018_src0_startofpacket;                                                                                // rsp_xbar_demux_018:src0_startofpacket -> rsp_xbar_mux_001:sink18_startofpacket
	wire   [99:0] rsp_xbar_demux_018_src0_data;                                                                                         // rsp_xbar_demux_018:src0_data -> rsp_xbar_mux_001:sink18_data
	wire   [23:0] rsp_xbar_demux_018_src0_channel;                                                                                      // rsp_xbar_demux_018:src0_channel -> rsp_xbar_mux_001:sink18_channel
	wire          rsp_xbar_demux_018_src0_ready;                                                                                        // rsp_xbar_mux_001:sink18_ready -> rsp_xbar_demux_018:src0_ready
	wire          rsp_xbar_demux_019_src0_endofpacket;                                                                                  // rsp_xbar_demux_019:src0_endofpacket -> rsp_xbar_mux_001:sink19_endofpacket
	wire          rsp_xbar_demux_019_src0_valid;                                                                                        // rsp_xbar_demux_019:src0_valid -> rsp_xbar_mux_001:sink19_valid
	wire          rsp_xbar_demux_019_src0_startofpacket;                                                                                // rsp_xbar_demux_019:src0_startofpacket -> rsp_xbar_mux_001:sink19_startofpacket
	wire   [99:0] rsp_xbar_demux_019_src0_data;                                                                                         // rsp_xbar_demux_019:src0_data -> rsp_xbar_mux_001:sink19_data
	wire   [23:0] rsp_xbar_demux_019_src0_channel;                                                                                      // rsp_xbar_demux_019:src0_channel -> rsp_xbar_mux_001:sink19_channel
	wire          rsp_xbar_demux_019_src0_ready;                                                                                        // rsp_xbar_mux_001:sink19_ready -> rsp_xbar_demux_019:src0_ready
	wire          rsp_xbar_demux_020_src0_endofpacket;                                                                                  // rsp_xbar_demux_020:src0_endofpacket -> rsp_xbar_mux_001:sink20_endofpacket
	wire          rsp_xbar_demux_020_src0_valid;                                                                                        // rsp_xbar_demux_020:src0_valid -> rsp_xbar_mux_001:sink20_valid
	wire          rsp_xbar_demux_020_src0_startofpacket;                                                                                // rsp_xbar_demux_020:src0_startofpacket -> rsp_xbar_mux_001:sink20_startofpacket
	wire   [99:0] rsp_xbar_demux_020_src0_data;                                                                                         // rsp_xbar_demux_020:src0_data -> rsp_xbar_mux_001:sink20_data
	wire   [23:0] rsp_xbar_demux_020_src0_channel;                                                                                      // rsp_xbar_demux_020:src0_channel -> rsp_xbar_mux_001:sink20_channel
	wire          rsp_xbar_demux_020_src0_ready;                                                                                        // rsp_xbar_mux_001:sink20_ready -> rsp_xbar_demux_020:src0_ready
	wire          rsp_xbar_demux_021_src0_endofpacket;                                                                                  // rsp_xbar_demux_021:src0_endofpacket -> rsp_xbar_mux_001:sink21_endofpacket
	wire          rsp_xbar_demux_021_src0_valid;                                                                                        // rsp_xbar_demux_021:src0_valid -> rsp_xbar_mux_001:sink21_valid
	wire          rsp_xbar_demux_021_src0_startofpacket;                                                                                // rsp_xbar_demux_021:src0_startofpacket -> rsp_xbar_mux_001:sink21_startofpacket
	wire   [99:0] rsp_xbar_demux_021_src0_data;                                                                                         // rsp_xbar_demux_021:src0_data -> rsp_xbar_mux_001:sink21_data
	wire   [23:0] rsp_xbar_demux_021_src0_channel;                                                                                      // rsp_xbar_demux_021:src0_channel -> rsp_xbar_mux_001:sink21_channel
	wire          rsp_xbar_demux_021_src0_ready;                                                                                        // rsp_xbar_mux_001:sink21_ready -> rsp_xbar_demux_021:src0_ready
	wire          rsp_xbar_demux_022_src0_endofpacket;                                                                                  // rsp_xbar_demux_022:src0_endofpacket -> rsp_xbar_mux_001:sink22_endofpacket
	wire          rsp_xbar_demux_022_src0_valid;                                                                                        // rsp_xbar_demux_022:src0_valid -> rsp_xbar_mux_001:sink22_valid
	wire          rsp_xbar_demux_022_src0_startofpacket;                                                                                // rsp_xbar_demux_022:src0_startofpacket -> rsp_xbar_mux_001:sink22_startofpacket
	wire   [99:0] rsp_xbar_demux_022_src0_data;                                                                                         // rsp_xbar_demux_022:src0_data -> rsp_xbar_mux_001:sink22_data
	wire   [23:0] rsp_xbar_demux_022_src0_channel;                                                                                      // rsp_xbar_demux_022:src0_channel -> rsp_xbar_mux_001:sink22_channel
	wire          rsp_xbar_demux_022_src0_ready;                                                                                        // rsp_xbar_mux_001:sink22_ready -> rsp_xbar_demux_022:src0_ready
	wire          rsp_xbar_demux_023_src0_endofpacket;                                                                                  // rsp_xbar_demux_023:src0_endofpacket -> rsp_xbar_mux_001:sink23_endofpacket
	wire          rsp_xbar_demux_023_src0_valid;                                                                                        // rsp_xbar_demux_023:src0_valid -> rsp_xbar_mux_001:sink23_valid
	wire          rsp_xbar_demux_023_src0_startofpacket;                                                                                // rsp_xbar_demux_023:src0_startofpacket -> rsp_xbar_mux_001:sink23_startofpacket
	wire   [99:0] rsp_xbar_demux_023_src0_data;                                                                                         // rsp_xbar_demux_023:src0_data -> rsp_xbar_mux_001:sink23_data
	wire   [23:0] rsp_xbar_demux_023_src0_channel;                                                                                      // rsp_xbar_demux_023:src0_channel -> rsp_xbar_mux_001:sink23_channel
	wire          rsp_xbar_demux_023_src0_ready;                                                                                        // rsp_xbar_mux_001:sink23_ready -> rsp_xbar_demux_023:src0_ready
	wire          addr_router_src_endofpacket;                                                                                          // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire          addr_router_src_valid;                                                                                                // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire          addr_router_src_startofpacket;                                                                                        // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire   [99:0] addr_router_src_data;                                                                                                 // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire   [23:0] addr_router_src_channel;                                                                                              // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire          addr_router_src_ready;                                                                                                // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire          rsp_xbar_mux_src_endofpacket;                                                                                         // rsp_xbar_mux:src_endofpacket -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_src_valid;                                                                                               // rsp_xbar_mux:src_valid -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_src_startofpacket;                                                                                       // rsp_xbar_mux:src_startofpacket -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire   [99:0] rsp_xbar_mux_src_data;                                                                                                // rsp_xbar_mux:src_data -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire   [23:0] rsp_xbar_mux_src_channel;                                                                                             // rsp_xbar_mux:src_channel -> nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_src_ready;                                                                                               // nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire          addr_router_001_src_endofpacket;                                                                                      // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire          addr_router_001_src_valid;                                                                                            // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire          addr_router_001_src_startofpacket;                                                                                    // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire   [99:0] addr_router_001_src_data;                                                                                             // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire   [23:0] addr_router_001_src_channel;                                                                                          // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire          addr_router_001_src_ready;                                                                                            // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire          rsp_xbar_mux_001_src_endofpacket;                                                                                     // rsp_xbar_mux_001:src_endofpacket -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_001_src_valid;                                                                                           // rsp_xbar_mux_001:src_valid -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_001_src_startofpacket;                                                                                   // rsp_xbar_mux_001:src_startofpacket -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire   [99:0] rsp_xbar_mux_001_src_data;                                                                                            // rsp_xbar_mux_001:src_data -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire   [23:0] rsp_xbar_mux_001_src_channel;                                                                                         // rsp_xbar_mux_001:src_channel -> nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_001_src_ready;                                                                                           // nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire          cmd_xbar_mux_src_endofpacket;                                                                                         // cmd_xbar_mux:src_endofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_src_valid;                                                                                               // cmd_xbar_mux:src_valid -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_src_startofpacket;                                                                                       // cmd_xbar_mux:src_startofpacket -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_src_data;                                                                                                // cmd_xbar_mux:src_data -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_mux_src_channel;                                                                                             // cmd_xbar_mux:src_channel -> nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_src_ready;                                                                                               // nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire          id_router_src_endofpacket;                                                                                            // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire          id_router_src_valid;                                                                                                  // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire          id_router_src_startofpacket;                                                                                          // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire   [99:0] id_router_src_data;                                                                                                   // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [23:0] id_router_src_channel;                                                                                                // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire          id_router_src_ready;                                                                                                  // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire          cmd_xbar_mux_002_src_endofpacket;                                                                                     // cmd_xbar_mux_002:src_endofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_002_src_valid;                                                                                           // cmd_xbar_mux_002:src_valid -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_002_src_startofpacket;                                                                                   // cmd_xbar_mux_002:src_startofpacket -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [99:0] cmd_xbar_mux_002_src_data;                                                                                            // cmd_xbar_mux_002:src_data -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [23:0] cmd_xbar_mux_002_src_channel;                                                                                         // cmd_xbar_mux_002:src_channel -> onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_002_src_ready;                                                                                           // onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire          id_router_002_src_endofpacket;                                                                                        // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire          id_router_002_src_valid;                                                                                              // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire          id_router_002_src_startofpacket;                                                                                      // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire   [99:0] id_router_002_src_data;                                                                                               // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire   [23:0] id_router_002_src_channel;                                                                                            // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire          id_router_002_src_ready;                                                                                              // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire          cmd_xbar_demux_001_src3_ready;                                                                                        // timer_0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_demux_001:src3_ready
	wire          id_router_003_src_endofpacket;                                                                                        // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire          id_router_003_src_valid;                                                                                              // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire          id_router_003_src_startofpacket;                                                                                      // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire   [99:0] id_router_003_src_data;                                                                                               // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire   [23:0] id_router_003_src_channel;                                                                                            // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire          id_router_003_src_ready;                                                                                              // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire          cmd_xbar_demux_001_src4_ready;                                                                                        // sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_demux_001:src4_ready
	wire          id_router_004_src_endofpacket;                                                                                        // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire          id_router_004_src_valid;                                                                                              // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire          id_router_004_src_startofpacket;                                                                                      // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire   [99:0] id_router_004_src_data;                                                                                               // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire   [23:0] id_router_004_src_channel;                                                                                            // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire          id_router_004_src_ready;                                                                                              // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire          cmd_xbar_demux_001_src5_ready;                                                                                        // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_demux_001:src5_ready
	wire          id_router_005_src_endofpacket;                                                                                        // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire          id_router_005_src_valid;                                                                                              // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire          id_router_005_src_startofpacket;                                                                                      // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire   [99:0] id_router_005_src_data;                                                                                               // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire   [23:0] id_router_005_src_channel;                                                                                            // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire          id_router_005_src_ready;                                                                                              // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire          cmd_xbar_demux_001_src6_ready;                                                                                        // audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_demux_001:src6_ready
	wire          id_router_006_src_endofpacket;                                                                                        // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire          id_router_006_src_valid;                                                                                              // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire          id_router_006_src_startofpacket;                                                                                      // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire   [99:0] id_router_006_src_data;                                                                                               // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire   [23:0] id_router_006_src_channel;                                                                                            // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire          id_router_006_src_ready;                                                                                              // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire          cmd_xbar_mux_001_src_endofpacket;                                                                                     // cmd_xbar_mux_001:src_endofpacket -> width_adapter:in_endofpacket
	wire          cmd_xbar_mux_001_src_valid;                                                                                           // cmd_xbar_mux_001:src_valid -> width_adapter:in_valid
	wire          cmd_xbar_mux_001_src_startofpacket;                                                                                   // cmd_xbar_mux_001:src_startofpacket -> width_adapter:in_startofpacket
	wire   [99:0] cmd_xbar_mux_001_src_data;                                                                                            // cmd_xbar_mux_001:src_data -> width_adapter:in_data
	wire   [23:0] cmd_xbar_mux_001_src_channel;                                                                                         // cmd_xbar_mux_001:src_channel -> width_adapter:in_channel
	wire          cmd_xbar_mux_001_src_ready;                                                                                           // width_adapter:in_ready -> cmd_xbar_mux_001:src_ready
	wire          width_adapter_src_endofpacket;                                                                                        // width_adapter:out_endofpacket -> burst_adapter:sink0_endofpacket
	wire          width_adapter_src_valid;                                                                                              // width_adapter:out_valid -> burst_adapter:sink0_valid
	wire          width_adapter_src_startofpacket;                                                                                      // width_adapter:out_startofpacket -> burst_adapter:sink0_startofpacket
	wire   [81:0] width_adapter_src_data;                                                                                               // width_adapter:out_data -> burst_adapter:sink0_data
	wire          width_adapter_src_ready;                                                                                              // burst_adapter:sink0_ready -> width_adapter:out_ready
	wire   [23:0] width_adapter_src_channel;                                                                                            // width_adapter:out_channel -> burst_adapter:sink0_channel
	wire          id_router_001_src_endofpacket;                                                                                        // id_router_001:src_endofpacket -> width_adapter_001:in_endofpacket
	wire          id_router_001_src_valid;                                                                                              // id_router_001:src_valid -> width_adapter_001:in_valid
	wire          id_router_001_src_startofpacket;                                                                                      // id_router_001:src_startofpacket -> width_adapter_001:in_startofpacket
	wire   [81:0] id_router_001_src_data;                                                                                               // id_router_001:src_data -> width_adapter_001:in_data
	wire   [23:0] id_router_001_src_channel;                                                                                            // id_router_001:src_channel -> width_adapter_001:in_channel
	wire          id_router_001_src_ready;                                                                                              // width_adapter_001:in_ready -> id_router_001:src_ready
	wire          width_adapter_001_src_endofpacket;                                                                                    // width_adapter_001:out_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire          width_adapter_001_src_valid;                                                                                          // width_adapter_001:out_valid -> rsp_xbar_demux_001:sink_valid
	wire          width_adapter_001_src_startofpacket;                                                                                  // width_adapter_001:out_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire   [99:0] width_adapter_001_src_data;                                                                                           // width_adapter_001:out_data -> rsp_xbar_demux_001:sink_data
	wire          width_adapter_001_src_ready;                                                                                          // rsp_xbar_demux_001:sink_ready -> width_adapter_001:out_ready
	wire   [23:0] width_adapter_001_src_channel;                                                                                        // width_adapter_001:out_channel -> rsp_xbar_demux_001:sink_channel
	wire          cmd_xbar_demux_001_src7_ready;                                                                                        // width_adapter_002:in_ready -> cmd_xbar_demux_001:src7_ready
	wire          width_adapter_002_src_endofpacket;                                                                                    // width_adapter_002:out_endofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_002_src_valid;                                                                                          // width_adapter_002:out_valid -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_002_src_startofpacket;                                                                                  // width_adapter_002:out_startofpacket -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_002_src_data;                                                                                           // width_adapter_002:out_data -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_002_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_002:out_ready
	wire   [23:0] width_adapter_002_src_channel;                                                                                        // width_adapter_002:out_channel -> WaveformGenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_007_src_endofpacket;                                                                                        // id_router_007:src_endofpacket -> width_adapter_003:in_endofpacket
	wire          id_router_007_src_valid;                                                                                              // id_router_007:src_valid -> width_adapter_003:in_valid
	wire          id_router_007_src_startofpacket;                                                                                      // id_router_007:src_startofpacket -> width_adapter_003:in_startofpacket
	wire  [135:0] id_router_007_src_data;                                                                                               // id_router_007:src_data -> width_adapter_003:in_data
	wire   [23:0] id_router_007_src_channel;                                                                                            // id_router_007:src_channel -> width_adapter_003:in_channel
	wire          id_router_007_src_ready;                                                                                              // width_adapter_003:in_ready -> id_router_007:src_ready
	wire          width_adapter_003_src_endofpacket;                                                                                    // width_adapter_003:out_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire          width_adapter_003_src_valid;                                                                                          // width_adapter_003:out_valid -> rsp_xbar_demux_007:sink_valid
	wire          width_adapter_003_src_startofpacket;                                                                                  // width_adapter_003:out_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire   [99:0] width_adapter_003_src_data;                                                                                           // width_adapter_003:out_data -> rsp_xbar_demux_007:sink_data
	wire          width_adapter_003_src_ready;                                                                                          // rsp_xbar_demux_007:sink_ready -> width_adapter_003:out_ready
	wire   [23:0] width_adapter_003_src_channel;                                                                                        // width_adapter_003:out_channel -> rsp_xbar_demux_007:sink_channel
	wire          cmd_xbar_demux_001_src8_ready;                                                                                        // width_adapter_004:in_ready -> cmd_xbar_demux_001:src8_ready
	wire          width_adapter_004_src_endofpacket;                                                                                    // width_adapter_004:out_endofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_004_src_valid;                                                                                          // width_adapter_004:out_valid -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_004_src_startofpacket;                                                                                  // width_adapter_004:out_startofpacket -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_004_src_data;                                                                                           // width_adapter_004:out_data -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_004_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_004:out_ready
	wire   [23:0] width_adapter_004_src_channel;                                                                                        // width_adapter_004:out_channel -> WaveformGenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_008_src_endofpacket;                                                                                        // id_router_008:src_endofpacket -> width_adapter_005:in_endofpacket
	wire          id_router_008_src_valid;                                                                                              // id_router_008:src_valid -> width_adapter_005:in_valid
	wire          id_router_008_src_startofpacket;                                                                                      // id_router_008:src_startofpacket -> width_adapter_005:in_startofpacket
	wire  [135:0] id_router_008_src_data;                                                                                               // id_router_008:src_data -> width_adapter_005:in_data
	wire   [23:0] id_router_008_src_channel;                                                                                            // id_router_008:src_channel -> width_adapter_005:in_channel
	wire          id_router_008_src_ready;                                                                                              // width_adapter_005:in_ready -> id_router_008:src_ready
	wire          width_adapter_005_src_endofpacket;                                                                                    // width_adapter_005:out_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire          width_adapter_005_src_valid;                                                                                          // width_adapter_005:out_valid -> rsp_xbar_demux_008:sink_valid
	wire          width_adapter_005_src_startofpacket;                                                                                  // width_adapter_005:out_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire   [99:0] width_adapter_005_src_data;                                                                                           // width_adapter_005:out_data -> rsp_xbar_demux_008:sink_data
	wire          width_adapter_005_src_ready;                                                                                          // rsp_xbar_demux_008:sink_ready -> width_adapter_005:out_ready
	wire   [23:0] width_adapter_005_src_channel;                                                                                        // width_adapter_005:out_channel -> rsp_xbar_demux_008:sink_channel
	wire          cmd_xbar_demux_001_src9_ready;                                                                                        // width_adapter_006:in_ready -> cmd_xbar_demux_001:src9_ready
	wire          width_adapter_006_src_endofpacket;                                                                                    // width_adapter_006:out_endofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_006_src_valid;                                                                                          // width_adapter_006:out_valid -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_006_src_startofpacket;                                                                                  // width_adapter_006:out_startofpacket -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_006_src_data;                                                                                           // width_adapter_006:out_data -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_006_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_006:out_ready
	wire   [23:0] width_adapter_006_src_channel;                                                                                        // width_adapter_006:out_channel -> WaveformGenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_009_src_endofpacket;                                                                                        // id_router_009:src_endofpacket -> width_adapter_007:in_endofpacket
	wire          id_router_009_src_valid;                                                                                              // id_router_009:src_valid -> width_adapter_007:in_valid
	wire          id_router_009_src_startofpacket;                                                                                      // id_router_009:src_startofpacket -> width_adapter_007:in_startofpacket
	wire  [135:0] id_router_009_src_data;                                                                                               // id_router_009:src_data -> width_adapter_007:in_data
	wire   [23:0] id_router_009_src_channel;                                                                                            // id_router_009:src_channel -> width_adapter_007:in_channel
	wire          id_router_009_src_ready;                                                                                              // width_adapter_007:in_ready -> id_router_009:src_ready
	wire          width_adapter_007_src_endofpacket;                                                                                    // width_adapter_007:out_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire          width_adapter_007_src_valid;                                                                                          // width_adapter_007:out_valid -> rsp_xbar_demux_009:sink_valid
	wire          width_adapter_007_src_startofpacket;                                                                                  // width_adapter_007:out_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire   [99:0] width_adapter_007_src_data;                                                                                           // width_adapter_007:out_data -> rsp_xbar_demux_009:sink_data
	wire          width_adapter_007_src_ready;                                                                                          // rsp_xbar_demux_009:sink_ready -> width_adapter_007:out_ready
	wire   [23:0] width_adapter_007_src_channel;                                                                                        // width_adapter_007:out_channel -> rsp_xbar_demux_009:sink_channel
	wire          cmd_xbar_demux_001_src10_ready;                                                                                       // width_adapter_008:in_ready -> cmd_xbar_demux_001:src10_ready
	wire          width_adapter_008_src_endofpacket;                                                                                    // width_adapter_008:out_endofpacket -> burst_adapter_001:sink0_endofpacket
	wire          width_adapter_008_src_valid;                                                                                          // width_adapter_008:out_valid -> burst_adapter_001:sink0_valid
	wire          width_adapter_008_src_startofpacket;                                                                                  // width_adapter_008:out_startofpacket -> burst_adapter_001:sink0_startofpacket
	wire   [72:0] width_adapter_008_src_data;                                                                                           // width_adapter_008:out_data -> burst_adapter_001:sink0_data
	wire          width_adapter_008_src_ready;                                                                                          // burst_adapter_001:sink0_ready -> width_adapter_008:out_ready
	wire   [23:0] width_adapter_008_src_channel;                                                                                        // width_adapter_008:out_channel -> burst_adapter_001:sink0_channel
	wire          id_router_010_src_endofpacket;                                                                                        // id_router_010:src_endofpacket -> width_adapter_009:in_endofpacket
	wire          id_router_010_src_valid;                                                                                              // id_router_010:src_valid -> width_adapter_009:in_valid
	wire          id_router_010_src_startofpacket;                                                                                      // id_router_010:src_startofpacket -> width_adapter_009:in_startofpacket
	wire   [72:0] id_router_010_src_data;                                                                                               // id_router_010:src_data -> width_adapter_009:in_data
	wire   [23:0] id_router_010_src_channel;                                                                                            // id_router_010:src_channel -> width_adapter_009:in_channel
	wire          id_router_010_src_ready;                                                                                              // width_adapter_009:in_ready -> id_router_010:src_ready
	wire          width_adapter_009_src_endofpacket;                                                                                    // width_adapter_009:out_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire          width_adapter_009_src_valid;                                                                                          // width_adapter_009:out_valid -> rsp_xbar_demux_010:sink_valid
	wire          width_adapter_009_src_startofpacket;                                                                                  // width_adapter_009:out_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire   [99:0] width_adapter_009_src_data;                                                                                           // width_adapter_009:out_data -> rsp_xbar_demux_010:sink_data
	wire          width_adapter_009_src_ready;                                                                                          // rsp_xbar_demux_010:sink_ready -> width_adapter_009:out_ready
	wire   [23:0] width_adapter_009_src_channel;                                                                                        // width_adapter_009:out_channel -> rsp_xbar_demux_010:sink_channel
	wire          cmd_xbar_demux_001_src11_ready;                                                                                       // width_adapter_010:in_ready -> cmd_xbar_demux_001:src11_ready
	wire          width_adapter_010_src_endofpacket;                                                                                    // width_adapter_010:out_endofpacket -> burst_adapter_002:sink0_endofpacket
	wire          width_adapter_010_src_valid;                                                                                          // width_adapter_010:out_valid -> burst_adapter_002:sink0_valid
	wire          width_adapter_010_src_startofpacket;                                                                                  // width_adapter_010:out_startofpacket -> burst_adapter_002:sink0_startofpacket
	wire   [72:0] width_adapter_010_src_data;                                                                                           // width_adapter_010:out_data -> burst_adapter_002:sink0_data
	wire          width_adapter_010_src_ready;                                                                                          // burst_adapter_002:sink0_ready -> width_adapter_010:out_ready
	wire   [23:0] width_adapter_010_src_channel;                                                                                        // width_adapter_010:out_channel -> burst_adapter_002:sink0_channel
	wire          id_router_011_src_endofpacket;                                                                                        // id_router_011:src_endofpacket -> width_adapter_011:in_endofpacket
	wire          id_router_011_src_valid;                                                                                              // id_router_011:src_valid -> width_adapter_011:in_valid
	wire          id_router_011_src_startofpacket;                                                                                      // id_router_011:src_startofpacket -> width_adapter_011:in_startofpacket
	wire   [72:0] id_router_011_src_data;                                                                                               // id_router_011:src_data -> width_adapter_011:in_data
	wire   [23:0] id_router_011_src_channel;                                                                                            // id_router_011:src_channel -> width_adapter_011:in_channel
	wire          id_router_011_src_ready;                                                                                              // width_adapter_011:in_ready -> id_router_011:src_ready
	wire          width_adapter_011_src_endofpacket;                                                                                    // width_adapter_011:out_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire          width_adapter_011_src_valid;                                                                                          // width_adapter_011:out_valid -> rsp_xbar_demux_011:sink_valid
	wire          width_adapter_011_src_startofpacket;                                                                                  // width_adapter_011:out_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire   [99:0] width_adapter_011_src_data;                                                                                           // width_adapter_011:out_data -> rsp_xbar_demux_011:sink_data
	wire          width_adapter_011_src_ready;                                                                                          // rsp_xbar_demux_011:sink_ready -> width_adapter_011:out_ready
	wire   [23:0] width_adapter_011_src_channel;                                                                                        // width_adapter_011:out_channel -> rsp_xbar_demux_011:sink_channel
	wire          cmd_xbar_demux_001_src12_ready;                                                                                       // width_adapter_012:in_ready -> cmd_xbar_demux_001:src12_ready
	wire          width_adapter_012_src_endofpacket;                                                                                    // width_adapter_012:out_endofpacket -> burst_adapter_003:sink0_endofpacket
	wire          width_adapter_012_src_valid;                                                                                          // width_adapter_012:out_valid -> burst_adapter_003:sink0_valid
	wire          width_adapter_012_src_startofpacket;                                                                                  // width_adapter_012:out_startofpacket -> burst_adapter_003:sink0_startofpacket
	wire   [72:0] width_adapter_012_src_data;                                                                                           // width_adapter_012:out_data -> burst_adapter_003:sink0_data
	wire          width_adapter_012_src_ready;                                                                                          // burst_adapter_003:sink0_ready -> width_adapter_012:out_ready
	wire   [23:0] width_adapter_012_src_channel;                                                                                        // width_adapter_012:out_channel -> burst_adapter_003:sink0_channel
	wire          id_router_012_src_endofpacket;                                                                                        // id_router_012:src_endofpacket -> width_adapter_013:in_endofpacket
	wire          id_router_012_src_valid;                                                                                              // id_router_012:src_valid -> width_adapter_013:in_valid
	wire          id_router_012_src_startofpacket;                                                                                      // id_router_012:src_startofpacket -> width_adapter_013:in_startofpacket
	wire   [72:0] id_router_012_src_data;                                                                                               // id_router_012:src_data -> width_adapter_013:in_data
	wire   [23:0] id_router_012_src_channel;                                                                                            // id_router_012:src_channel -> width_adapter_013:in_channel
	wire          id_router_012_src_ready;                                                                                              // width_adapter_013:in_ready -> id_router_012:src_ready
	wire          width_adapter_013_src_endofpacket;                                                                                    // width_adapter_013:out_endofpacket -> rsp_xbar_demux_012:sink_endofpacket
	wire          width_adapter_013_src_valid;                                                                                          // width_adapter_013:out_valid -> rsp_xbar_demux_012:sink_valid
	wire          width_adapter_013_src_startofpacket;                                                                                  // width_adapter_013:out_startofpacket -> rsp_xbar_demux_012:sink_startofpacket
	wire   [99:0] width_adapter_013_src_data;                                                                                           // width_adapter_013:out_data -> rsp_xbar_demux_012:sink_data
	wire          width_adapter_013_src_ready;                                                                                          // rsp_xbar_demux_012:sink_ready -> width_adapter_013:out_ready
	wire   [23:0] width_adapter_013_src_channel;                                                                                        // width_adapter_013:out_channel -> rsp_xbar_demux_012:sink_channel
	wire          cmd_xbar_demux_001_src13_ready;                                                                                       // width_adapter_014:in_ready -> cmd_xbar_demux_001:src13_ready
	wire          width_adapter_014_src_endofpacket;                                                                                    // width_adapter_014:out_endofpacket -> burst_adapter_004:sink0_endofpacket
	wire          width_adapter_014_src_valid;                                                                                          // width_adapter_014:out_valid -> burst_adapter_004:sink0_valid
	wire          width_adapter_014_src_startofpacket;                                                                                  // width_adapter_014:out_startofpacket -> burst_adapter_004:sink0_startofpacket
	wire   [72:0] width_adapter_014_src_data;                                                                                           // width_adapter_014:out_data -> burst_adapter_004:sink0_data
	wire          width_adapter_014_src_ready;                                                                                          // burst_adapter_004:sink0_ready -> width_adapter_014:out_ready
	wire   [23:0] width_adapter_014_src_channel;                                                                                        // width_adapter_014:out_channel -> burst_adapter_004:sink0_channel
	wire          id_router_013_src_endofpacket;                                                                                        // id_router_013:src_endofpacket -> width_adapter_015:in_endofpacket
	wire          id_router_013_src_valid;                                                                                              // id_router_013:src_valid -> width_adapter_015:in_valid
	wire          id_router_013_src_startofpacket;                                                                                      // id_router_013:src_startofpacket -> width_adapter_015:in_startofpacket
	wire   [72:0] id_router_013_src_data;                                                                                               // id_router_013:src_data -> width_adapter_015:in_data
	wire   [23:0] id_router_013_src_channel;                                                                                            // id_router_013:src_channel -> width_adapter_015:in_channel
	wire          id_router_013_src_ready;                                                                                              // width_adapter_015:in_ready -> id_router_013:src_ready
	wire          width_adapter_015_src_endofpacket;                                                                                    // width_adapter_015:out_endofpacket -> rsp_xbar_demux_013:sink_endofpacket
	wire          width_adapter_015_src_valid;                                                                                          // width_adapter_015:out_valid -> rsp_xbar_demux_013:sink_valid
	wire          width_adapter_015_src_startofpacket;                                                                                  // width_adapter_015:out_startofpacket -> rsp_xbar_demux_013:sink_startofpacket
	wire   [99:0] width_adapter_015_src_data;                                                                                           // width_adapter_015:out_data -> rsp_xbar_demux_013:sink_data
	wire          width_adapter_015_src_ready;                                                                                          // rsp_xbar_demux_013:sink_ready -> width_adapter_015:out_ready
	wire   [23:0] width_adapter_015_src_channel;                                                                                        // width_adapter_015:out_channel -> rsp_xbar_demux_013:sink_channel
	wire          cmd_xbar_demux_001_src14_ready;                                                                                       // width_adapter_016:in_ready -> cmd_xbar_demux_001:src14_ready
	wire          width_adapter_016_src_endofpacket;                                                                                    // width_adapter_016:out_endofpacket -> burst_adapter_005:sink0_endofpacket
	wire          width_adapter_016_src_valid;                                                                                          // width_adapter_016:out_valid -> burst_adapter_005:sink0_valid
	wire          width_adapter_016_src_startofpacket;                                                                                  // width_adapter_016:out_startofpacket -> burst_adapter_005:sink0_startofpacket
	wire   [72:0] width_adapter_016_src_data;                                                                                           // width_adapter_016:out_data -> burst_adapter_005:sink0_data
	wire          width_adapter_016_src_ready;                                                                                          // burst_adapter_005:sink0_ready -> width_adapter_016:out_ready
	wire   [23:0] width_adapter_016_src_channel;                                                                                        // width_adapter_016:out_channel -> burst_adapter_005:sink0_channel
	wire          id_router_014_src_endofpacket;                                                                                        // id_router_014:src_endofpacket -> width_adapter_017:in_endofpacket
	wire          id_router_014_src_valid;                                                                                              // id_router_014:src_valid -> width_adapter_017:in_valid
	wire          id_router_014_src_startofpacket;                                                                                      // id_router_014:src_startofpacket -> width_adapter_017:in_startofpacket
	wire   [72:0] id_router_014_src_data;                                                                                               // id_router_014:src_data -> width_adapter_017:in_data
	wire   [23:0] id_router_014_src_channel;                                                                                            // id_router_014:src_channel -> width_adapter_017:in_channel
	wire          id_router_014_src_ready;                                                                                              // width_adapter_017:in_ready -> id_router_014:src_ready
	wire          width_adapter_017_src_endofpacket;                                                                                    // width_adapter_017:out_endofpacket -> rsp_xbar_demux_014:sink_endofpacket
	wire          width_adapter_017_src_valid;                                                                                          // width_adapter_017:out_valid -> rsp_xbar_demux_014:sink_valid
	wire          width_adapter_017_src_startofpacket;                                                                                  // width_adapter_017:out_startofpacket -> rsp_xbar_demux_014:sink_startofpacket
	wire   [99:0] width_adapter_017_src_data;                                                                                           // width_adapter_017:out_data -> rsp_xbar_demux_014:sink_data
	wire          width_adapter_017_src_ready;                                                                                          // rsp_xbar_demux_014:sink_ready -> width_adapter_017:out_ready
	wire   [23:0] width_adapter_017_src_channel;                                                                                        // width_adapter_017:out_channel -> rsp_xbar_demux_014:sink_channel
	wire          cmd_xbar_demux_001_src15_ready;                                                                                       // width_adapter_018:in_ready -> cmd_xbar_demux_001:src15_ready
	wire          width_adapter_018_src_endofpacket;                                                                                    // width_adapter_018:out_endofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_018_src_valid;                                                                                          // width_adapter_018:out_valid -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_018_src_startofpacket;                                                                                  // width_adapter_018:out_startofpacket -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_018_src_data;                                                                                           // width_adapter_018:out_data -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_018_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_018:out_ready
	wire   [23:0] width_adapter_018_src_channel;                                                                                        // width_adapter_018:out_channel -> WaveformGenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_015_src_endofpacket;                                                                                        // id_router_015:src_endofpacket -> width_adapter_019:in_endofpacket
	wire          id_router_015_src_valid;                                                                                              // id_router_015:src_valid -> width_adapter_019:in_valid
	wire          id_router_015_src_startofpacket;                                                                                      // id_router_015:src_startofpacket -> width_adapter_019:in_startofpacket
	wire  [135:0] id_router_015_src_data;                                                                                               // id_router_015:src_data -> width_adapter_019:in_data
	wire   [23:0] id_router_015_src_channel;                                                                                            // id_router_015:src_channel -> width_adapter_019:in_channel
	wire          id_router_015_src_ready;                                                                                              // width_adapter_019:in_ready -> id_router_015:src_ready
	wire          width_adapter_019_src_endofpacket;                                                                                    // width_adapter_019:out_endofpacket -> rsp_xbar_demux_015:sink_endofpacket
	wire          width_adapter_019_src_valid;                                                                                          // width_adapter_019:out_valid -> rsp_xbar_demux_015:sink_valid
	wire          width_adapter_019_src_startofpacket;                                                                                  // width_adapter_019:out_startofpacket -> rsp_xbar_demux_015:sink_startofpacket
	wire   [99:0] width_adapter_019_src_data;                                                                                           // width_adapter_019:out_data -> rsp_xbar_demux_015:sink_data
	wire          width_adapter_019_src_ready;                                                                                          // rsp_xbar_demux_015:sink_ready -> width_adapter_019:out_ready
	wire   [23:0] width_adapter_019_src_channel;                                                                                        // width_adapter_019:out_channel -> rsp_xbar_demux_015:sink_channel
	wire          cmd_xbar_demux_001_src16_ready;                                                                                       // width_adapter_020:in_ready -> cmd_xbar_demux_001:src16_ready
	wire          width_adapter_020_src_endofpacket;                                                                                    // width_adapter_020:out_endofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_020_src_valid;                                                                                          // width_adapter_020:out_valid -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_020_src_startofpacket;                                                                                  // width_adapter_020:out_startofpacket -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_020_src_data;                                                                                           // width_adapter_020:out_data -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_020_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_020:out_ready
	wire   [23:0] width_adapter_020_src_channel;                                                                                        // width_adapter_020:out_channel -> WaveformGenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_016_src_endofpacket;                                                                                        // id_router_016:src_endofpacket -> width_adapter_021:in_endofpacket
	wire          id_router_016_src_valid;                                                                                              // id_router_016:src_valid -> width_adapter_021:in_valid
	wire          id_router_016_src_startofpacket;                                                                                      // id_router_016:src_startofpacket -> width_adapter_021:in_startofpacket
	wire  [135:0] id_router_016_src_data;                                                                                               // id_router_016:src_data -> width_adapter_021:in_data
	wire   [23:0] id_router_016_src_channel;                                                                                            // id_router_016:src_channel -> width_adapter_021:in_channel
	wire          id_router_016_src_ready;                                                                                              // width_adapter_021:in_ready -> id_router_016:src_ready
	wire          width_adapter_021_src_endofpacket;                                                                                    // width_adapter_021:out_endofpacket -> rsp_xbar_demux_016:sink_endofpacket
	wire          width_adapter_021_src_valid;                                                                                          // width_adapter_021:out_valid -> rsp_xbar_demux_016:sink_valid
	wire          width_adapter_021_src_startofpacket;                                                                                  // width_adapter_021:out_startofpacket -> rsp_xbar_demux_016:sink_startofpacket
	wire   [99:0] width_adapter_021_src_data;                                                                                           // width_adapter_021:out_data -> rsp_xbar_demux_016:sink_data
	wire          width_adapter_021_src_ready;                                                                                          // rsp_xbar_demux_016:sink_ready -> width_adapter_021:out_ready
	wire   [23:0] width_adapter_021_src_channel;                                                                                        // width_adapter_021:out_channel -> rsp_xbar_demux_016:sink_channel
	wire          cmd_xbar_demux_001_src17_ready;                                                                                       // width_adapter_022:in_ready -> cmd_xbar_demux_001:src17_ready
	wire          width_adapter_022_src_endofpacket;                                                                                    // width_adapter_022:out_endofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_022_src_valid;                                                                                          // width_adapter_022:out_valid -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_022_src_startofpacket;                                                                                  // width_adapter_022:out_startofpacket -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_022_src_data;                                                                                           // width_adapter_022:out_data -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_022_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_022:out_ready
	wire   [23:0] width_adapter_022_src_channel;                                                                                        // width_adapter_022:out_channel -> WaveformGenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_017_src_endofpacket;                                                                                        // id_router_017:src_endofpacket -> width_adapter_023:in_endofpacket
	wire          id_router_017_src_valid;                                                                                              // id_router_017:src_valid -> width_adapter_023:in_valid
	wire          id_router_017_src_startofpacket;                                                                                      // id_router_017:src_startofpacket -> width_adapter_023:in_startofpacket
	wire  [135:0] id_router_017_src_data;                                                                                               // id_router_017:src_data -> width_adapter_023:in_data
	wire   [23:0] id_router_017_src_channel;                                                                                            // id_router_017:src_channel -> width_adapter_023:in_channel
	wire          id_router_017_src_ready;                                                                                              // width_adapter_023:in_ready -> id_router_017:src_ready
	wire          width_adapter_023_src_endofpacket;                                                                                    // width_adapter_023:out_endofpacket -> rsp_xbar_demux_017:sink_endofpacket
	wire          width_adapter_023_src_valid;                                                                                          // width_adapter_023:out_valid -> rsp_xbar_demux_017:sink_valid
	wire          width_adapter_023_src_startofpacket;                                                                                  // width_adapter_023:out_startofpacket -> rsp_xbar_demux_017:sink_startofpacket
	wire   [99:0] width_adapter_023_src_data;                                                                                           // width_adapter_023:out_data -> rsp_xbar_demux_017:sink_data
	wire          width_adapter_023_src_ready;                                                                                          // rsp_xbar_demux_017:sink_ready -> width_adapter_023:out_ready
	wire   [23:0] width_adapter_023_src_channel;                                                                                        // width_adapter_023:out_channel -> rsp_xbar_demux_017:sink_channel
	wire          cmd_xbar_demux_001_src18_ready;                                                                                       // width_adapter_024:in_ready -> cmd_xbar_demux_001:src18_ready
	wire          width_adapter_024_src_endofpacket;                                                                                    // width_adapter_024:out_endofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_024_src_valid;                                                                                          // width_adapter_024:out_valid -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_024_src_startofpacket;                                                                                  // width_adapter_024:out_startofpacket -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_024_src_data;                                                                                           // width_adapter_024:out_data -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_024_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_024:out_ready
	wire   [23:0] width_adapter_024_src_channel;                                                                                        // width_adapter_024:out_channel -> WaveformGenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_018_src_endofpacket;                                                                                        // id_router_018:src_endofpacket -> width_adapter_025:in_endofpacket
	wire          id_router_018_src_valid;                                                                                              // id_router_018:src_valid -> width_adapter_025:in_valid
	wire          id_router_018_src_startofpacket;                                                                                      // id_router_018:src_startofpacket -> width_adapter_025:in_startofpacket
	wire  [135:0] id_router_018_src_data;                                                                                               // id_router_018:src_data -> width_adapter_025:in_data
	wire   [23:0] id_router_018_src_channel;                                                                                            // id_router_018:src_channel -> width_adapter_025:in_channel
	wire          id_router_018_src_ready;                                                                                              // width_adapter_025:in_ready -> id_router_018:src_ready
	wire          width_adapter_025_src_endofpacket;                                                                                    // width_adapter_025:out_endofpacket -> rsp_xbar_demux_018:sink_endofpacket
	wire          width_adapter_025_src_valid;                                                                                          // width_adapter_025:out_valid -> rsp_xbar_demux_018:sink_valid
	wire          width_adapter_025_src_startofpacket;                                                                                  // width_adapter_025:out_startofpacket -> rsp_xbar_demux_018:sink_startofpacket
	wire   [99:0] width_adapter_025_src_data;                                                                                           // width_adapter_025:out_data -> rsp_xbar_demux_018:sink_data
	wire          width_adapter_025_src_ready;                                                                                          // rsp_xbar_demux_018:sink_ready -> width_adapter_025:out_ready
	wire   [23:0] width_adapter_025_src_channel;                                                                                        // width_adapter_025:out_channel -> rsp_xbar_demux_018:sink_channel
	wire          cmd_xbar_demux_001_src19_ready;                                                                                       // width_adapter_026:in_ready -> cmd_xbar_demux_001:src19_ready
	wire          width_adapter_026_src_endofpacket;                                                                                    // width_adapter_026:out_endofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          width_adapter_026_src_valid;                                                                                          // width_adapter_026:out_valid -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_valid
	wire          width_adapter_026_src_startofpacket;                                                                                  // width_adapter_026:out_startofpacket -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [135:0] width_adapter_026_src_data;                                                                                           // width_adapter_026:out_data -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_data
	wire          width_adapter_026_src_ready;                                                                                          // WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_ready -> width_adapter_026:out_ready
	wire   [23:0] width_adapter_026_src_channel;                                                                                        // width_adapter_026:out_channel -> WaveformGenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent:cp_channel
	wire          id_router_019_src_endofpacket;                                                                                        // id_router_019:src_endofpacket -> width_adapter_027:in_endofpacket
	wire          id_router_019_src_valid;                                                                                              // id_router_019:src_valid -> width_adapter_027:in_valid
	wire          id_router_019_src_startofpacket;                                                                                      // id_router_019:src_startofpacket -> width_adapter_027:in_startofpacket
	wire  [135:0] id_router_019_src_data;                                                                                               // id_router_019:src_data -> width_adapter_027:in_data
	wire   [23:0] id_router_019_src_channel;                                                                                            // id_router_019:src_channel -> width_adapter_027:in_channel
	wire          id_router_019_src_ready;                                                                                              // width_adapter_027:in_ready -> id_router_019:src_ready
	wire          width_adapter_027_src_endofpacket;                                                                                    // width_adapter_027:out_endofpacket -> rsp_xbar_demux_019:sink_endofpacket
	wire          width_adapter_027_src_valid;                                                                                          // width_adapter_027:out_valid -> rsp_xbar_demux_019:sink_valid
	wire          width_adapter_027_src_startofpacket;                                                                                  // width_adapter_027:out_startofpacket -> rsp_xbar_demux_019:sink_startofpacket
	wire   [99:0] width_adapter_027_src_data;                                                                                           // width_adapter_027:out_data -> rsp_xbar_demux_019:sink_data
	wire          width_adapter_027_src_ready;                                                                                          // rsp_xbar_demux_019:sink_ready -> width_adapter_027:out_ready
	wire   [23:0] width_adapter_027_src_channel;                                                                                        // width_adapter_027:out_channel -> rsp_xbar_demux_019:sink_channel
	wire          cmd_xbar_demux_001_src20_ready;                                                                                       // width_adapter_028:in_ready -> cmd_xbar_demux_001:src20_ready
	wire          width_adapter_028_src_endofpacket;                                                                                    // width_adapter_028:out_endofpacket -> burst_adapter_006:sink0_endofpacket
	wire          width_adapter_028_src_valid;                                                                                          // width_adapter_028:out_valid -> burst_adapter_006:sink0_valid
	wire          width_adapter_028_src_startofpacket;                                                                                  // width_adapter_028:out_startofpacket -> burst_adapter_006:sink0_startofpacket
	wire   [72:0] width_adapter_028_src_data;                                                                                           // width_adapter_028:out_data -> burst_adapter_006:sink0_data
	wire          width_adapter_028_src_ready;                                                                                          // burst_adapter_006:sink0_ready -> width_adapter_028:out_ready
	wire   [23:0] width_adapter_028_src_channel;                                                                                        // width_adapter_028:out_channel -> burst_adapter_006:sink0_channel
	wire          id_router_020_src_endofpacket;                                                                                        // id_router_020:src_endofpacket -> width_adapter_029:in_endofpacket
	wire          id_router_020_src_valid;                                                                                              // id_router_020:src_valid -> width_adapter_029:in_valid
	wire          id_router_020_src_startofpacket;                                                                                      // id_router_020:src_startofpacket -> width_adapter_029:in_startofpacket
	wire   [72:0] id_router_020_src_data;                                                                                               // id_router_020:src_data -> width_adapter_029:in_data
	wire   [23:0] id_router_020_src_channel;                                                                                            // id_router_020:src_channel -> width_adapter_029:in_channel
	wire          id_router_020_src_ready;                                                                                              // width_adapter_029:in_ready -> id_router_020:src_ready
	wire          width_adapter_029_src_endofpacket;                                                                                    // width_adapter_029:out_endofpacket -> rsp_xbar_demux_020:sink_endofpacket
	wire          width_adapter_029_src_valid;                                                                                          // width_adapter_029:out_valid -> rsp_xbar_demux_020:sink_valid
	wire          width_adapter_029_src_startofpacket;                                                                                  // width_adapter_029:out_startofpacket -> rsp_xbar_demux_020:sink_startofpacket
	wire   [99:0] width_adapter_029_src_data;                                                                                           // width_adapter_029:out_data -> rsp_xbar_demux_020:sink_data
	wire          width_adapter_029_src_ready;                                                                                          // rsp_xbar_demux_020:sink_ready -> width_adapter_029:out_ready
	wire   [23:0] width_adapter_029_src_channel;                                                                                        // width_adapter_029:out_channel -> rsp_xbar_demux_020:sink_channel
	wire          cmd_xbar_demux_001_src21_ready;                                                                                       // width_adapter_030:in_ready -> cmd_xbar_demux_001:src21_ready
	wire          width_adapter_030_src_endofpacket;                                                                                    // width_adapter_030:out_endofpacket -> burst_adapter_007:sink0_endofpacket
	wire          width_adapter_030_src_valid;                                                                                          // width_adapter_030:out_valid -> burst_adapter_007:sink0_valid
	wire          width_adapter_030_src_startofpacket;                                                                                  // width_adapter_030:out_startofpacket -> burst_adapter_007:sink0_startofpacket
	wire   [72:0] width_adapter_030_src_data;                                                                                           // width_adapter_030:out_data -> burst_adapter_007:sink0_data
	wire          width_adapter_030_src_ready;                                                                                          // burst_adapter_007:sink0_ready -> width_adapter_030:out_ready
	wire   [23:0] width_adapter_030_src_channel;                                                                                        // width_adapter_030:out_channel -> burst_adapter_007:sink0_channel
	wire          id_router_021_src_endofpacket;                                                                                        // id_router_021:src_endofpacket -> width_adapter_031:in_endofpacket
	wire          id_router_021_src_valid;                                                                                              // id_router_021:src_valid -> width_adapter_031:in_valid
	wire          id_router_021_src_startofpacket;                                                                                      // id_router_021:src_startofpacket -> width_adapter_031:in_startofpacket
	wire   [72:0] id_router_021_src_data;                                                                                               // id_router_021:src_data -> width_adapter_031:in_data
	wire   [23:0] id_router_021_src_channel;                                                                                            // id_router_021:src_channel -> width_adapter_031:in_channel
	wire          id_router_021_src_ready;                                                                                              // width_adapter_031:in_ready -> id_router_021:src_ready
	wire          width_adapter_031_src_endofpacket;                                                                                    // width_adapter_031:out_endofpacket -> rsp_xbar_demux_021:sink_endofpacket
	wire          width_adapter_031_src_valid;                                                                                          // width_adapter_031:out_valid -> rsp_xbar_demux_021:sink_valid
	wire          width_adapter_031_src_startofpacket;                                                                                  // width_adapter_031:out_startofpacket -> rsp_xbar_demux_021:sink_startofpacket
	wire   [99:0] width_adapter_031_src_data;                                                                                           // width_adapter_031:out_data -> rsp_xbar_demux_021:sink_data
	wire          width_adapter_031_src_ready;                                                                                          // rsp_xbar_demux_021:sink_ready -> width_adapter_031:out_ready
	wire   [23:0] width_adapter_031_src_channel;                                                                                        // width_adapter_031:out_channel -> rsp_xbar_demux_021:sink_channel
	wire          cmd_xbar_demux_001_src22_ready;                                                                                       // width_adapter_032:in_ready -> cmd_xbar_demux_001:src22_ready
	wire          width_adapter_032_src_endofpacket;                                                                                    // width_adapter_032:out_endofpacket -> burst_adapter_008:sink0_endofpacket
	wire          width_adapter_032_src_valid;                                                                                          // width_adapter_032:out_valid -> burst_adapter_008:sink0_valid
	wire          width_adapter_032_src_startofpacket;                                                                                  // width_adapter_032:out_startofpacket -> burst_adapter_008:sink0_startofpacket
	wire   [72:0] width_adapter_032_src_data;                                                                                           // width_adapter_032:out_data -> burst_adapter_008:sink0_data
	wire          width_adapter_032_src_ready;                                                                                          // burst_adapter_008:sink0_ready -> width_adapter_032:out_ready
	wire   [23:0] width_adapter_032_src_channel;                                                                                        // width_adapter_032:out_channel -> burst_adapter_008:sink0_channel
	wire          id_router_022_src_endofpacket;                                                                                        // id_router_022:src_endofpacket -> width_adapter_033:in_endofpacket
	wire          id_router_022_src_valid;                                                                                              // id_router_022:src_valid -> width_adapter_033:in_valid
	wire          id_router_022_src_startofpacket;                                                                                      // id_router_022:src_startofpacket -> width_adapter_033:in_startofpacket
	wire   [72:0] id_router_022_src_data;                                                                                               // id_router_022:src_data -> width_adapter_033:in_data
	wire   [23:0] id_router_022_src_channel;                                                                                            // id_router_022:src_channel -> width_adapter_033:in_channel
	wire          id_router_022_src_ready;                                                                                              // width_adapter_033:in_ready -> id_router_022:src_ready
	wire          width_adapter_033_src_endofpacket;                                                                                    // width_adapter_033:out_endofpacket -> rsp_xbar_demux_022:sink_endofpacket
	wire          width_adapter_033_src_valid;                                                                                          // width_adapter_033:out_valid -> rsp_xbar_demux_022:sink_valid
	wire          width_adapter_033_src_startofpacket;                                                                                  // width_adapter_033:out_startofpacket -> rsp_xbar_demux_022:sink_startofpacket
	wire   [99:0] width_adapter_033_src_data;                                                                                           // width_adapter_033:out_data -> rsp_xbar_demux_022:sink_data
	wire          width_adapter_033_src_ready;                                                                                          // rsp_xbar_demux_022:sink_ready -> width_adapter_033:out_ready
	wire   [23:0] width_adapter_033_src_channel;                                                                                        // width_adapter_033:out_channel -> rsp_xbar_demux_022:sink_channel
	wire          cmd_xbar_demux_001_src23_ready;                                                                                       // width_adapter_034:in_ready -> cmd_xbar_demux_001:src23_ready
	wire          width_adapter_034_src_endofpacket;                                                                                    // width_adapter_034:out_endofpacket -> burst_adapter_009:sink0_endofpacket
	wire          width_adapter_034_src_valid;                                                                                          // width_adapter_034:out_valid -> burst_adapter_009:sink0_valid
	wire          width_adapter_034_src_startofpacket;                                                                                  // width_adapter_034:out_startofpacket -> burst_adapter_009:sink0_startofpacket
	wire   [72:0] width_adapter_034_src_data;                                                                                           // width_adapter_034:out_data -> burst_adapter_009:sink0_data
	wire          width_adapter_034_src_ready;                                                                                          // burst_adapter_009:sink0_ready -> width_adapter_034:out_ready
	wire   [23:0] width_adapter_034_src_channel;                                                                                        // width_adapter_034:out_channel -> burst_adapter_009:sink0_channel
	wire          id_router_023_src_endofpacket;                                                                                        // id_router_023:src_endofpacket -> width_adapter_035:in_endofpacket
	wire          id_router_023_src_valid;                                                                                              // id_router_023:src_valid -> width_adapter_035:in_valid
	wire          id_router_023_src_startofpacket;                                                                                      // id_router_023:src_startofpacket -> width_adapter_035:in_startofpacket
	wire   [72:0] id_router_023_src_data;                                                                                               // id_router_023:src_data -> width_adapter_035:in_data
	wire   [23:0] id_router_023_src_channel;                                                                                            // id_router_023:src_channel -> width_adapter_035:in_channel
	wire          id_router_023_src_ready;                                                                                              // width_adapter_035:in_ready -> id_router_023:src_ready
	wire          width_adapter_035_src_endofpacket;                                                                                    // width_adapter_035:out_endofpacket -> rsp_xbar_demux_023:sink_endofpacket
	wire          width_adapter_035_src_valid;                                                                                          // width_adapter_035:out_valid -> rsp_xbar_demux_023:sink_valid
	wire          width_adapter_035_src_startofpacket;                                                                                  // width_adapter_035:out_startofpacket -> rsp_xbar_demux_023:sink_startofpacket
	wire   [99:0] width_adapter_035_src_data;                                                                                           // width_adapter_035:out_data -> rsp_xbar_demux_023:sink_data
	wire          width_adapter_035_src_ready;                                                                                          // rsp_xbar_demux_023:sink_ready -> width_adapter_035:out_ready
	wire   [23:0] width_adapter_035_src_channel;                                                                                        // width_adapter_035:out_channel -> rsp_xbar_demux_023:sink_channel
	wire          irq_mapper_receiver0_irq;                                                                                             // timer_0:irq -> irq_mapper:receiver0_irq
	wire          irq_mapper_receiver1_irq;                                                                                             // jtag_uart_0:av_irq -> irq_mapper:receiver1_irq
	wire   [31:0] nios2_qsys_0_d_irq_irq;                                                                                               // irq_mapper:sender_irq -> nios2_qsys_0:d_irq

	niosII_system_nios2_qsys_0 nios2_qsys_0 (
		.clk                                   (clk_clk),                                                                     //                       clk.clk
		.reset_n                               (~rst_controller_reset_out_reset),                                             //                   reset_n.reset_n
		.d_address                             (nios2_qsys_0_data_master_address),                                            //               data_master.address
		.d_byteenable                          (nios2_qsys_0_data_master_byteenable),                                         //                          .byteenable
		.d_read                                (nios2_qsys_0_data_master_read),                                               //                          .read
		.d_readdata                            (nios2_qsys_0_data_master_readdata),                                           //                          .readdata
		.d_waitrequest                         (nios2_qsys_0_data_master_waitrequest),                                        //                          .waitrequest
		.d_write                               (nios2_qsys_0_data_master_write),                                              //                          .write
		.d_writedata                           (nios2_qsys_0_data_master_writedata),                                          //                          .writedata
		.jtag_debug_module_debugaccess_to_roms (nios2_qsys_0_data_master_debugaccess),                                        //                          .debugaccess
		.i_address                             (nios2_qsys_0_instruction_master_address),                                     //        instruction_master.address
		.i_read                                (nios2_qsys_0_instruction_master_read),                                        //                          .read
		.i_readdata                            (nios2_qsys_0_instruction_master_readdata),                                    //                          .readdata
		.i_waitrequest                         (nios2_qsys_0_instruction_master_waitrequest),                                 //                          .waitrequest
		.d_irq                                 (nios2_qsys_0_d_irq_irq),                                                      //                     d_irq.irq
		.jtag_debug_module_resetrequest        (nios2_qsys_0_jtag_debug_module_reset_reset),                                  //   jtag_debug_module_reset.reset
		.jtag_debug_module_address             (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_address),       //         jtag_debug_module.address
		.jtag_debug_module_begintransfer       (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_begintransfer), //                          .begintransfer
		.jtag_debug_module_byteenable          (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_byteenable),    //                          .byteenable
		.jtag_debug_module_debugaccess         (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_debugaccess),   //                          .debugaccess
		.jtag_debug_module_readdata            (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_readdata),      //                          .readdata
		.jtag_debug_module_select              (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_chipselect),    //                          .chipselect
		.jtag_debug_module_write               (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_write),         //                          .write
		.jtag_debug_module_writedata           (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_writedata),     //                          .writedata
		.no_ci_readra                          ()                                                                             // custom_instruction_master.readra
	);

	niosII_system_onchip_memory2_0 onchip_memory2_0 (
		.clk        (clk_clk),                                                       //   clk1.clk
		.address    (onchip_memory2_0_s1_translator_avalon_anti_slave_0_address),    //     s1.address
		.chipselect (onchip_memory2_0_s1_translator_avalon_anti_slave_0_chipselect), //       .chipselect
		.clken      (onchip_memory2_0_s1_translator_avalon_anti_slave_0_clken),      //       .clken
		.readdata   (onchip_memory2_0_s1_translator_avalon_anti_slave_0_readdata),   //       .readdata
		.write      (onchip_memory2_0_s1_translator_avalon_anti_slave_0_write),      //       .write
		.writedata  (onchip_memory2_0_s1_translator_avalon_anti_slave_0_writedata),  //       .writedata
		.byteenable (onchip_memory2_0_s1_translator_avalon_anti_slave_0_byteenable), //       .byteenable
		.reset      (rst_controller_reset_out_reset)                                 // reset1.reset
	);

	niosII_system_jtag_uart_0 jtag_uart_0 (
		.clk            (clk_clk),                                                                  //               clk.clk
		.rst_n          (~rst_controller_reset_out_reset),                                          //             reset.reset_n
		.av_chipselect  (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_address),     //                  .address
		.av_read_n      (~jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_read),       //                  .read_n
		.av_readdata    (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_readdata),    //                  .readdata
		.av_write_n     (~jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_write),      //                  .write_n
		.av_writedata   (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_writedata),   //                  .writedata
		.av_waitrequest (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver1_irq)                                                  //               irq.irq
	);

	niosII_system_sram_0 sram_0 (
		.clk           (clk_clk),                                                               //        clock_reset.clk
		.reset         (rst_controller_reset_out_reset),                                        //  clock_reset_reset.reset
		.SRAM_DQ       (sram_0_external_interface_DQ),                                          // external_interface.export
		.SRAM_ADDR     (sram_0_external_interface_ADDR),                                        //                   .export
		.SRAM_LB_N     (sram_0_external_interface_LB_N),                                        //                   .export
		.SRAM_UB_N     (sram_0_external_interface_UB_N),                                        //                   .export
		.SRAM_CE_N     (sram_0_external_interface_CE_N),                                        //                   .export
		.SRAM_OE_N     (sram_0_external_interface_OE_N),                                        //                   .export
		.SRAM_WE_N     (sram_0_external_interface_WE_N),                                        //                   .export
		.address       (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_address),       //  avalon_sram_slave.address
		.byteenable    (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_byteenable),    //                   .byteenable
		.read          (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_read),          //                   .read
		.write         (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_write),         //                   .write
		.writedata     (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_writedata),     //                   .writedata
		.readdata      (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdata),      //                   .readdata
		.readdatavalid (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdatavalid)  //                   .readdatavalid
	);

	niosII_system_sysid_qsys_0 sysid_qsys_0 (
		.clock    (clk_clk),                                                            //           clk.clk
		.reset_n  (~rst_controller_reset_out_reset),                                    //         reset.reset_n
		.readdata (sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_readdata), // control_slave.readdata
		.address  (sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_address)   //              .address
	);

	niosII_system_timer_0 timer_0 (
		.clk        (clk_clk),                                              //   clk.clk
		.reset_n    (~rst_controller_reset_out_reset),                      // reset.reset_n
		.address    (timer_0_s1_translator_avalon_anti_slave_0_address),    //    s1.address
		.writedata  (timer_0_s1_translator_avalon_anti_slave_0_writedata),  //      .writedata
		.readdata   (timer_0_s1_translator_avalon_anti_slave_0_readdata),   //      .readdata
		.chipselect (timer_0_s1_translator_avalon_anti_slave_0_chipselect), //      .chipselect
		.write_n    (~timer_0_s1_translator_avalon_anti_slave_0_write),     //      .write_n
		.irq        (irq_mapper_receiver0_irq)                              //   irq.irq
	);

	niosII_system_audio_and_video_config_0 audio_and_video_config_0 (
		.clk         (clk_clk),                                                                                    //            clock_reset.clk
		.reset       (rst_controller_reset_out_reset),                                                             //      clock_reset_reset.reset
		.address     (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_address),     // avalon_av_config_slave.address
		.byteenable  (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_byteenable),  //                       .byteenable
		.read        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_read),        //                       .read
		.write       (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_write),       //                       .write
		.writedata   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_writedata),   //                       .writedata
		.readdata    (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_readdata),    //                       .readdata
		.waitrequest (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_waitrequest), //                       .waitrequest
		.I2C_SDAT    (audio_and_video_config_0_external_interface_SDAT),                                           //     external_interface.export
		.I2C_SCLK    (audio_and_video_config_0_external_interface_SCLK)                                            //                       .export
	);

	niosII_system_up_clocks_0 up_clocks_0 (
		.CLOCK_50    (clk_clk),                         //       clk_in_primary.clk
		.reset       (rst_controller_reset_out_reset),  // clk_in_primary_reset.reset
		.sys_clk     (),                                //              sys_clk.clk
		.sys_reset_n (up_clocks_0_sys_clk_reset_reset), //        sys_clk_reset.reset_n
		.CLOCK_27    (clk_0_clk),                       //     clk_in_secondary.clk
		.AUD_CLK     (up_clocks_0_audio_clk_clk)        //            audio_clk.clk
	);

	niosII_system_audio_0 audio_0 (
		.clk                          (up_clocks_0_audio_clk_clk),                //                 clock_reset.clk
		.reset                        (rst_controller_001_reset_out_reset),       //           clock_reset_reset.reset
		.from_adc_left_channel_ready  (),                                         //  avalon_left_channel_source.ready
		.from_adc_left_channel_data   (),                                         //                            .data
		.from_adc_left_channel_valid  (),                                         //                            .valid
		.from_adc_right_channel_ready (),                                         // avalon_right_channel_source.ready
		.from_adc_right_channel_data  (),                                         //                            .data
		.from_adc_right_channel_valid (),                                         //                            .valid
		.to_dac_left_channel_data     (waveformgenerator_0_waveform_left_data),   //    avalon_left_channel_sink.data
		.to_dac_left_channel_valid    (waveformgenerator_0_waveform_left_valid),  //                            .valid
		.to_dac_left_channel_ready    (waveformgenerator_0_waveform_left_ready),  //                            .ready
		.to_dac_right_channel_data    (waveformgenerator_0_waveform_right_data),  //   avalon_right_channel_sink.data
		.to_dac_right_channel_valid   (waveformgenerator_0_waveform_right_valid), //                            .valid
		.to_dac_right_channel_ready   (waveformgenerator_0_waveform_right_ready), //                            .ready
		.AUD_ADCDAT                   (audio_0_external_interface_ADCDAT),        //          external_interface.export
		.AUD_ADCLRCK                  (audio_0_external_interface_ADCLRCK),       //                            .export
		.AUD_BCLK                     (audio_0_external_interface_BCLK),          //                            .export
		.AUD_DACDAT                   (audio_0_external_interface_DACDAT),        //                            .export
		.AUD_DACLRCK                  (audio_0_external_interface_DACLRCK)        //                            .export
	);

	WaveformGenerator waveformgenerator_0 (
		.reset_n                               (~rst_controller_reset_out_reset),                                                      //                   reset.reset_n
		.avs_writedata_phase_increments_voice0 (waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_writedata), // phase_increments_voice0.writedata
		.avs_write_n_phase_increments_voice0   (~waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice1 (waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_writedata), // phase_increments_voice1.writedata
		.avs_write_n_phase_increments_voice1   (~waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice2 (waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_writedata), // phase_increments_voice2.writedata
		.avs_write_n_phase_increments_voice2   (~waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_note_end_voice0         (waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_writedata),         //         note_end_voice0.writedata
		.avs_write_n_note_end_voice0           (~waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice1         (waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_writedata),         //         note_end_voice1.writedata
		.avs_write_n_note_end_voice1           (~waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice2         (waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_writedata),         //         note_end_voice2.writedata
		.avs_write_n_note_end_voice2           (~waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_wave_shapes             (waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_writedata),             //             wave_shapes.writedata
		.avs_write_n_wave_shapes               (~waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_write),                //                        .write_n
		.csi_clk50                             (clk_clk),                                                                              //              clock_sink.clk
		.csi_clk12                             (up_clocks_0_audio_clk_clk),                                                            //            clock_sink_1.clk
		.aso_data_waveform_left                (waveformgenerator_0_waveform_left_data),                                               //           waveform_left.data
		.aso_valid_waveform_left               (waveformgenerator_0_waveform_left_valid),                                              //                        .valid
		.aso_ready_waveform_left               (waveformgenerator_0_waveform_left_ready),                                              //                        .ready
		.aso_data_waveform_right               (waveformgenerator_0_waveform_right_data),                                              //          waveform_right.data
		.aso_valid_waveform_right              (waveformgenerator_0_waveform_right_valid),                                             //                        .valid
		.aso_ready_waveform_right              (waveformgenerator_0_waveform_right_ready),                                             //                        .ready
		.avs_writedata_phase_increments_voice3 (waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_writedata), // phase_increments_voice3.writedata
		.avs_write_n_phase_increments_voice3   (~waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice4 (waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_writedata), // phase_increments_voice4.writedata
		.avs_write_n_phase_increments_voice4   (~waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice5 (waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_writedata), // phase_increments_voice5.writedata
		.avs_write_n_phase_increments_voice5   (~waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice6 (waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_writedata), // phase_increments_voice6.writedata
		.avs_write_n_phase_increments_voice6   (~waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_phase_increments_voice7 (waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_writedata), // phase_increments_voice7.writedata
		.avs_write_n_phase_increments_voice7   (~waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_write),    //                        .write_n
		.avs_writedata_note_end_voice3         (waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_writedata),         //         note_end_voice3.writedata
		.avs_write_n_note_end_voice3           (~waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice4         (waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_writedata),         //         note_end_voice4.writedata
		.avs_write_n_note_end_voice4           (~waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice5         (waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_writedata),         //         note_end_voice5.writedata
		.avs_write_n_note_end_voice5           (~waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice6         (waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_writedata),         //         note_end_voice6.writedata
		.avs_write_n_note_end_voice6           (~waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_write),            //                        .write_n
		.avs_writedata_note_end_voice7         (waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_writedata),         //         note_end_voice7.writedata
		.avs_write_n_note_end_voice7           (~waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_write)             //                        .write_n
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (21),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (21),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_qsys_0_instruction_master_translator (
		.clk                   (clk_clk),                                                                            //                       clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                     //                     reset.reset
		.uav_address           (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount        (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read              (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write             (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest       (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid     (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable        (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata          (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock              (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess       (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address            (nios2_qsys_0_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest        (nios2_qsys_0_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read               (nios2_qsys_0_instruction_master_read),                                               //                          .read
		.av_readdata           (nios2_qsys_0_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount         (1'b1),                                                                               //               (terminated)
		.av_byteenable         (4'b1111),                                                                            //               (terminated)
		.av_beginbursttransfer (1'b0),                                                                               //               (terminated)
		.av_begintransfer      (1'b0),                                                                               //               (terminated)
		.av_chipselect         (1'b0),                                                                               //               (terminated)
		.av_readdatavalid      (),                                                                                   //               (terminated)
		.av_write              (1'b0),                                                                               //               (terminated)
		.av_writedata          (32'b00000000000000000000000000000000),                                               //               (terminated)
		.av_lock               (1'b0),                                                                               //               (terminated)
		.av_debugaccess        (1'b0),                                                                               //               (terminated)
		.uav_clken             (),                                                                                   //               (terminated)
		.av_clken              (1'b1)                                                                                //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (21),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (21),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_qsys_0_data_master_translator (
		.clk                   (clk_clk),                                                                     //                       clk.clk
		.reset                 (rst_controller_reset_out_reset),                                              //                     reset.reset
		.uav_address           (nios2_qsys_0_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount        (nios2_qsys_0_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read              (nios2_qsys_0_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write             (nios2_qsys_0_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest       (nios2_qsys_0_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid     (nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable        (nios2_qsys_0_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata          (nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock              (nios2_qsys_0_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess       (nios2_qsys_0_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address            (nios2_qsys_0_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest        (nios2_qsys_0_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable         (nios2_qsys_0_data_master_byteenable),                                         //                          .byteenable
		.av_read               (nios2_qsys_0_data_master_read),                                               //                          .read
		.av_readdata           (nios2_qsys_0_data_master_readdata),                                           //                          .readdata
		.av_write              (nios2_qsys_0_data_master_write),                                              //                          .write
		.av_writedata          (nios2_qsys_0_data_master_writedata),                                          //                          .writedata
		.av_debugaccess        (nios2_qsys_0_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount         (1'b1),                                                                        //               (terminated)
		.av_beginbursttransfer (1'b0),                                                                        //               (terminated)
		.av_begintransfer      (1'b0),                                                                        //               (terminated)
		.av_chipselect         (1'b0),                                                                        //               (terminated)
		.av_readdatavalid      (),                                                                            //               (terminated)
		.av_lock               (1'b0),                                                                        //               (terminated)
		.uav_clken             (),                                                                            //               (terminated)
		.av_clken              (1'b1)                                                                         //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_qsys_0_jtag_debug_module_translator (
		.clk                   (clk_clk),                                                                                   //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                            //                    reset.reset
		.uav_address           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_readdata           (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_begintransfer      (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_begintransfer),               //                         .begintransfer
		.av_byteenable         (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_byteenable),                  //                         .byteenable
		.av_chipselect         (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_chipselect),                  //                         .chipselect
		.av_debugaccess        (nios2_qsys_0_jtag_debug_module_translator_avalon_anti_slave_0_debugaccess),                 //                         .debugaccess
		.av_read               (),                                                                                          //              (terminated)
		.av_beginbursttransfer (),                                                                                          //              (terminated)
		.av_burstcount         (),                                                                                          //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                      //              (terminated)
		.av_waitrequest        (1'b0),                                                                                      //              (terminated)
		.av_writebyteenable    (),                                                                                          //              (terminated)
		.av_lock               (),                                                                                          //              (terminated)
		.av_clken              (),                                                                                          //              (terminated)
		.uav_clken             (1'b0),                                                                                      //              (terminated)
		.av_outputenable       ()                                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (18),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (16),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (2),
		.UAV_BYTEENABLE_W               (2),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (2),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (2),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sram_0_avalon_sram_slave_translator (
		.clk                   (clk_clk),                                                                             //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                      //                    reset.reset
		.uav_address           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_read               (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_read),                        //                         .read
		.av_readdata           (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_byteenable         (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_byteenable),                  //                         .byteenable
		.av_readdatavalid      (sram_0_avalon_sram_slave_translator_avalon_anti_slave_0_readdatavalid),               //                         .readdatavalid
		.av_begintransfer      (),                                                                                    //              (terminated)
		.av_beginbursttransfer (),                                                                                    //              (terminated)
		.av_burstcount         (),                                                                                    //              (terminated)
		.av_waitrequest        (1'b0),                                                                                //              (terminated)
		.av_writebyteenable    (),                                                                                    //              (terminated)
		.av_lock               (),                                                                                    //              (terminated)
		.av_chipselect         (),                                                                                    //              (terminated)
		.av_clken              (),                                                                                    //              (terminated)
		.uav_clken             (1'b0),                                                                                //              (terminated)
		.av_debugaccess        (),                                                                                    //              (terminated)
		.av_outputenable       ()                                                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) onchip_memory2_0_s1_translator (
		.clk                   (clk_clk),                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                 //                    reset.reset
		.uav_address           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (onchip_memory2_0_s1_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (onchip_memory2_0_s1_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_readdata           (onchip_memory2_0_s1_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (onchip_memory2_0_s1_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_byteenable         (onchip_memory2_0_s1_translator_avalon_anti_slave_0_byteenable),                  //                         .byteenable
		.av_chipselect         (onchip_memory2_0_s1_translator_avalon_anti_slave_0_chipselect),                  //                         .chipselect
		.av_clken              (onchip_memory2_0_s1_translator_avalon_anti_slave_0_clken),                       //                         .clken
		.av_read               (),                                                                               //              (terminated)
		.av_begintransfer      (),                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                               //              (terminated)
		.av_burstcount         (),                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                               //              (terminated)
		.av_lock               (),                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                           //              (terminated)
		.av_debugaccess        (),                                                                               //              (terminated)
		.av_outputenable       ()                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_0_s1_translator (
		.clk                   (clk_clk),                                                               //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                        //                    reset.reset
		.uav_address           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (timer_0_s1_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (timer_0_s1_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_readdata           (timer_0_s1_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (timer_0_s1_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_chipselect         (timer_0_s1_translator_avalon_anti_slave_0_chipselect),                  //                         .chipselect
		.av_read               (),                                                                      //              (terminated)
		.av_begintransfer      (),                                                                      //              (terminated)
		.av_beginbursttransfer (),                                                                      //              (terminated)
		.av_burstcount         (),                                                                      //              (terminated)
		.av_byteenable         (),                                                                      //              (terminated)
		.av_readdatavalid      (1'b0),                                                                  //              (terminated)
		.av_waitrequest        (1'b0),                                                                  //              (terminated)
		.av_writebyteenable    (),                                                                      //              (terminated)
		.av_lock               (),                                                                      //              (terminated)
		.av_clken              (),                                                                      //              (terminated)
		.uav_clken             (1'b0),                                                                  //              (terminated)
		.av_debugaccess        (),                                                                      //              (terminated)
		.av_outputenable       ()                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sysid_qsys_0_control_slave_translator (
		.clk                   (clk_clk),                                                                               //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                        //                    reset.reset
		.uav_address           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_readdata           (sysid_qsys_0_control_slave_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_write              (),                                                                                      //              (terminated)
		.av_read               (),                                                                                      //              (terminated)
		.av_writedata          (),                                                                                      //              (terminated)
		.av_begintransfer      (),                                                                                      //              (terminated)
		.av_beginbursttransfer (),                                                                                      //              (terminated)
		.av_burstcount         (),                                                                                      //              (terminated)
		.av_byteenable         (),                                                                                      //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                  //              (terminated)
		.av_waitrequest        (1'b0),                                                                                  //              (terminated)
		.av_writebyteenable    (),                                                                                      //              (terminated)
		.av_lock               (),                                                                                      //              (terminated)
		.av_chipselect         (),                                                                                      //              (terminated)
		.av_clken              (),                                                                                      //              (terminated)
		.uav_clken             (1'b0),                                                                                  //              (terminated)
		.av_debugaccess        (),                                                                                      //              (terminated)
		.av_outputenable       ()                                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_0_avalon_jtag_slave_translator (
		.clk                   (clk_clk),                                                                                  //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                           //                    reset.reset
		.uav_address           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_read               (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_read),                        //                         .read
		.av_readdata           (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_waitrequest        (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_waitrequest),                 //                         .waitrequest
		.av_chipselect         (jtag_uart_0_avalon_jtag_slave_translator_avalon_anti_slave_0_chipselect),                  //                         .chipselect
		.av_begintransfer      (),                                                                                         //              (terminated)
		.av_beginbursttransfer (),                                                                                         //              (terminated)
		.av_burstcount         (),                                                                                         //              (terminated)
		.av_byteenable         (),                                                                                         //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                     //              (terminated)
		.av_writebyteenable    (),                                                                                         //              (terminated)
		.av_lock               (),                                                                                         //              (terminated)
		.av_clken              (),                                                                                         //              (terminated)
		.uav_clken             (1'b0),                                                                                     //              (terminated)
		.av_debugaccess        (),                                                                                         //              (terminated)
		.av_outputenable       ()                                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) audio_and_video_config_0_avalon_av_config_slave_translator (
		.clk                   (clk_clk),                                                                                                    //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                             //                    reset.reset
		.uav_address           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address            (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_address),                     //      avalon_anti_slave_0.address
		.av_write              (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_write),                       //                         .write
		.av_read               (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_read),                        //                         .read
		.av_readdata           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_readdata),                    //                         .readdata
		.av_writedata          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_byteenable         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_byteenable),                  //                         .byteenable
		.av_waitrequest        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_anti_slave_0_waitrequest),                 //                         .waitrequest
		.av_begintransfer      (),                                                                                                           //              (terminated)
		.av_beginbursttransfer (),                                                                                                           //              (terminated)
		.av_burstcount         (),                                                                                                           //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                       //              (terminated)
		.av_writebyteenable    (),                                                                                                           //              (terminated)
		.av_lock               (),                                                                                                           //              (terminated)
		.av_chipselect         (),                                                                                                           //              (terminated)
		.av_clken              (),                                                                                                           //              (terminated)
		.uav_clken             (1'b0),                                                                                                       //              (terminated)
		.av_debugaccess        (),                                                                                                           //              (terminated)
		.av_outputenable       ()                                                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice0_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice0_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice2_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice2_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice1_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice1_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice0_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice0_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice1_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice1_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_wave_shapes_translator (
		.clk                   (clk_clk),                                                                                    //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                             //                    reset.reset
		.uav_address           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_wave_shapes_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                           //              (terminated)
		.av_read               (),                                                                                           //              (terminated)
		.av_readdata           (8'b10101101),                                                                                //              (terminated)
		.av_begintransfer      (),                                                                                           //              (terminated)
		.av_beginbursttransfer (),                                                                                           //              (terminated)
		.av_burstcount         (),                                                                                           //              (terminated)
		.av_byteenable         (),                                                                                           //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                       //              (terminated)
		.av_waitrequest        (1'b0),                                                                                       //              (terminated)
		.av_writebyteenable    (),                                                                                           //              (terminated)
		.av_lock               (),                                                                                           //              (terminated)
		.av_chipselect         (),                                                                                           //              (terminated)
		.av_clken              (),                                                                                           //              (terminated)
		.uav_clken             (1'b0),                                                                                       //              (terminated)
		.av_debugaccess        (),                                                                                           //              (terminated)
		.av_outputenable       ()                                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice2_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice2_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice7_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice7_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice4_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice4_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice3_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice3_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice5_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice5_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice6_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice6_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (64),
		.UAV_DATA_W                     (64),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (8),
		.UAV_BYTEENABLE_W               (8),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (4),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (8),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_phase_increments_voice7_translator (
		.clk                   (clk_clk),                                                                                                //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                         //                    reset.reset
		.uav_address           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_phase_increments_voice7_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                                       //              (terminated)
		.av_read               (),                                                                                                       //              (terminated)
		.av_readdata           (64'b0000000000000000000000000000000011011110101011011101111010101101),                                   //              (terminated)
		.av_begintransfer      (),                                                                                                       //              (terminated)
		.av_beginbursttransfer (),                                                                                                       //              (terminated)
		.av_burstcount         (),                                                                                                       //              (terminated)
		.av_byteenable         (),                                                                                                       //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                                   //              (terminated)
		.av_waitrequest        (1'b0),                                                                                                   //              (terminated)
		.av_writebyteenable    (),                                                                                                       //              (terminated)
		.av_lock               (),                                                                                                       //              (terminated)
		.av_chipselect         (),                                                                                                       //              (terminated)
		.av_clken              (),                                                                                                       //              (terminated)
		.uav_clken             (1'b0),                                                                                                   //              (terminated)
		.av_debugaccess        (),                                                                                                       //              (terminated)
		.av_outputenable       ()                                                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice3_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice3_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice4_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice4_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice5_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice5_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (21),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) waveformgenerator_0_note_end_voice6_translator (
		.clk                   (clk_clk),                                                                                        //                      clk.clk
		.reset                 (rst_controller_reset_out_reset),                                                                 //                    reset.reset
		.uav_address           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount        (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read              (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write             (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest       (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid     (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable        (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock              (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess       (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write              (waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_write),                       //      avalon_anti_slave_0.write
		.av_writedata          (waveformgenerator_0_note_end_voice6_translator_avalon_anti_slave_0_writedata),                   //                         .writedata
		.av_address            (),                                                                                               //              (terminated)
		.av_read               (),                                                                                               //              (terminated)
		.av_readdata           (8'b10101101),                                                                                    //              (terminated)
		.av_begintransfer      (),                                                                                               //              (terminated)
		.av_beginbursttransfer (),                                                                                               //              (terminated)
		.av_burstcount         (),                                                                                               //              (terminated)
		.av_byteenable         (),                                                                                               //              (terminated)
		.av_readdatavalid      (1'b0),                                                                                           //              (terminated)
		.av_waitrequest        (1'b0),                                                                                           //              (terminated)
		.av_writebyteenable    (),                                                                                               //              (terminated)
		.av_lock               (),                                                                                               //              (terminated)
		.av_chipselect         (),                                                                                               //              (terminated)
		.av_clken              (),                                                                                               //              (terminated)
		.uav_clken             (1'b0),                                                                                           //              (terminated)
		.av_debugaccess        (),                                                                                               //              (terminated)
		.av_outputenable       ()                                                                                                //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_BEGIN_BURST           (78),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.PKT_BURST_TYPE_H          (75),
		.PKT_BURST_TYPE_L          (74),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_TRANS_EXCLUSIVE       (62),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_THREAD_ID_H           (90),
		.PKT_THREAD_ID_L           (90),
		.PKT_CACHE_H               (97),
		.PKT_CACHE_L               (94),
		.PKT_DATA_SIDEBAND_H       (77),
		.PKT_DATA_SIDEBAND_L       (77),
		.PKT_QOS_H                 (79),
		.PKT_QOS_L                 (79),
		.PKT_ADDR_SIDEBAND_H       (76),
		.PKT_ADDR_SIDEBAND_L       (76),
		.ST_DATA_W                 (100),
		.ST_CHANNEL_W              (24),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (0),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (4'b0000)
	) nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent (
		.clk              (clk_clk),                                                                                     //       clk.clk
		.reset            (rst_controller_reset_out_reset),                                                              // clk_reset.reset
		.av_address       (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read          (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata     (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata      (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest   (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable    (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount    (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess   (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock          (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data          (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket   (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid         (rsp_xbar_mux_src_valid),                                                                      //        rp.valid
		.rp_data          (rsp_xbar_mux_src_data),                                                                       //          .data
		.rp_channel       (rsp_xbar_mux_src_channel),                                                                    //          .channel
		.rp_startofpacket (rsp_xbar_mux_src_startofpacket),                                                              //          .startofpacket
		.rp_endofpacket   (rsp_xbar_mux_src_endofpacket),                                                                //          .endofpacket
		.rp_ready         (rsp_xbar_mux_src_ready)                                                                       //          .ready
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_BEGIN_BURST           (78),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.PKT_BURST_TYPE_H          (75),
		.PKT_BURST_TYPE_L          (74),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_TRANS_EXCLUSIVE       (62),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_THREAD_ID_H           (90),
		.PKT_THREAD_ID_L           (90),
		.PKT_CACHE_H               (97),
		.PKT_CACHE_L               (94),
		.PKT_DATA_SIDEBAND_H       (77),
		.PKT_DATA_SIDEBAND_L       (77),
		.PKT_QOS_H                 (79),
		.PKT_QOS_L                 (79),
		.PKT_ADDR_SIDEBAND_H       (76),
		.PKT_ADDR_SIDEBAND_L       (76),
		.ST_DATA_W                 (100),
		.ST_CHANNEL_W              (24),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (1),
		.BURSTWRAP_VALUE           (15),
		.CACHE_VALUE               (4'b0000)
	) nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent (
		.clk              (clk_clk),                                                                              //       clk.clk
		.reset            (rst_controller_reset_out_reset),                                                       // clk_reset.reset
		.av_address       (nios2_qsys_0_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read          (nios2_qsys_0_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata     (nios2_qsys_0_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata      (nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest   (nios2_qsys_0_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid (nios2_qsys_0_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable    (nios2_qsys_0_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount    (nios2_qsys_0_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess   (nios2_qsys_0_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock          (nios2_qsys_0_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data          (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket   (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid         (rsp_xbar_mux_001_src_valid),                                                           //        rp.valid
		.rp_data          (rsp_xbar_mux_001_src_data),                                                            //          .data
		.rp_channel       (rsp_xbar_mux_001_src_channel),                                                         //          .channel
		.rp_startofpacket (rsp_xbar_mux_001_src_startofpacket),                                                   //          .startofpacket
		.rp_endofpacket   (rsp_xbar_mux_001_src_endofpacket),                                                     //          .endofpacket
		.rp_ready         (rsp_xbar_mux_001_src_ready)                                                            //          .ready
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                             //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                      //       clk_reset.reset
		.m0_address              (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                            //                .channel
		.rf_sink_ready           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                             //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                      // clk_reset.reset
		.in_data           (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                                // (terminated)
		.csr_readdata      (),                                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                // (terminated)
		.almost_full_data  (),                                                                                                    // (terminated)
		.almost_empty_data (),                                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                                // (terminated)
		.out_empty         (),                                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                                // (terminated)
		.out_error         (),                                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                                // (terminated)
		.out_channel       ()                                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (15),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (60),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_ADDR_H                (38),
		.PKT_ADDR_L                (18),
		.PKT_TRANS_COMPRESSED_READ (39),
		.PKT_TRANS_POSTED          (40),
		.PKT_TRANS_WRITE           (41),
		.PKT_TRANS_READ            (42),
		.PKT_TRANS_LOCK            (43),
		.PKT_SRC_ID_H              (66),
		.PKT_SRC_ID_L              (62),
		.PKT_DEST_ID_H             (71),
		.PKT_DEST_ID_L             (67),
		.PKT_BURSTWRAP_H           (52),
		.PKT_BURSTWRAP_L           (49),
		.PKT_BYTE_CNT_H            (48),
		.PKT_BYTE_CNT_L            (45),
		.PKT_PROTECTION_H          (75),
		.PKT_PROTECTION_L          (73),
		.PKT_RESPONSE_STATUS_H     (81),
		.PKT_RESPONSE_STATUS_L     (80),
		.PKT_BURST_SIZE_H          (55),
		.PKT_BURST_SIZE_L          (53),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (82),
		.AVS_BURSTCOUNT_W          (2),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                       //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                //       clk_reset.reset
		.m0_address              (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_source0_ready),                                                                   //              cp.ready
		.cp_valid                (burst_adapter_source0_valid),                                                                   //                .valid
		.cp_data                 (burst_adapter_source0_data),                                                                    //                .data
		.cp_startofpacket        (burst_adapter_source0_startofpacket),                                                           //                .startofpacket
		.cp_endofpacket          (burst_adapter_source0_endofpacket),                                                             //                .endofpacket
		.cp_channel              (burst_adapter_source0_channel),                                                                 //                .channel
		.rf_sink_ready           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (83),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                       //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                // clk_reset.reset
		.in_data           (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                         // (terminated)
		.csr_read          (1'b0),                                                                                          // (terminated)
		.csr_write         (1'b0),                                                                                          // (terminated)
		.csr_readdata      (),                                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                          // (terminated)
		.almost_full_data  (),                                                                                              // (terminated)
		.almost_empty_data (),                                                                                              // (terminated)
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.in_error          (1'b0),                                                                                          // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_channel        (1'b0),                                                                                          // (terminated)
		.out_channel       ()                                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                           //       clk_reset.reset
		.m0_address              (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                             //                .channel
		.rf_sink_ready           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                           // clk_reset.reset
		.in_data           (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) timer_0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                         //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                  //       clk_reset.reset
		.m0_address              (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_demux_001_src3_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_demux_001_src3_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_demux_001_src3_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_demux_001_src3_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_demux_001_src3_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_demux_001_src3_channel),                                                 //                .channel
		.rf_sink_ready           (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                         //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                  // clk_reset.reset
		.in_data           (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                         //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                  //       clk_reset.reset
		.m0_address              (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_demux_001_src4_ready),                                                                   //              cp.ready
		.cp_valid                (cmd_xbar_demux_001_src4_valid),                                                                   //                .valid
		.cp_data                 (cmd_xbar_demux_001_src4_data),                                                                    //                .data
		.cp_startofpacket        (cmd_xbar_demux_001_src4_startofpacket),                                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_demux_001_src4_endofpacket),                                                             //                .endofpacket
		.cp_channel              (cmd_xbar_demux_001_src4_channel),                                                                 //                .channel
		.rf_sink_ready           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                         //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                  // clk_reset.reset
		.in_data           (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                           // (terminated)
		.csr_read          (1'b0),                                                                                            // (terminated)
		.csr_write         (1'b0),                                                                                            // (terminated)
		.csr_readdata      (),                                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                            // (terminated)
		.almost_full_data  (),                                                                                                // (terminated)
		.almost_empty_data (),                                                                                                // (terminated)
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.in_error          (1'b0),                                                                                            // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_channel        (1'b0),                                                                                            // (terminated)
		.out_channel       ()                                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                            //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                     //       clk_reset.reset
		.m0_address              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_demux_001_src5_ready),                                                                      //              cp.ready
		.cp_valid                (cmd_xbar_demux_001_src5_valid),                                                                      //                .valid
		.cp_data                 (cmd_xbar_demux_001_src5_data),                                                                       //                .data
		.cp_startofpacket        (cmd_xbar_demux_001_src5_startofpacket),                                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_demux_001_src5_endofpacket),                                                                //                .endofpacket
		.cp_channel              (cmd_xbar_demux_001_src5_channel),                                                                    //                .channel
		.rf_sink_ready           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                            //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                     // clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                              // (terminated)
		.csr_read          (1'b0),                                                                                               // (terminated)
		.csr_write         (1'b0),                                                                                               // (terminated)
		.csr_readdata      (),                                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                               // (terminated)
		.almost_full_data  (),                                                                                                   // (terminated)
		.almost_empty_data (),                                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                                               // (terminated)
		.out_empty         (),                                                                                                   // (terminated)
		.in_error          (1'b0),                                                                                               // (terminated)
		.out_error         (),                                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                                               // (terminated)
		.out_channel       ()                                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (78),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (56),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (57),
		.PKT_TRANS_POSTED          (58),
		.PKT_TRANS_WRITE           (59),
		.PKT_TRANS_READ            (60),
		.PKT_TRANS_LOCK            (61),
		.PKT_SRC_ID_H              (84),
		.PKT_SRC_ID_L              (80),
		.PKT_DEST_ID_H             (89),
		.PKT_DEST_ID_L             (85),
		.PKT_BURSTWRAP_H           (70),
		.PKT_BURSTWRAP_L           (67),
		.PKT_BYTE_CNT_H            (66),
		.PKT_BYTE_CNT_L            (63),
		.PKT_PROTECTION_H          (93),
		.PKT_PROTECTION_L          (91),
		.PKT_RESPONSE_STATUS_H     (99),
		.PKT_RESPONSE_STATUS_L     (98),
		.PKT_BURST_SIZE_H          (73),
		.PKT_BURST_SIZE_L          (71),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (100),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                              //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                       //       clk_reset.reset
		.m0_address              (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_demux_001_src6_ready),                                                                                        //              cp.ready
		.cp_valid                (cmd_xbar_demux_001_src6_valid),                                                                                        //                .valid
		.cp_data                 (cmd_xbar_demux_001_src6_data),                                                                                         //                .data
		.cp_startofpacket        (cmd_xbar_demux_001_src6_startofpacket),                                                                                //                .startofpacket
		.cp_endofpacket          (cmd_xbar_demux_001_src6_endofpacket),                                                                                  //                .endofpacket
		.cp_channel              (cmd_xbar_demux_001_src6_channel),                                                                                      //                .channel
		.rf_sink_ready           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (101),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                              //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                       // clk_reset.reset
		.in_data           (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                                                 // (terminated)
		.csr_readdata      (),                                                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                                 // (terminated)
		.almost_full_data  (),                                                                                                                     // (terminated)
		.almost_empty_data (),                                                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                                                 // (terminated)
		.out_empty         (),                                                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                                                 // (terminated)
		.out_error         (),                                                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                                                 // (terminated)
		.out_channel       ()                                                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_002_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_002_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_002_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_002_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_002_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_002_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_004_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_004_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_004_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_004_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_004_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_004_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_006_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_006_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_006_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_006_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_006_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_006_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_001_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_001_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_001_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_001_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_001_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_001_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_002_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_002_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_002_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_002_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_002_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_002_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                              //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                       //       clk_reset.reset
		.m0_address              (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_003_source0_ready),                                                                      //              cp.ready
		.cp_valid                (burst_adapter_003_source0_valid),                                                                      //                .valid
		.cp_data                 (burst_adapter_003_source0_data),                                                                       //                .data
		.cp_startofpacket        (burst_adapter_003_source0_startofpacket),                                                              //                .startofpacket
		.cp_endofpacket          (burst_adapter_003_source0_endofpacket),                                                                //                .endofpacket
		.cp_channel              (burst_adapter_003_source0_channel),                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                              //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                       // clk_reset.reset
		.in_data           (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                                 // (terminated)
		.csr_readdata      (),                                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                 // (terminated)
		.almost_full_data  (),                                                                                                     // (terminated)
		.almost_empty_data (),                                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                                 // (terminated)
		.out_empty         (),                                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                                 // (terminated)
		.out_error         (),                                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                                 // (terminated)
		.out_channel       ()                                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_004_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_004_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_004_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_004_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_004_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_004_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_005_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_005_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_005_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_005_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_005_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_005_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_018_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_018_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_018_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_018_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_018_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_018_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_020_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_020_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_020_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_020_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_020_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_020_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_022_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_022_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_022_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_022_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_022_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_022_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_024_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_024_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_024_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_024_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_024_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_024_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (114),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_ADDR_H                (92),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (93),
		.PKT_TRANS_POSTED          (94),
		.PKT_TRANS_WRITE           (95),
		.PKT_TRANS_READ            (96),
		.PKT_TRANS_LOCK            (97),
		.PKT_SRC_ID_H              (120),
		.PKT_SRC_ID_L              (116),
		.PKT_DEST_ID_H             (125),
		.PKT_DEST_ID_L             (121),
		.PKT_BURSTWRAP_H           (106),
		.PKT_BURSTWRAP_L           (103),
		.PKT_BYTE_CNT_H            (102),
		.PKT_BYTE_CNT_L            (99),
		.PKT_PROTECTION_H          (129),
		.PKT_PROTECTION_L          (127),
		.PKT_RESPONSE_STATUS_H     (135),
		.PKT_RESPONSE_STATUS_L     (134),
		.PKT_BURST_SIZE_H          (109),
		.PKT_BURST_SIZE_L          (107),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (136),
		.AVS_BURSTCOUNT_W          (4),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                          //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                                   //       clk_reset.reset
		.m0_address              (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (width_adapter_026_src_ready),                                                                                      //              cp.ready
		.cp_valid                (width_adapter_026_src_valid),                                                                                      //                .valid
		.cp_data                 (width_adapter_026_src_data),                                                                                       //                .data
		.cp_startofpacket        (width_adapter_026_src_startofpacket),                                                                              //                .startofpacket
		.cp_endofpacket          (width_adapter_026_src_endofpacket),                                                                                //                .endofpacket
		.cp_channel              (width_adapter_026_src_channel),                                                                                    //                .channel
		.rf_sink_ready           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (137),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                          //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                                   // clk_reset.reset
		.in_data           (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                             // (terminated)
		.almost_full_data  (),                                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                                             // (terminated)
		.out_empty         (),                                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                                             // (terminated)
		.out_error         (),                                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                                             // (terminated)
		.out_channel       ()                                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_006_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_006_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_006_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_006_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_006_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_006_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_007_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_007_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_007_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_007_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_007_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_007_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_008_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_008_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_008_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_008_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_008_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_008_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (51),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_POSTED          (31),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.PKT_TRANS_LOCK            (34),
		.PKT_SRC_ID_H              (57),
		.PKT_SRC_ID_L              (53),
		.PKT_DEST_ID_H             (62),
		.PKT_DEST_ID_L             (58),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_PROTECTION_H          (66),
		.PKT_PROTECTION_L          (64),
		.PKT_RESPONSE_STATUS_H     (72),
		.PKT_RESPONSE_STATUS_L     (71),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.ST_CHANNEL_W              (24),
		.ST_DATA_W                 (73),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1)
	) waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_clk),                                                                                                  //             clk.clk
		.reset                   (rst_controller_reset_out_reset),                                                                           //       clk_reset.reset
		.m0_address              (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_009_source0_ready),                                                                          //              cp.ready
		.cp_valid                (burst_adapter_009_source0_valid),                                                                          //                .valid
		.cp_data                 (burst_adapter_009_source0_data),                                                                           //                .data
		.cp_startofpacket        (burst_adapter_009_source0_startofpacket),                                                                  //                .startofpacket
		.cp_endofpacket          (burst_adapter_009_source0_endofpacket),                                                                    //                .endofpacket
		.cp_channel              (burst_adapter_009_source0_channel),                                                                        //                .channel
		.rf_sink_ready           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data)         //                .data
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (74),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_clk),                                                                                                  //       clk.clk
		.reset             (rst_controller_reset_out_reset),                                                                           // clk_reset.reset
		.in_data           (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                                     // (terminated)
		.csr_readdata      (),                                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                     // (terminated)
		.almost_full_data  (),                                                                                                         // (terminated)
		.almost_empty_data (),                                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                                     // (terminated)
		.out_empty         (),                                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                                     // (terminated)
		.out_error         (),                                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                                     // (terminated)
		.out_channel       ()                                                                                                          // (terminated)
	);

	niosII_system_addr_router addr_router (
		.sink_ready         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_qsys_0_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                     //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                              // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                       //       src.ready
		.src_valid          (addr_router_src_valid),                                                                       //          .valid
		.src_data           (addr_router_src_data),                                                                        //          .data
		.src_channel        (addr_router_src_channel),                                                                     //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                               //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                                  //          .endofpacket
	);

	niosII_system_addr_router_001 addr_router_001 (
		.sink_ready         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_qsys_0_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                              //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                       // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                            //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                            //          .valid
		.src_data           (addr_router_001_src_data),                                                             //          .data
		.src_channel        (addr_router_001_src_channel),                                                          //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                                    //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                                       //          .endofpacket
	);

	niosII_system_id_router id_router (
		.sink_ready         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_qsys_0_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                   //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                            // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                                       //       src.ready
		.src_valid          (id_router_src_valid),                                                                       //          .valid
		.src_data           (id_router_src_data),                                                                        //          .data
		.src_channel        (id_router_src_channel),                                                                     //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                               //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                                  //          .endofpacket
	);

	niosII_system_id_router_001 id_router_001 (
		.sink_ready         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sram_0_avalon_sram_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                             //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                      // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                             //       src.ready
		.src_valid          (id_router_001_src_valid),                                                             //          .valid
		.src_data           (id_router_001_src_data),                                                              //          .data
		.src_channel        (id_router_001_src_channel),                                                           //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                                     //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                        //          .endofpacket
	);

	niosII_system_id_router id_router_002 (
		.sink_ready         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (onchip_memory2_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                 // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                        //       src.ready
		.src_valid          (id_router_002_src_valid),                                                        //          .valid
		.src_data           (id_router_002_src_data),                                                         //          .data
		.src_channel        (id_router_002_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                   //          .endofpacket
	);

	niosII_system_id_router_003 id_router_003 (
		.sink_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                        // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                               //       src.ready
		.src_valid          (id_router_003_src_valid),                                               //          .valid
		.src_data           (id_router_003_src_data),                                                //          .data
		.src_channel        (id_router_003_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                          //          .endofpacket
	);

	niosII_system_id_router_003 id_router_004 (
		.sink_ready         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sysid_qsys_0_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                        // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                               //       src.ready
		.src_valid          (id_router_004_src_valid),                                                               //          .valid
		.src_data           (id_router_004_src_data),                                                                //          .data
		.src_channel        (id_router_004_src_channel),                                                             //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                                          //          .endofpacket
	);

	niosII_system_id_router_003 id_router_005 (
		.sink_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                  //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                           // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                                                  //       src.ready
		.src_valid          (id_router_005_src_valid),                                                                  //          .valid
		.src_data           (id_router_005_src_data),                                                                   //          .data
		.src_channel        (id_router_005_src_channel),                                                                //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                                             //          .endofpacket
	);

	niosII_system_id_router_003 id_router_006 (
		.sink_ready         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (audio_and_video_config_0_avalon_av_config_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                    //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                             // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                                                                    //       src.ready
		.src_valid          (id_router_006_src_valid),                                                                                    //          .valid
		.src_data           (id_router_006_src_data),                                                                                     //          .data
		.src_channel        (id_router_006_src_channel),                                                                                  //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                                                            //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                                                               //          .endofpacket
	);

	niosII_system_id_router_007 id_router_007 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_007_src_valid),                                                                                //          .valid
		.src_data           (id_router_007_src_data),                                                                                 //          .data
		.src_channel        (id_router_007_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_008 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_008_src_valid),                                                                                //          .valid
		.src_data           (id_router_008_src_data),                                                                                 //          .data
		.src_channel        (id_router_008_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_009 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_009_src_valid),                                                                                //          .valid
		.src_data           (id_router_009_src_data),                                                                                 //          .data
		.src_channel        (id_router_009_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_010 id_router_010 (
		.sink_ready         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_010_src_valid),                                                                        //          .valid
		.src_data           (id_router_010_src_data),                                                                         //          .data
		.src_channel        (id_router_010_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_011 (
		.sink_ready         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_011_src_valid),                                                                        //          .valid
		.src_data           (id_router_011_src_data),                                                                         //          .data
		.src_channel        (id_router_011_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_012 (
		.sink_ready         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_wave_shapes_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                    //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                             // clk_reset.reset
		.src_ready          (id_router_012_src_ready),                                                                    //       src.ready
		.src_valid          (id_router_012_src_valid),                                                                    //          .valid
		.src_data           (id_router_012_src_data),                                                                     //          .data
		.src_channel        (id_router_012_src_channel),                                                                  //          .channel
		.src_startofpacket  (id_router_012_src_startofpacket),                                                            //          .startofpacket
		.src_endofpacket    (id_router_012_src_endofpacket)                                                               //          .endofpacket
	);

	niosII_system_id_router_010 id_router_013 (
		.sink_ready         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice2_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_013_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_013_src_valid),                                                                        //          .valid
		.src_data           (id_router_013_src_data),                                                                         //          .data
		.src_channel        (id_router_013_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_013_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_013_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_014 (
		.sink_ready         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_014_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_014_src_valid),                                                                        //          .valid
		.src_data           (id_router_014_src_data),                                                                         //          .data
		.src_channel        (id_router_014_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_014_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_014_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_007 id_router_015 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_015_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_015_src_valid),                                                                                //          .valid
		.src_data           (id_router_015_src_data),                                                                                 //          .data
		.src_channel        (id_router_015_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_015_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_015_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_016 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_016_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_016_src_valid),                                                                                //          .valid
		.src_data           (id_router_016_src_data),                                                                                 //          .data
		.src_channel        (id_router_016_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_016_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_016_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_017 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_017_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_017_src_valid),                                                                                //          .valid
		.src_data           (id_router_017_src_data),                                                                                 //          .data
		.src_channel        (id_router_017_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_017_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_017_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_018 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_018_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_018_src_valid),                                                                                //          .valid
		.src_data           (id_router_018_src_data),                                                                                 //          .data
		.src_channel        (id_router_018_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_018_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_018_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_007 id_router_019 (
		.sink_ready         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_phase_increments_voice7_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                                //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_019_src_ready),                                                                                //       src.ready
		.src_valid          (id_router_019_src_valid),                                                                                //          .valid
		.src_data           (id_router_019_src_data),                                                                                 //          .data
		.src_channel        (id_router_019_src_channel),                                                                              //          .channel
		.src_startofpacket  (id_router_019_src_startofpacket),                                                                        //          .startofpacket
		.src_endofpacket    (id_router_019_src_endofpacket)                                                                           //          .endofpacket
	);

	niosII_system_id_router_010 id_router_020 (
		.sink_ready         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice3_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_020_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_020_src_valid),                                                                        //          .valid
		.src_data           (id_router_020_src_data),                                                                         //          .data
		.src_channel        (id_router_020_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_020_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_020_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_021 (
		.sink_ready         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice4_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_021_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_021_src_valid),                                                                        //          .valid
		.src_data           (id_router_021_src_data),                                                                         //          .data
		.src_channel        (id_router_021_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_021_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_021_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_022 (
		.sink_ready         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice5_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_022_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_022_src_valid),                                                                        //          .valid
		.src_data           (id_router_022_src_data),                                                                         //          .data
		.src_channel        (id_router_022_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_022_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_022_src_endofpacket)                                                                   //          .endofpacket
	);

	niosII_system_id_router_010 id_router_023 (
		.sink_ready         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (waveformgenerator_0_note_end_voice6_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_clk),                                                                                        //       clk.clk
		.reset              (rst_controller_reset_out_reset),                                                                 // clk_reset.reset
		.src_ready          (id_router_023_src_ready),                                                                        //       src.ready
		.src_valid          (id_router_023_src_valid),                                                                        //          .valid
		.src_data           (id_router_023_src_data),                                                                         //          .data
		.src_channel        (id_router_023_src_channel),                                                                      //          .channel
		.src_startofpacket  (id_router_023_src_startofpacket),                                                                //          .startofpacket
		.src_endofpacket    (id_router_023_src_endofpacket)                                                                   //          .endofpacket
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (38),
		.PKT_ADDR_L                (18),
		.PKT_BEGIN_BURST           (60),
		.PKT_BYTE_CNT_H            (48),
		.PKT_BYTE_CNT_L            (45),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_BURST_SIZE_H          (55),
		.PKT_BURST_SIZE_L          (53),
		.PKT_BURST_TYPE_H          (57),
		.PKT_BURST_TYPE_L          (56),
		.PKT_BURSTWRAP_H           (52),
		.PKT_BURSTWRAP_L           (49),
		.PKT_TRANS_COMPRESSED_READ (39),
		.PKT_TRANS_WRITE           (41),
		.PKT_TRANS_READ            (42),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (82),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (46),
		.OUT_BURSTWRAP_H           (52),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (3),
		.BURSTWRAP_CONST_VALUE     (3)
	) burst_adapter (
		.clk                   (clk_clk),                             //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),      // cr0_reset.reset
		.sink0_valid           (width_adapter_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_src_data),              //          .data
		.sink0_channel         (width_adapter_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_src_ready),             //          .ready
		.source0_valid         (burst_adapter_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_source0_data),          //          .data
		.source0_channel       (burst_adapter_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_001 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_008_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_008_src_data),              //          .data
		.sink0_channel         (width_adapter_008_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_008_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_008_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_008_src_ready),             //          .ready
		.source0_valid         (burst_adapter_001_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_001_source0_data),          //          .data
		.source0_channel       (burst_adapter_001_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_001_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_001_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_001_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_002 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_010_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_010_src_data),              //          .data
		.sink0_channel         (width_adapter_010_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_010_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_010_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_010_src_ready),             //          .ready
		.source0_valid         (burst_adapter_002_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_002_source0_data),          //          .data
		.source0_channel       (burst_adapter_002_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_002_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_002_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_002_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_003 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_012_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_012_src_data),              //          .data
		.sink0_channel         (width_adapter_012_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_012_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_012_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_012_src_ready),             //          .ready
		.source0_valid         (burst_adapter_003_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_003_source0_data),          //          .data
		.source0_channel       (burst_adapter_003_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_003_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_003_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_003_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_004 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_014_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_014_src_data),              //          .data
		.sink0_channel         (width_adapter_014_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_014_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_014_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_014_src_ready),             //          .ready
		.source0_valid         (burst_adapter_004_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_004_source0_data),          //          .data
		.source0_channel       (burst_adapter_004_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_004_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_004_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_004_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_005 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_016_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_016_src_data),              //          .data
		.sink0_channel         (width_adapter_016_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_016_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_016_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_016_src_ready),             //          .ready
		.source0_valid         (burst_adapter_005_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_005_source0_data),          //          .data
		.source0_channel       (burst_adapter_005_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_005_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_005_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_005_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_006 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_028_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_028_src_data),              //          .data
		.sink0_channel         (width_adapter_028_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_028_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_028_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_028_src_ready),             //          .ready
		.source0_valid         (burst_adapter_006_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_006_source0_data),          //          .data
		.source0_channel       (burst_adapter_006_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_006_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_006_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_006_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_007 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_030_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_030_src_data),              //          .data
		.sink0_channel         (width_adapter_030_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_030_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_030_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_030_src_ready),             //          .ready
		.source0_valid         (burst_adapter_007_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_007_source0_data),          //          .data
		.source0_channel       (burst_adapter_007_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_007_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_007_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_007_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_008 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_032_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_032_src_data),              //          .data
		.sink0_channel         (width_adapter_032_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_032_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_032_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_032_src_ready),             //          .ready
		.source0_valid         (burst_adapter_008_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_008_source0_data),          //          .data
		.source0_channel       (burst_adapter_008_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_008_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_008_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_008_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (29),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (51),
		.PKT_BYTE_CNT_H            (39),
		.PKT_BYTE_CNT_L            (36),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (46),
		.PKT_BURST_SIZE_L          (44),
		.PKT_BURST_TYPE_H          (48),
		.PKT_BURST_TYPE_L          (47),
		.PKT_BURSTWRAP_H           (43),
		.PKT_BURSTWRAP_L           (40),
		.PKT_TRANS_COMPRESSED_READ (30),
		.PKT_TRANS_WRITE           (32),
		.PKT_TRANS_READ            (33),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (73),
		.ST_CHANNEL_W              (24),
		.OUT_BYTE_CNT_H            (36),
		.OUT_BURSTWRAP_H           (43),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (0),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (15),
		.BURSTWRAP_CONST_VALUE     (15)
	) burst_adapter_009 (
		.clk                   (clk_clk),                                 //       cr0.clk
		.reset                 (rst_controller_reset_out_reset),          // cr0_reset.reset
		.sink0_valid           (width_adapter_034_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_034_src_data),              //          .data
		.sink0_channel         (width_adapter_034_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_034_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_034_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_034_src_ready),             //          .ready
		.source0_valid         (burst_adapter_009_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_009_source0_data),          //          .data
		.source0_channel       (burst_adapter_009_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_009_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_009_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_009_source0_ready)          //          .ready
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS        (2),
		.OUTPUT_RESET_SYNC_EDGES ("deassert"),
		.SYNC_DEPTH              (2)
	) rst_controller (
		.reset_in0  (~reset_reset_n),                             // reset_in0.reset
		.reset_in1  (nios2_qsys_0_jtag_debug_module_reset_reset), // reset_in1.reset
		.clk        (clk_clk),                                    //       clk.clk
		.reset_out  (rst_controller_reset_out_reset),             // reset_out.reset
		.reset_in2  (1'b0),                                       // (terminated)
		.reset_in3  (1'b0),                                       // (terminated)
		.reset_in4  (1'b0),                                       // (terminated)
		.reset_in5  (1'b0),                                       // (terminated)
		.reset_in6  (1'b0),                                       // (terminated)
		.reset_in7  (1'b0),                                       // (terminated)
		.reset_in8  (1'b0),                                       // (terminated)
		.reset_in9  (1'b0),                                       // (terminated)
		.reset_in10 (1'b0),                                       // (terminated)
		.reset_in11 (1'b0),                                       // (terminated)
		.reset_in12 (1'b0),                                       // (terminated)
		.reset_in13 (1'b0),                                       // (terminated)
		.reset_in14 (1'b0),                                       // (terminated)
		.reset_in15 (1'b0)                                        // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS        (1),
		.OUTPUT_RESET_SYNC_EDGES ("deassert"),
		.SYNC_DEPTH              (2)
	) rst_controller_001 (
		.reset_in0  (~up_clocks_0_sys_clk_reset_reset),   // reset_in0.reset
		.clk        (up_clocks_0_audio_clk_clk),          //       clk.clk
		.reset_out  (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_in1  (1'b0),                               // (terminated)
		.reset_in2  (1'b0),                               // (terminated)
		.reset_in3  (1'b0),                               // (terminated)
		.reset_in4  (1'b0),                               // (terminated)
		.reset_in5  (1'b0),                               // (terminated)
		.reset_in6  (1'b0),                               // (terminated)
		.reset_in7  (1'b0),                               // (terminated)
		.reset_in8  (1'b0),                               // (terminated)
		.reset_in9  (1'b0),                               // (terminated)
		.reset_in10 (1'b0),                               // (terminated)
		.reset_in11 (1'b0),                               // (terminated)
		.reset_in12 (1'b0),                               // (terminated)
		.reset_in13 (1'b0),                               // (terminated)
		.reset_in14 (1'b0),                               // (terminated)
		.reset_in15 (1'b0)                                // (terminated)
	);

	niosII_system_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clk_clk),                           //       clk.clk
		.reset              (rst_controller_reset_out_reset),    // clk_reset.reset
		.sink_ready         (addr_router_src_ready),             //      sink.ready
		.sink_channel       (addr_router_src_channel),           //          .channel
		.sink_data          (addr_router_src_data),              //          .data
		.sink_startofpacket (addr_router_src_startofpacket),     //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),       //          .endofpacket
		.sink_valid         (addr_router_src_valid),             //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),         //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),         //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),          //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),       //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),   //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),         //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),         //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),          //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),       //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket), //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket),   //          .endofpacket
		.src2_ready         (cmd_xbar_demux_src2_ready),         //      src2.ready
		.src2_valid         (cmd_xbar_demux_src2_valid),         //          .valid
		.src2_data          (cmd_xbar_demux_src2_data),          //          .data
		.src2_channel       (cmd_xbar_demux_src2_channel),       //          .channel
		.src2_startofpacket (cmd_xbar_demux_src2_startofpacket), //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_src2_endofpacket)    //          .endofpacket
	);

	niosII_system_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                 (clk_clk),                                //       clk.clk
		.reset               (rst_controller_reset_out_reset),         // clk_reset.reset
		.sink_ready          (addr_router_001_src_ready),              //      sink.ready
		.sink_channel        (addr_router_001_src_channel),            //          .channel
		.sink_data           (addr_router_001_src_data),               //          .data
		.sink_startofpacket  (addr_router_001_src_startofpacket),      //          .startofpacket
		.sink_endofpacket    (addr_router_001_src_endofpacket),        //          .endofpacket
		.sink_valid          (addr_router_001_src_valid),              //          .valid
		.src0_ready          (cmd_xbar_demux_001_src0_ready),          //      src0.ready
		.src0_valid          (cmd_xbar_demux_001_src0_valid),          //          .valid
		.src0_data           (cmd_xbar_demux_001_src0_data),           //          .data
		.src0_channel        (cmd_xbar_demux_001_src0_channel),        //          .channel
		.src0_startofpacket  (cmd_xbar_demux_001_src0_startofpacket),  //          .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_001_src0_endofpacket),    //          .endofpacket
		.src1_ready          (cmd_xbar_demux_001_src1_ready),          //      src1.ready
		.src1_valid          (cmd_xbar_demux_001_src1_valid),          //          .valid
		.src1_data           (cmd_xbar_demux_001_src1_data),           //          .data
		.src1_channel        (cmd_xbar_demux_001_src1_channel),        //          .channel
		.src1_startofpacket  (cmd_xbar_demux_001_src1_startofpacket),  //          .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_001_src1_endofpacket),    //          .endofpacket
		.src2_ready          (cmd_xbar_demux_001_src2_ready),          //      src2.ready
		.src2_valid          (cmd_xbar_demux_001_src2_valid),          //          .valid
		.src2_data           (cmd_xbar_demux_001_src2_data),           //          .data
		.src2_channel        (cmd_xbar_demux_001_src2_channel),        //          .channel
		.src2_startofpacket  (cmd_xbar_demux_001_src2_startofpacket),  //          .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_001_src2_endofpacket),    //          .endofpacket
		.src3_ready          (cmd_xbar_demux_001_src3_ready),          //      src3.ready
		.src3_valid          (cmd_xbar_demux_001_src3_valid),          //          .valid
		.src3_data           (cmd_xbar_demux_001_src3_data),           //          .data
		.src3_channel        (cmd_xbar_demux_001_src3_channel),        //          .channel
		.src3_startofpacket  (cmd_xbar_demux_001_src3_startofpacket),  //          .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_001_src3_endofpacket),    //          .endofpacket
		.src4_ready          (cmd_xbar_demux_001_src4_ready),          //      src4.ready
		.src4_valid          (cmd_xbar_demux_001_src4_valid),          //          .valid
		.src4_data           (cmd_xbar_demux_001_src4_data),           //          .data
		.src4_channel        (cmd_xbar_demux_001_src4_channel),        //          .channel
		.src4_startofpacket  (cmd_xbar_demux_001_src4_startofpacket),  //          .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_001_src4_endofpacket),    //          .endofpacket
		.src5_ready          (cmd_xbar_demux_001_src5_ready),          //      src5.ready
		.src5_valid          (cmd_xbar_demux_001_src5_valid),          //          .valid
		.src5_data           (cmd_xbar_demux_001_src5_data),           //          .data
		.src5_channel        (cmd_xbar_demux_001_src5_channel),        //          .channel
		.src5_startofpacket  (cmd_xbar_demux_001_src5_startofpacket),  //          .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_001_src5_endofpacket),    //          .endofpacket
		.src6_ready          (cmd_xbar_demux_001_src6_ready),          //      src6.ready
		.src6_valid          (cmd_xbar_demux_001_src6_valid),          //          .valid
		.src6_data           (cmd_xbar_demux_001_src6_data),           //          .data
		.src6_channel        (cmd_xbar_demux_001_src6_channel),        //          .channel
		.src6_startofpacket  (cmd_xbar_demux_001_src6_startofpacket),  //          .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_001_src6_endofpacket),    //          .endofpacket
		.src7_ready          (cmd_xbar_demux_001_src7_ready),          //      src7.ready
		.src7_valid          (cmd_xbar_demux_001_src7_valid),          //          .valid
		.src7_data           (cmd_xbar_demux_001_src7_data),           //          .data
		.src7_channel        (cmd_xbar_demux_001_src7_channel),        //          .channel
		.src7_startofpacket  (cmd_xbar_demux_001_src7_startofpacket),  //          .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_001_src7_endofpacket),    //          .endofpacket
		.src8_ready          (cmd_xbar_demux_001_src8_ready),          //      src8.ready
		.src8_valid          (cmd_xbar_demux_001_src8_valid),          //          .valid
		.src8_data           (cmd_xbar_demux_001_src8_data),           //          .data
		.src8_channel        (cmd_xbar_demux_001_src8_channel),        //          .channel
		.src8_startofpacket  (cmd_xbar_demux_001_src8_startofpacket),  //          .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_001_src8_endofpacket),    //          .endofpacket
		.src9_ready          (cmd_xbar_demux_001_src9_ready),          //      src9.ready
		.src9_valid          (cmd_xbar_demux_001_src9_valid),          //          .valid
		.src9_data           (cmd_xbar_demux_001_src9_data),           //          .data
		.src9_channel        (cmd_xbar_demux_001_src9_channel),        //          .channel
		.src9_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),  //          .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),    //          .endofpacket
		.src10_ready         (cmd_xbar_demux_001_src10_ready),         //     src10.ready
		.src10_valid         (cmd_xbar_demux_001_src10_valid),         //          .valid
		.src10_data          (cmd_xbar_demux_001_src10_data),          //          .data
		.src10_channel       (cmd_xbar_demux_001_src10_channel),       //          .channel
		.src10_startofpacket (cmd_xbar_demux_001_src10_startofpacket), //          .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_001_src10_endofpacket),   //          .endofpacket
		.src11_ready         (cmd_xbar_demux_001_src11_ready),         //     src11.ready
		.src11_valid         (cmd_xbar_demux_001_src11_valid),         //          .valid
		.src11_data          (cmd_xbar_demux_001_src11_data),          //          .data
		.src11_channel       (cmd_xbar_demux_001_src11_channel),       //          .channel
		.src11_startofpacket (cmd_xbar_demux_001_src11_startofpacket), //          .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_001_src11_endofpacket),   //          .endofpacket
		.src12_ready         (cmd_xbar_demux_001_src12_ready),         //     src12.ready
		.src12_valid         (cmd_xbar_demux_001_src12_valid),         //          .valid
		.src12_data          (cmd_xbar_demux_001_src12_data),          //          .data
		.src12_channel       (cmd_xbar_demux_001_src12_channel),       //          .channel
		.src12_startofpacket (cmd_xbar_demux_001_src12_startofpacket), //          .startofpacket
		.src12_endofpacket   (cmd_xbar_demux_001_src12_endofpacket),   //          .endofpacket
		.src13_ready         (cmd_xbar_demux_001_src13_ready),         //     src13.ready
		.src13_valid         (cmd_xbar_demux_001_src13_valid),         //          .valid
		.src13_data          (cmd_xbar_demux_001_src13_data),          //          .data
		.src13_channel       (cmd_xbar_demux_001_src13_channel),       //          .channel
		.src13_startofpacket (cmd_xbar_demux_001_src13_startofpacket), //          .startofpacket
		.src13_endofpacket   (cmd_xbar_demux_001_src13_endofpacket),   //          .endofpacket
		.src14_ready         (cmd_xbar_demux_001_src14_ready),         //     src14.ready
		.src14_valid         (cmd_xbar_demux_001_src14_valid),         //          .valid
		.src14_data          (cmd_xbar_demux_001_src14_data),          //          .data
		.src14_channel       (cmd_xbar_demux_001_src14_channel),       //          .channel
		.src14_startofpacket (cmd_xbar_demux_001_src14_startofpacket), //          .startofpacket
		.src14_endofpacket   (cmd_xbar_demux_001_src14_endofpacket),   //          .endofpacket
		.src15_ready         (cmd_xbar_demux_001_src15_ready),         //     src15.ready
		.src15_valid         (cmd_xbar_demux_001_src15_valid),         //          .valid
		.src15_data          (cmd_xbar_demux_001_src15_data),          //          .data
		.src15_channel       (cmd_xbar_demux_001_src15_channel),       //          .channel
		.src15_startofpacket (cmd_xbar_demux_001_src15_startofpacket), //          .startofpacket
		.src15_endofpacket   (cmd_xbar_demux_001_src15_endofpacket),   //          .endofpacket
		.src16_ready         (cmd_xbar_demux_001_src16_ready),         //     src16.ready
		.src16_valid         (cmd_xbar_demux_001_src16_valid),         //          .valid
		.src16_data          (cmd_xbar_demux_001_src16_data),          //          .data
		.src16_channel       (cmd_xbar_demux_001_src16_channel),       //          .channel
		.src16_startofpacket (cmd_xbar_demux_001_src16_startofpacket), //          .startofpacket
		.src16_endofpacket   (cmd_xbar_demux_001_src16_endofpacket),   //          .endofpacket
		.src17_ready         (cmd_xbar_demux_001_src17_ready),         //     src17.ready
		.src17_valid         (cmd_xbar_demux_001_src17_valid),         //          .valid
		.src17_data          (cmd_xbar_demux_001_src17_data),          //          .data
		.src17_channel       (cmd_xbar_demux_001_src17_channel),       //          .channel
		.src17_startofpacket (cmd_xbar_demux_001_src17_startofpacket), //          .startofpacket
		.src17_endofpacket   (cmd_xbar_demux_001_src17_endofpacket),   //          .endofpacket
		.src18_ready         (cmd_xbar_demux_001_src18_ready),         //     src18.ready
		.src18_valid         (cmd_xbar_demux_001_src18_valid),         //          .valid
		.src18_data          (cmd_xbar_demux_001_src18_data),          //          .data
		.src18_channel       (cmd_xbar_demux_001_src18_channel),       //          .channel
		.src18_startofpacket (cmd_xbar_demux_001_src18_startofpacket), //          .startofpacket
		.src18_endofpacket   (cmd_xbar_demux_001_src18_endofpacket),   //          .endofpacket
		.src19_ready         (cmd_xbar_demux_001_src19_ready),         //     src19.ready
		.src19_valid         (cmd_xbar_demux_001_src19_valid),         //          .valid
		.src19_data          (cmd_xbar_demux_001_src19_data),          //          .data
		.src19_channel       (cmd_xbar_demux_001_src19_channel),       //          .channel
		.src19_startofpacket (cmd_xbar_demux_001_src19_startofpacket), //          .startofpacket
		.src19_endofpacket   (cmd_xbar_demux_001_src19_endofpacket),   //          .endofpacket
		.src20_ready         (cmd_xbar_demux_001_src20_ready),         //     src20.ready
		.src20_valid         (cmd_xbar_demux_001_src20_valid),         //          .valid
		.src20_data          (cmd_xbar_demux_001_src20_data),          //          .data
		.src20_channel       (cmd_xbar_demux_001_src20_channel),       //          .channel
		.src20_startofpacket (cmd_xbar_demux_001_src20_startofpacket), //          .startofpacket
		.src20_endofpacket   (cmd_xbar_demux_001_src20_endofpacket),   //          .endofpacket
		.src21_ready         (cmd_xbar_demux_001_src21_ready),         //     src21.ready
		.src21_valid         (cmd_xbar_demux_001_src21_valid),         //          .valid
		.src21_data          (cmd_xbar_demux_001_src21_data),          //          .data
		.src21_channel       (cmd_xbar_demux_001_src21_channel),       //          .channel
		.src21_startofpacket (cmd_xbar_demux_001_src21_startofpacket), //          .startofpacket
		.src21_endofpacket   (cmd_xbar_demux_001_src21_endofpacket),   //          .endofpacket
		.src22_ready         (cmd_xbar_demux_001_src22_ready),         //     src22.ready
		.src22_valid         (cmd_xbar_demux_001_src22_valid),         //          .valid
		.src22_data          (cmd_xbar_demux_001_src22_data),          //          .data
		.src22_channel       (cmd_xbar_demux_001_src22_channel),       //          .channel
		.src22_startofpacket (cmd_xbar_demux_001_src22_startofpacket), //          .startofpacket
		.src22_endofpacket   (cmd_xbar_demux_001_src22_endofpacket),   //          .endofpacket
		.src23_ready         (cmd_xbar_demux_001_src23_ready),         //     src23.ready
		.src23_valid         (cmd_xbar_demux_001_src23_valid),         //          .valid
		.src23_data          (cmd_xbar_demux_001_src23_data),          //          .data
		.src23_channel       (cmd_xbar_demux_001_src23_channel),       //          .channel
		.src23_startofpacket (cmd_xbar_demux_001_src23_startofpacket), //          .startofpacket
		.src23_endofpacket   (cmd_xbar_demux_001_src23_endofpacket)    //          .endofpacket
	);

	niosII_system_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clk_clk),                               //       clk.clk
		.reset               (rst_controller_reset_out_reset),        // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                //          .valid
		.src_data            (cmd_xbar_mux_src_data),                 //          .data
		.src_channel         (cmd_xbar_mux_src_channel),              //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),        //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),          //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),       //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),         //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),         //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),       //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),          //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket), //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clk_clk),                               //       clk.clk
		.reset               (rst_controller_reset_out_reset),        // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),            //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),            //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),             //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),          //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),    //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),      //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),       //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),         //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),         //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),       //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),          //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket), //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)    //          .endofpacket
	);

	niosII_system_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (clk_clk),                               //       clk.clk
		.reset               (rst_controller_reset_out_reset),        // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),            //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),            //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),             //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),          //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),    //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),      //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket),       //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src2_ready),         //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src2_valid),         //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src2_channel),       //          .channel
		.sink1_data          (cmd_xbar_demux_001_src2_data),          //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src2_startofpacket), //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux rsp_xbar_demux (
		.clk                (clk_clk),                           //       clk.clk
		.reset              (rst_controller_reset_out_reset),    // clk_reset.reset
		.sink_ready         (id_router_src_ready),               //      sink.ready
		.sink_channel       (id_router_src_channel),             //          .channel
		.sink_data          (id_router_src_data),                //          .data
		.sink_startofpacket (id_router_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),   //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),         //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),         //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),          //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),       //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket), //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_001_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_001_src_channel),         //          .channel
		.sink_data          (width_adapter_001_src_data),            //          .data
		.sink_startofpacket (width_adapter_001_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_001_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_001_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),   //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),         //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),         //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),          //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),       //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket), //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),               //      sink.ready
		.sink_channel       (id_router_002_src_channel),             //          .channel
		.sink_data          (id_router_002_src_data),                //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_002_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),   //          .endofpacket
		.src1_ready         (rsp_xbar_demux_002_src1_ready),         //      src1.ready
		.src1_valid         (rsp_xbar_demux_002_src1_valid),         //          .valid
		.src1_data          (rsp_xbar_demux_002_src1_data),          //          .data
		.src1_channel       (rsp_xbar_demux_002_src1_channel),       //          .channel
		.src1_startofpacket (rsp_xbar_demux_002_src1_startofpacket), //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_002_src1_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_003 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),               //      sink.ready
		.sink_channel       (id_router_003_src_channel),             //          .channel
		.sink_data          (id_router_003_src_data),                //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_003_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_004 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),               //      sink.ready
		.sink_channel       (id_router_004_src_channel),             //          .channel
		.sink_data          (id_router_004_src_data),                //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_004_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_005 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),               //      sink.ready
		.sink_channel       (id_router_005_src_channel),             //          .channel
		.sink_data          (id_router_005_src_data),                //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_005_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_006 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),               //      sink.ready
		.sink_channel       (id_router_006_src_channel),             //          .channel
		.sink_data          (id_router_006_src_data),                //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),       //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),         //          .endofpacket
		.sink_valid         (id_router_006_src_valid),               //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_007 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_003_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_003_src_channel),         //          .channel
		.sink_data          (width_adapter_003_src_data),            //          .data
		.sink_startofpacket (width_adapter_003_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_003_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_003_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_008 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_005_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_005_src_channel),         //          .channel
		.sink_data          (width_adapter_005_src_data),            //          .data
		.sink_startofpacket (width_adapter_005_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_005_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_005_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_009 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_007_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_007_src_channel),         //          .channel
		.sink_data          (width_adapter_007_src_data),            //          .data
		.sink_startofpacket (width_adapter_007_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_007_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_007_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_010 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_009_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_009_src_channel),         //          .channel
		.sink_data          (width_adapter_009_src_data),            //          .data
		.sink_startofpacket (width_adapter_009_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_009_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_009_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_011 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_011_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_011_src_channel),         //          .channel
		.sink_data          (width_adapter_011_src_data),            //          .data
		.sink_startofpacket (width_adapter_011_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_011_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_011_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_012 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_013_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_013_src_channel),         //          .channel
		.sink_data          (width_adapter_013_src_data),            //          .data
		.sink_startofpacket (width_adapter_013_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_013_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_013_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_012_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_012_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_012_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_012_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_012_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_012_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_013 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_015_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_015_src_channel),         //          .channel
		.sink_data          (width_adapter_015_src_data),            //          .data
		.sink_startofpacket (width_adapter_015_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_015_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_015_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_013_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_013_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_013_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_013_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_013_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_013_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_014 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_017_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_017_src_channel),         //          .channel
		.sink_data          (width_adapter_017_src_data),            //          .data
		.sink_startofpacket (width_adapter_017_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_017_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_017_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_014_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_014_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_014_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_014_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_014_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_014_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_015 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_019_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_019_src_channel),         //          .channel
		.sink_data          (width_adapter_019_src_data),            //          .data
		.sink_startofpacket (width_adapter_019_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_019_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_019_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_015_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_015_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_015_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_015_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_015_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_015_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_016 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_021_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_021_src_channel),         //          .channel
		.sink_data          (width_adapter_021_src_data),            //          .data
		.sink_startofpacket (width_adapter_021_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_021_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_021_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_016_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_016_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_016_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_016_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_016_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_017 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_023_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_023_src_channel),         //          .channel
		.sink_data          (width_adapter_023_src_data),            //          .data
		.sink_startofpacket (width_adapter_023_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_023_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_023_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_017_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_017_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_017_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_017_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_017_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_017_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_018 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_025_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_025_src_channel),         //          .channel
		.sink_data          (width_adapter_025_src_data),            //          .data
		.sink_startofpacket (width_adapter_025_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_025_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_025_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_018_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_018_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_018_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_018_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_018_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_018_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_019 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_027_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_027_src_channel),         //          .channel
		.sink_data          (width_adapter_027_src_data),            //          .data
		.sink_startofpacket (width_adapter_027_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_027_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_027_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_019_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_019_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_019_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_019_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_019_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_019_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_020 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_029_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_029_src_channel),         //          .channel
		.sink_data          (width_adapter_029_src_data),            //          .data
		.sink_startofpacket (width_adapter_029_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_029_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_029_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_020_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_020_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_020_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_020_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_020_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_020_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_021 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_031_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_031_src_channel),         //          .channel
		.sink_data          (width_adapter_031_src_data),            //          .data
		.sink_startofpacket (width_adapter_031_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_031_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_031_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_021_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_021_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_021_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_021_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_021_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_021_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_022 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_033_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_033_src_channel),         //          .channel
		.sink_data          (width_adapter_033_src_data),            //          .data
		.sink_startofpacket (width_adapter_033_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_033_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_033_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_022_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_022_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_022_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_022_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_022_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_022_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_demux_003 rsp_xbar_demux_023 (
		.clk                (clk_clk),                               //       clk.clk
		.reset              (rst_controller_reset_out_reset),        // clk_reset.reset
		.sink_ready         (width_adapter_035_src_ready),           //      sink.ready
		.sink_channel       (width_adapter_035_src_channel),         //          .channel
		.sink_data          (width_adapter_035_src_data),            //          .data
		.sink_startofpacket (width_adapter_035_src_startofpacket),   //          .startofpacket
		.sink_endofpacket   (width_adapter_035_src_endofpacket),     //          .endofpacket
		.sink_valid         (width_adapter_035_src_valid),           //          .valid
		.src0_ready         (rsp_xbar_demux_023_src0_ready),         //      src0.ready
		.src0_valid         (rsp_xbar_demux_023_src0_valid),         //          .valid
		.src0_data          (rsp_xbar_demux_023_src0_data),          //          .data
		.src0_channel       (rsp_xbar_demux_023_src0_channel),       //          .channel
		.src0_startofpacket (rsp_xbar_demux_023_src0_startofpacket), //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_023_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clk_clk),                               //       clk.clk
		.reset               (rst_controller_reset_out_reset),        // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                //          .valid
		.src_data            (rsp_xbar_mux_src_data),                 //          .data
		.src_channel         (rsp_xbar_mux_src_channel),              //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),        //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),          //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),             //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),             //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),           //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),              //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),       //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),         //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),         //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),       //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),          //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket), //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),   //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),         //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),         //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),       //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),          //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket), //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)    //          .endofpacket
	);

	niosII_system_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                  (clk_clk),                               //       clk.clk
		.reset                (rst_controller_reset_out_reset),        // clk_reset.reset
		.src_ready            (rsp_xbar_mux_001_src_ready),            //       src.ready
		.src_valid            (rsp_xbar_mux_001_src_valid),            //          .valid
		.src_data             (rsp_xbar_mux_001_src_data),             //          .data
		.src_channel          (rsp_xbar_mux_001_src_channel),          //          .channel
		.src_startofpacket    (rsp_xbar_mux_001_src_startofpacket),    //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_001_src_endofpacket),      //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src1_ready),             //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src1_valid),             //          .valid
		.sink0_channel        (rsp_xbar_demux_src1_channel),           //          .channel
		.sink0_data           (rsp_xbar_demux_src1_data),              //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src1_startofpacket),     //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src1_endofpacket),       //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src1_ready),         //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src1_valid),         //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src1_channel),       //          .channel
		.sink1_data           (rsp_xbar_demux_001_src1_data),          //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src1_startofpacket), //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src1_endofpacket),   //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src1_ready),         //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src1_valid),         //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src1_channel),       //          .channel
		.sink2_data           (rsp_xbar_demux_002_src1_data),          //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src1_startofpacket), //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src1_endofpacket),   //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),         //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),         //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),       //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),          //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket), //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),   //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),         //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),         //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),       //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),          //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket), //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),   //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),         //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),         //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),       //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),          //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket), //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),   //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),         //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),         //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),       //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),          //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket), //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),   //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),         //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),         //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),       //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),          //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket), //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),   //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),         //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),         //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),       //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),          //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket), //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),   //          .endofpacket
		.sink9_ready          (rsp_xbar_demux_009_src0_ready),         //     sink9.ready
		.sink9_valid          (rsp_xbar_demux_009_src0_valid),         //          .valid
		.sink9_channel        (rsp_xbar_demux_009_src0_channel),       //          .channel
		.sink9_data           (rsp_xbar_demux_009_src0_data),          //          .data
		.sink9_startofpacket  (rsp_xbar_demux_009_src0_startofpacket), //          .startofpacket
		.sink9_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),   //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),         //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),         //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),       //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),          //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket), //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),   //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),         //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),         //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),       //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),          //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket), //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket),   //          .endofpacket
		.sink12_ready         (rsp_xbar_demux_012_src0_ready),         //    sink12.ready
		.sink12_valid         (rsp_xbar_demux_012_src0_valid),         //          .valid
		.sink12_channel       (rsp_xbar_demux_012_src0_channel),       //          .channel
		.sink12_data          (rsp_xbar_demux_012_src0_data),          //          .data
		.sink12_startofpacket (rsp_xbar_demux_012_src0_startofpacket), //          .startofpacket
		.sink12_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),   //          .endofpacket
		.sink13_ready         (rsp_xbar_demux_013_src0_ready),         //    sink13.ready
		.sink13_valid         (rsp_xbar_demux_013_src0_valid),         //          .valid
		.sink13_channel       (rsp_xbar_demux_013_src0_channel),       //          .channel
		.sink13_data          (rsp_xbar_demux_013_src0_data),          //          .data
		.sink13_startofpacket (rsp_xbar_demux_013_src0_startofpacket), //          .startofpacket
		.sink13_endofpacket   (rsp_xbar_demux_013_src0_endofpacket),   //          .endofpacket
		.sink14_ready         (rsp_xbar_demux_014_src0_ready),         //    sink14.ready
		.sink14_valid         (rsp_xbar_demux_014_src0_valid),         //          .valid
		.sink14_channel       (rsp_xbar_demux_014_src0_channel),       //          .channel
		.sink14_data          (rsp_xbar_demux_014_src0_data),          //          .data
		.sink14_startofpacket (rsp_xbar_demux_014_src0_startofpacket), //          .startofpacket
		.sink14_endofpacket   (rsp_xbar_demux_014_src0_endofpacket),   //          .endofpacket
		.sink15_ready         (rsp_xbar_demux_015_src0_ready),         //    sink15.ready
		.sink15_valid         (rsp_xbar_demux_015_src0_valid),         //          .valid
		.sink15_channel       (rsp_xbar_demux_015_src0_channel),       //          .channel
		.sink15_data          (rsp_xbar_demux_015_src0_data),          //          .data
		.sink15_startofpacket (rsp_xbar_demux_015_src0_startofpacket), //          .startofpacket
		.sink15_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),   //          .endofpacket
		.sink16_ready         (rsp_xbar_demux_016_src0_ready),         //    sink16.ready
		.sink16_valid         (rsp_xbar_demux_016_src0_valid),         //          .valid
		.sink16_channel       (rsp_xbar_demux_016_src0_channel),       //          .channel
		.sink16_data          (rsp_xbar_demux_016_src0_data),          //          .data
		.sink16_startofpacket (rsp_xbar_demux_016_src0_startofpacket), //          .startofpacket
		.sink16_endofpacket   (rsp_xbar_demux_016_src0_endofpacket),   //          .endofpacket
		.sink17_ready         (rsp_xbar_demux_017_src0_ready),         //    sink17.ready
		.sink17_valid         (rsp_xbar_demux_017_src0_valid),         //          .valid
		.sink17_channel       (rsp_xbar_demux_017_src0_channel),       //          .channel
		.sink17_data          (rsp_xbar_demux_017_src0_data),          //          .data
		.sink17_startofpacket (rsp_xbar_demux_017_src0_startofpacket), //          .startofpacket
		.sink17_endofpacket   (rsp_xbar_demux_017_src0_endofpacket),   //          .endofpacket
		.sink18_ready         (rsp_xbar_demux_018_src0_ready),         //    sink18.ready
		.sink18_valid         (rsp_xbar_demux_018_src0_valid),         //          .valid
		.sink18_channel       (rsp_xbar_demux_018_src0_channel),       //          .channel
		.sink18_data          (rsp_xbar_demux_018_src0_data),          //          .data
		.sink18_startofpacket (rsp_xbar_demux_018_src0_startofpacket), //          .startofpacket
		.sink18_endofpacket   (rsp_xbar_demux_018_src0_endofpacket),   //          .endofpacket
		.sink19_ready         (rsp_xbar_demux_019_src0_ready),         //    sink19.ready
		.sink19_valid         (rsp_xbar_demux_019_src0_valid),         //          .valid
		.sink19_channel       (rsp_xbar_demux_019_src0_channel),       //          .channel
		.sink19_data          (rsp_xbar_demux_019_src0_data),          //          .data
		.sink19_startofpacket (rsp_xbar_demux_019_src0_startofpacket), //          .startofpacket
		.sink19_endofpacket   (rsp_xbar_demux_019_src0_endofpacket),   //          .endofpacket
		.sink20_ready         (rsp_xbar_demux_020_src0_ready),         //    sink20.ready
		.sink20_valid         (rsp_xbar_demux_020_src0_valid),         //          .valid
		.sink20_channel       (rsp_xbar_demux_020_src0_channel),       //          .channel
		.sink20_data          (rsp_xbar_demux_020_src0_data),          //          .data
		.sink20_startofpacket (rsp_xbar_demux_020_src0_startofpacket), //          .startofpacket
		.sink20_endofpacket   (rsp_xbar_demux_020_src0_endofpacket),   //          .endofpacket
		.sink21_ready         (rsp_xbar_demux_021_src0_ready),         //    sink21.ready
		.sink21_valid         (rsp_xbar_demux_021_src0_valid),         //          .valid
		.sink21_channel       (rsp_xbar_demux_021_src0_channel),       //          .channel
		.sink21_data          (rsp_xbar_demux_021_src0_data),          //          .data
		.sink21_startofpacket (rsp_xbar_demux_021_src0_startofpacket), //          .startofpacket
		.sink21_endofpacket   (rsp_xbar_demux_021_src0_endofpacket),   //          .endofpacket
		.sink22_ready         (rsp_xbar_demux_022_src0_ready),         //    sink22.ready
		.sink22_valid         (rsp_xbar_demux_022_src0_valid),         //          .valid
		.sink22_channel       (rsp_xbar_demux_022_src0_channel),       //          .channel
		.sink22_data          (rsp_xbar_demux_022_src0_data),          //          .data
		.sink22_startofpacket (rsp_xbar_demux_022_src0_startofpacket), //          .startofpacket
		.sink22_endofpacket   (rsp_xbar_demux_022_src0_endofpacket),   //          .endofpacket
		.sink23_ready         (rsp_xbar_demux_023_src0_ready),         //    sink23.ready
		.sink23_valid         (rsp_xbar_demux_023_src0_valid),         //          .valid
		.sink23_channel       (rsp_xbar_demux_023_src0_channel),       //          .channel
		.sink23_data          (rsp_xbar_demux_023_src0_data),          //          .data
		.sink23_startofpacket (rsp_xbar_demux_023_src0_startofpacket), //          .startofpacket
		.sink23_endofpacket   (rsp_xbar_demux_023_src0_endofpacket)    //          .endofpacket
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (38),
		.OUT_PKT_ADDR_L                (18),
		.OUT_PKT_DATA_H                (15),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (17),
		.OUT_PKT_BYTEEN_L              (16),
		.OUT_PKT_BYTE_CNT_H            (48),
		.OUT_PKT_BYTE_CNT_L            (45),
		.OUT_PKT_TRANS_COMPRESSED_READ (39),
		.OUT_PKT_BURST_SIZE_H          (55),
		.OUT_PKT_BURST_SIZE_L          (53),
		.OUT_PKT_RESPONSE_STATUS_H     (81),
		.OUT_PKT_RESPONSE_STATUS_L     (80),
		.OUT_PKT_TRANS_EXCLUSIVE       (44),
		.OUT_PKT_BURST_TYPE_H          (57),
		.OUT_PKT_BURST_TYPE_L          (56),
		.OUT_ST_DATA_W                 (82),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter (
		.clk                  (clk_clk),                            //       clk.clk
		.reset                (rst_controller_reset_out_reset),     // clk_reset.reset
		.in_valid             (cmd_xbar_mux_001_src_valid),         //      sink.valid
		.in_channel           (cmd_xbar_mux_001_src_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_mux_001_src_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_mux_001_src_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_mux_001_src_ready),         //          .ready
		.in_data              (cmd_xbar_mux_001_src_data),          //          .data
		.out_endofpacket      (width_adapter_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_src_data),             //          .data
		.out_channel          (width_adapter_src_channel),          //          .channel
		.out_valid            (width_adapter_src_valid),            //          .valid
		.out_ready            (width_adapter_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                              // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (38),
		.IN_PKT_ADDR_L                 (18),
		.IN_PKT_DATA_H                 (15),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (17),
		.IN_PKT_BYTEEN_L               (16),
		.IN_PKT_BYTE_CNT_H             (48),
		.IN_PKT_BYTE_CNT_L             (45),
		.IN_PKT_TRANS_COMPRESSED_READ  (39),
		.IN_PKT_BURSTWRAP_H            (52),
		.IN_PKT_BURSTWRAP_L            (49),
		.IN_PKT_BURST_SIZE_H           (55),
		.IN_PKT_BURST_SIZE_L           (53),
		.IN_PKT_RESPONSE_STATUS_H      (81),
		.IN_PKT_RESPONSE_STATUS_L      (80),
		.IN_PKT_TRANS_EXCLUSIVE        (44),
		.IN_PKT_BURST_TYPE_H           (57),
		.IN_PKT_BURST_TYPE_L           (56),
		.IN_ST_DATA_W                  (82),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_001 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_001_src_valid),             //      sink.valid
		.in_channel           (id_router_001_src_channel),           //          .channel
		.in_startofpacket     (id_router_001_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_001_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_001_src_ready),             //          .ready
		.in_data              (id_router_001_src_data),              //          .data
		.out_endofpacket      (width_adapter_001_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_001_src_data),          //          .data
		.out_channel          (width_adapter_001_src_channel),       //          .channel
		.out_valid            (width_adapter_001_src_valid),         //          .valid
		.out_ready            (width_adapter_001_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_001_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_002 (
		.clk                  (clk_clk),                               //       clk.clk
		.reset                (rst_controller_reset_out_reset),        // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src7_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src7_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src7_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src7_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src7_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src7_data),          //          .data
		.out_endofpacket      (width_adapter_002_src_endofpacket),     //       src.endofpacket
		.out_data             (width_adapter_002_src_data),            //          .data
		.out_channel          (width_adapter_002_src_channel),         //          .channel
		.out_valid            (width_adapter_002_src_valid),           //          .valid
		.out_ready            (width_adapter_002_src_ready),           //          .ready
		.out_startofpacket    (width_adapter_002_src_startofpacket),   //          .startofpacket
		.in_command_size_data (3'b000)                                 // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_003 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_007_src_valid),             //      sink.valid
		.in_channel           (id_router_007_src_channel),           //          .channel
		.in_startofpacket     (id_router_007_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_007_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_007_src_ready),             //          .ready
		.in_data              (id_router_007_src_data),              //          .data
		.out_endofpacket      (width_adapter_003_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_003_src_data),          //          .data
		.out_channel          (width_adapter_003_src_channel),       //          .channel
		.out_valid            (width_adapter_003_src_valid),         //          .valid
		.out_ready            (width_adapter_003_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_003_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_004 (
		.clk                  (clk_clk),                               //       clk.clk
		.reset                (rst_controller_reset_out_reset),        // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src8_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src8_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src8_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src8_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src8_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src8_data),          //          .data
		.out_endofpacket      (width_adapter_004_src_endofpacket),     //       src.endofpacket
		.out_data             (width_adapter_004_src_data),            //          .data
		.out_channel          (width_adapter_004_src_channel),         //          .channel
		.out_valid            (width_adapter_004_src_valid),           //          .valid
		.out_ready            (width_adapter_004_src_ready),           //          .ready
		.out_startofpacket    (width_adapter_004_src_startofpacket),   //          .startofpacket
		.in_command_size_data (3'b000)                                 // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_005 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_008_src_valid),             //      sink.valid
		.in_channel           (id_router_008_src_channel),           //          .channel
		.in_startofpacket     (id_router_008_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_008_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_008_src_ready),             //          .ready
		.in_data              (id_router_008_src_data),              //          .data
		.out_endofpacket      (width_adapter_005_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_005_src_data),          //          .data
		.out_channel          (width_adapter_005_src_channel),       //          .channel
		.out_valid            (width_adapter_005_src_valid),         //          .valid
		.out_ready            (width_adapter_005_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_005_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_006 (
		.clk                  (clk_clk),                               //       clk.clk
		.reset                (rst_controller_reset_out_reset),        // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src9_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src9_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src9_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src9_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src9_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src9_data),          //          .data
		.out_endofpacket      (width_adapter_006_src_endofpacket),     //       src.endofpacket
		.out_data             (width_adapter_006_src_data),            //          .data
		.out_channel          (width_adapter_006_src_channel),         //          .channel
		.out_valid            (width_adapter_006_src_valid),           //          .valid
		.out_ready            (width_adapter_006_src_ready),           //          .ready
		.out_startofpacket    (width_adapter_006_src_startofpacket),   //          .startofpacket
		.in_command_size_data (3'b000)                                 // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_007 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_009_src_valid),             //      sink.valid
		.in_channel           (id_router_009_src_channel),           //          .channel
		.in_startofpacket     (id_router_009_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_009_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_009_src_ready),             //          .ready
		.in_data              (id_router_009_src_data),              //          .data
		.out_endofpacket      (width_adapter_007_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_007_src_data),          //          .data
		.out_channel          (width_adapter_007_src_channel),       //          .channel
		.out_valid            (width_adapter_007_src_valid),         //          .valid
		.out_ready            (width_adapter_007_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_007_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_008 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src10_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src10_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src10_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src10_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src10_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src10_data),          //          .data
		.out_endofpacket      (width_adapter_008_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_008_src_data),             //          .data
		.out_channel          (width_adapter_008_src_channel),          //          .channel
		.out_valid            (width_adapter_008_src_valid),            //          .valid
		.out_ready            (width_adapter_008_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_008_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_009 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_010_src_valid),             //      sink.valid
		.in_channel           (id_router_010_src_channel),           //          .channel
		.in_startofpacket     (id_router_010_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_010_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_010_src_ready),             //          .ready
		.in_data              (id_router_010_src_data),              //          .data
		.out_endofpacket      (width_adapter_009_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_009_src_data),          //          .data
		.out_channel          (width_adapter_009_src_channel),       //          .channel
		.out_valid            (width_adapter_009_src_valid),         //          .valid
		.out_ready            (width_adapter_009_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_009_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_010 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src11_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src11_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src11_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src11_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src11_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src11_data),          //          .data
		.out_endofpacket      (width_adapter_010_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_010_src_data),             //          .data
		.out_channel          (width_adapter_010_src_channel),          //          .channel
		.out_valid            (width_adapter_010_src_valid),            //          .valid
		.out_ready            (width_adapter_010_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_010_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_011 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_011_src_valid),             //      sink.valid
		.in_channel           (id_router_011_src_channel),           //          .channel
		.in_startofpacket     (id_router_011_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_011_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_011_src_ready),             //          .ready
		.in_data              (id_router_011_src_data),              //          .data
		.out_endofpacket      (width_adapter_011_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_011_src_data),          //          .data
		.out_channel          (width_adapter_011_src_channel),       //          .channel
		.out_valid            (width_adapter_011_src_valid),         //          .valid
		.out_ready            (width_adapter_011_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_011_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_012 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src12_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src12_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src12_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src12_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src12_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src12_data),          //          .data
		.out_endofpacket      (width_adapter_012_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_012_src_data),             //          .data
		.out_channel          (width_adapter_012_src_channel),          //          .channel
		.out_valid            (width_adapter_012_src_valid),            //          .valid
		.out_ready            (width_adapter_012_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_012_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_013 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_012_src_valid),             //      sink.valid
		.in_channel           (id_router_012_src_channel),           //          .channel
		.in_startofpacket     (id_router_012_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_012_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_012_src_ready),             //          .ready
		.in_data              (id_router_012_src_data),              //          .data
		.out_endofpacket      (width_adapter_013_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_013_src_data),          //          .data
		.out_channel          (width_adapter_013_src_channel),       //          .channel
		.out_valid            (width_adapter_013_src_valid),         //          .valid
		.out_ready            (width_adapter_013_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_013_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_014 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src13_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src13_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src13_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src13_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src13_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src13_data),          //          .data
		.out_endofpacket      (width_adapter_014_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_014_src_data),             //          .data
		.out_channel          (width_adapter_014_src_channel),          //          .channel
		.out_valid            (width_adapter_014_src_valid),            //          .valid
		.out_ready            (width_adapter_014_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_014_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_015 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_013_src_valid),             //      sink.valid
		.in_channel           (id_router_013_src_channel),           //          .channel
		.in_startofpacket     (id_router_013_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_013_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_013_src_ready),             //          .ready
		.in_data              (id_router_013_src_data),              //          .data
		.out_endofpacket      (width_adapter_015_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_015_src_data),          //          .data
		.out_channel          (width_adapter_015_src_channel),       //          .channel
		.out_valid            (width_adapter_015_src_valid),         //          .valid
		.out_ready            (width_adapter_015_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_015_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_016 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src14_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src14_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src14_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src14_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src14_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src14_data),          //          .data
		.out_endofpacket      (width_adapter_016_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_016_src_data),             //          .data
		.out_channel          (width_adapter_016_src_channel),          //          .channel
		.out_valid            (width_adapter_016_src_valid),            //          .valid
		.out_ready            (width_adapter_016_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_016_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_017 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_014_src_valid),             //      sink.valid
		.in_channel           (id_router_014_src_channel),           //          .channel
		.in_startofpacket     (id_router_014_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_014_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_014_src_ready),             //          .ready
		.in_data              (id_router_014_src_data),              //          .data
		.out_endofpacket      (width_adapter_017_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_017_src_data),          //          .data
		.out_channel          (width_adapter_017_src_channel),       //          .channel
		.out_valid            (width_adapter_017_src_valid),         //          .valid
		.out_ready            (width_adapter_017_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_017_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_018 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src15_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src15_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src15_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src15_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src15_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src15_data),          //          .data
		.out_endofpacket      (width_adapter_018_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_018_src_data),             //          .data
		.out_channel          (width_adapter_018_src_channel),          //          .channel
		.out_valid            (width_adapter_018_src_valid),            //          .valid
		.out_ready            (width_adapter_018_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_018_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_019 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_015_src_valid),             //      sink.valid
		.in_channel           (id_router_015_src_channel),           //          .channel
		.in_startofpacket     (id_router_015_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_015_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_015_src_ready),             //          .ready
		.in_data              (id_router_015_src_data),              //          .data
		.out_endofpacket      (width_adapter_019_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_019_src_data),          //          .data
		.out_channel          (width_adapter_019_src_channel),       //          .channel
		.out_valid            (width_adapter_019_src_valid),         //          .valid
		.out_ready            (width_adapter_019_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_019_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_020 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src16_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src16_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src16_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src16_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src16_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src16_data),          //          .data
		.out_endofpacket      (width_adapter_020_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_020_src_data),             //          .data
		.out_channel          (width_adapter_020_src_channel),          //          .channel
		.out_valid            (width_adapter_020_src_valid),            //          .valid
		.out_ready            (width_adapter_020_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_020_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_021 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_016_src_valid),             //      sink.valid
		.in_channel           (id_router_016_src_channel),           //          .channel
		.in_startofpacket     (id_router_016_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_016_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_016_src_ready),             //          .ready
		.in_data              (id_router_016_src_data),              //          .data
		.out_endofpacket      (width_adapter_021_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_021_src_data),          //          .data
		.out_channel          (width_adapter_021_src_channel),       //          .channel
		.out_valid            (width_adapter_021_src_valid),         //          .valid
		.out_ready            (width_adapter_021_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_021_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_022 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src17_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src17_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src17_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src17_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src17_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src17_data),          //          .data
		.out_endofpacket      (width_adapter_022_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_022_src_data),             //          .data
		.out_channel          (width_adapter_022_src_channel),          //          .channel
		.out_valid            (width_adapter_022_src_valid),            //          .valid
		.out_ready            (width_adapter_022_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_022_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_023 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_017_src_valid),             //      sink.valid
		.in_channel           (id_router_017_src_channel),           //          .channel
		.in_startofpacket     (id_router_017_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_017_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_017_src_ready),             //          .ready
		.in_data              (id_router_017_src_data),              //          .data
		.out_endofpacket      (width_adapter_023_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_023_src_data),          //          .data
		.out_channel          (width_adapter_023_src_channel),       //          .channel
		.out_valid            (width_adapter_023_src_valid),         //          .valid
		.out_ready            (width_adapter_023_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_023_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_024 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src18_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src18_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src18_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src18_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src18_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src18_data),          //          .data
		.out_endofpacket      (width_adapter_024_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_024_src_data),             //          .data
		.out_channel          (width_adapter_024_src_channel),          //          .channel
		.out_valid            (width_adapter_024_src_valid),            //          .valid
		.out_ready            (width_adapter_024_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_024_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_025 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_018_src_valid),             //      sink.valid
		.in_channel           (id_router_018_src_channel),           //          .channel
		.in_startofpacket     (id_router_018_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_018_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_018_src_ready),             //          .ready
		.in_data              (id_router_018_src_data),              //          .data
		.out_endofpacket      (width_adapter_025_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_025_src_data),          //          .data
		.out_channel          (width_adapter_025_src_channel),       //          .channel
		.out_valid            (width_adapter_025_src_valid),         //          .valid
		.out_ready            (width_adapter_025_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_025_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (92),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (102),
		.OUT_PKT_BYTE_CNT_L            (99),
		.OUT_PKT_TRANS_COMPRESSED_READ (93),
		.OUT_PKT_BURST_SIZE_H          (109),
		.OUT_PKT_BURST_SIZE_L          (107),
		.OUT_PKT_RESPONSE_STATUS_H     (135),
		.OUT_PKT_RESPONSE_STATUS_L     (134),
		.OUT_PKT_TRANS_EXCLUSIVE       (98),
		.OUT_PKT_BURST_TYPE_H          (111),
		.OUT_PKT_BURST_TYPE_L          (110),
		.OUT_ST_DATA_W                 (136),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_026 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src19_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src19_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src19_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src19_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src19_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src19_data),          //          .data
		.out_endofpacket      (width_adapter_026_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_026_src_data),             //          .data
		.out_channel          (width_adapter_026_src_channel),          //          .channel
		.out_valid            (width_adapter_026_src_valid),            //          .valid
		.out_ready            (width_adapter_026_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_026_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (92),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (102),
		.IN_PKT_BYTE_CNT_L             (99),
		.IN_PKT_TRANS_COMPRESSED_READ  (93),
		.IN_PKT_BURSTWRAP_H            (106),
		.IN_PKT_BURSTWRAP_L            (103),
		.IN_PKT_BURST_SIZE_H           (109),
		.IN_PKT_BURST_SIZE_L           (107),
		.IN_PKT_RESPONSE_STATUS_H      (135),
		.IN_PKT_RESPONSE_STATUS_L      (134),
		.IN_PKT_TRANS_EXCLUSIVE        (98),
		.IN_PKT_BURST_TYPE_H           (111),
		.IN_PKT_BURST_TYPE_L           (110),
		.IN_ST_DATA_W                  (136),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_027 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_019_src_valid),             //      sink.valid
		.in_channel           (id_router_019_src_channel),           //          .channel
		.in_startofpacket     (id_router_019_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_019_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_019_src_ready),             //          .ready
		.in_data              (id_router_019_src_data),              //          .data
		.out_endofpacket      (width_adapter_027_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_027_src_data),          //          .data
		.out_channel          (width_adapter_027_src_channel),       //          .channel
		.out_valid            (width_adapter_027_src_valid),         //          .valid
		.out_ready            (width_adapter_027_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_027_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_028 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src20_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src20_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src20_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src20_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src20_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src20_data),          //          .data
		.out_endofpacket      (width_adapter_028_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_028_src_data),             //          .data
		.out_channel          (width_adapter_028_src_channel),          //          .channel
		.out_valid            (width_adapter_028_src_valid),            //          .valid
		.out_ready            (width_adapter_028_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_028_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_029 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_020_src_valid),             //      sink.valid
		.in_channel           (id_router_020_src_channel),           //          .channel
		.in_startofpacket     (id_router_020_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_020_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_020_src_ready),             //          .ready
		.in_data              (id_router_020_src_data),              //          .data
		.out_endofpacket      (width_adapter_029_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_029_src_data),          //          .data
		.out_channel          (width_adapter_029_src_channel),       //          .channel
		.out_valid            (width_adapter_029_src_valid),         //          .valid
		.out_ready            (width_adapter_029_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_029_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_030 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src21_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src21_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src21_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src21_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src21_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src21_data),          //          .data
		.out_endofpacket      (width_adapter_030_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_030_src_data),             //          .data
		.out_channel          (width_adapter_030_src_channel),          //          .channel
		.out_valid            (width_adapter_030_src_valid),            //          .valid
		.out_ready            (width_adapter_030_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_030_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_031 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_021_src_valid),             //      sink.valid
		.in_channel           (id_router_021_src_channel),           //          .channel
		.in_startofpacket     (id_router_021_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_021_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_021_src_ready),             //          .ready
		.in_data              (id_router_021_src_data),              //          .data
		.out_endofpacket      (width_adapter_031_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_031_src_data),          //          .data
		.out_channel          (width_adapter_031_src_channel),       //          .channel
		.out_valid            (width_adapter_031_src_valid),         //          .valid
		.out_ready            (width_adapter_031_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_031_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_032 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src22_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src22_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src22_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src22_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src22_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src22_data),          //          .data
		.out_endofpacket      (width_adapter_032_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_032_src_data),             //          .data
		.out_channel          (width_adapter_032_src_channel),          //          .channel
		.out_valid            (width_adapter_032_src_valid),            //          .valid
		.out_ready            (width_adapter_032_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_032_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_033 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_022_src_valid),             //      sink.valid
		.in_channel           (id_router_022_src_channel),           //          .channel
		.in_startofpacket     (id_router_022_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_022_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_022_src_ready),             //          .ready
		.in_data              (id_router_022_src_data),              //          .data
		.out_endofpacket      (width_adapter_033_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_033_src_data),          //          .data
		.out_channel          (width_adapter_033_src_channel),       //          .channel
		.out_valid            (width_adapter_033_src_valid),         //          .valid
		.out_ready            (width_adapter_033_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_033_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (56),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (66),
		.IN_PKT_BYTE_CNT_L             (63),
		.IN_PKT_TRANS_COMPRESSED_READ  (57),
		.IN_PKT_BURSTWRAP_H            (70),
		.IN_PKT_BURSTWRAP_L            (67),
		.IN_PKT_BURST_SIZE_H           (73),
		.IN_PKT_BURST_SIZE_L           (71),
		.IN_PKT_RESPONSE_STATUS_H      (99),
		.IN_PKT_RESPONSE_STATUS_L      (98),
		.IN_PKT_TRANS_EXCLUSIVE        (62),
		.IN_PKT_BURST_TYPE_H           (75),
		.IN_PKT_BURST_TYPE_L           (74),
		.IN_ST_DATA_W                  (100),
		.OUT_PKT_ADDR_H                (29),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (39),
		.OUT_PKT_BYTE_CNT_L            (36),
		.OUT_PKT_TRANS_COMPRESSED_READ (30),
		.OUT_PKT_BURST_SIZE_H          (46),
		.OUT_PKT_BURST_SIZE_L          (44),
		.OUT_PKT_RESPONSE_STATUS_H     (72),
		.OUT_PKT_RESPONSE_STATUS_L     (71),
		.OUT_PKT_TRANS_EXCLUSIVE       (35),
		.OUT_PKT_BURST_TYPE_H          (48),
		.OUT_PKT_BURST_TYPE_L          (47),
		.OUT_ST_DATA_W                 (73),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (0)
	) width_adapter_034 (
		.clk                  (clk_clk),                                //       clk.clk
		.reset                (rst_controller_reset_out_reset),         // clk_reset.reset
		.in_valid             (cmd_xbar_demux_001_src23_valid),         //      sink.valid
		.in_channel           (cmd_xbar_demux_001_src23_channel),       //          .channel
		.in_startofpacket     (cmd_xbar_demux_001_src23_startofpacket), //          .startofpacket
		.in_endofpacket       (cmd_xbar_demux_001_src23_endofpacket),   //          .endofpacket
		.in_ready             (cmd_xbar_demux_001_src23_ready),         //          .ready
		.in_data              (cmd_xbar_demux_001_src23_data),          //          .data
		.out_endofpacket      (width_adapter_034_src_endofpacket),      //       src.endofpacket
		.out_data             (width_adapter_034_src_data),             //          .data
		.out_channel          (width_adapter_034_src_channel),          //          .channel
		.out_valid            (width_adapter_034_src_valid),            //          .valid
		.out_ready            (width_adapter_034_src_ready),            //          .ready
		.out_startofpacket    (width_adapter_034_src_startofpacket),    //          .startofpacket
		.in_command_size_data (3'b000)                                  // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (29),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (39),
		.IN_PKT_BYTE_CNT_L             (36),
		.IN_PKT_TRANS_COMPRESSED_READ  (30),
		.IN_PKT_BURSTWRAP_H            (43),
		.IN_PKT_BURSTWRAP_L            (40),
		.IN_PKT_BURST_SIZE_H           (46),
		.IN_PKT_BURST_SIZE_L           (44),
		.IN_PKT_RESPONSE_STATUS_H      (72),
		.IN_PKT_RESPONSE_STATUS_L      (71),
		.IN_PKT_TRANS_EXCLUSIVE        (35),
		.IN_PKT_BURST_TYPE_H           (48),
		.IN_PKT_BURST_TYPE_L           (47),
		.IN_ST_DATA_W                  (73),
		.OUT_PKT_ADDR_H                (56),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (66),
		.OUT_PKT_BYTE_CNT_L            (63),
		.OUT_PKT_TRANS_COMPRESSED_READ (57),
		.OUT_PKT_BURST_SIZE_H          (73),
		.OUT_PKT_BURST_SIZE_L          (71),
		.OUT_PKT_RESPONSE_STATUS_H     (99),
		.OUT_PKT_RESPONSE_STATUS_L     (98),
		.OUT_PKT_TRANS_EXCLUSIVE       (62),
		.OUT_PKT_BURST_TYPE_H          (75),
		.OUT_PKT_BURST_TYPE_L          (74),
		.OUT_ST_DATA_W                 (100),
		.ST_CHANNEL_W                  (24),
		.OPTIMIZE_FOR_RSP              (1)
	) width_adapter_035 (
		.clk                  (clk_clk),                             //       clk.clk
		.reset                (rst_controller_reset_out_reset),      // clk_reset.reset
		.in_valid             (id_router_023_src_valid),             //      sink.valid
		.in_channel           (id_router_023_src_channel),           //          .channel
		.in_startofpacket     (id_router_023_src_startofpacket),     //          .startofpacket
		.in_endofpacket       (id_router_023_src_endofpacket),       //          .endofpacket
		.in_ready             (id_router_023_src_ready),             //          .ready
		.in_data              (id_router_023_src_data),              //          .data
		.out_endofpacket      (width_adapter_035_src_endofpacket),   //       src.endofpacket
		.out_data             (width_adapter_035_src_data),          //          .data
		.out_channel          (width_adapter_035_src_channel),       //          .channel
		.out_valid            (width_adapter_035_src_valid),         //          .valid
		.out_ready            (width_adapter_035_src_ready),         //          .ready
		.out_startofpacket    (width_adapter_035_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                               // (terminated)
	);

	niosII_system_irq_mapper irq_mapper (
		.clk           (clk_clk),                        //       clk.clk
		.reset         (rst_controller_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),       // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq),       // receiver1.irq
		.sender_irq    (nios2_qsys_0_d_irq_irq)          //    sender.irq
	);

endmodule
